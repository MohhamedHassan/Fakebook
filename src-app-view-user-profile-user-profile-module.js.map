{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","./src/app/view/user-profile/peope-you-may-know/peope-you-may-know.component.ts","./src/app/view/user-profile/peope-you-may-know/peope-you-may-know.component.html","./src/app/view/user-profile/user-about/user-about.component.ts","./src/app/view/user-profile/user-about/user-about.component.html","./src/app/view/user-profile/friends/friends.component.html","./src/app/view/user-profile/friends/friends.component.ts","./src/app/view/user-profile/userprofile-followers/userprofile-followers.component.html","./src/app/view/user-profile/userprofile-followers/userprofile-followers.component.ts","./src/app/view/user-profile/userprofile/userprofile.component.ts","./src/app/view/user-profile/userprofile/userprofile.component.html","./src/app/view/user-profile/photos/photos.component.html","./src/app/view/user-profile/photos/photos.component.ts","./src/app/view/user-profile/user-layout/user-layout.component.ts","./src/app/view/user-profile/user-layout/user-layout.component.html","./src/app/view/user-profile/profile-photos/profile-photos.component.html","./src/app/view/user-profile/profile-photos/profile-photos.component.ts","./src/app/view/user-profile/user-profile-routing.module.ts","./src/app/view/user-profile/add-post/add-post.component.ts","./src/app/view/user-profile/add-post/add-post.component.html","./src/app/view/user-profile/userprofile-following/userprofile-following.component.html","./src/app/view/user-profile/userprofile-following/userprofile-following.component.ts","./src/app/view/user-profile/userprofile-photos/userprofile-photos.component.html","./src/app/view/user-profile/userprofile-photos/userprofile-photos.component.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","./src/app/view/user-profile/user-profile.module.ts","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","./src/app/view/user-profile/userprofile-intro/userprofile-intro.component.ts","./src/app/view/user-profile/userprofile-intro/userprofile-intro.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AACwB;AACwI;AACtM;AACN;AACE;AACX;AACe;AACU;AACc;AAClB;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACE;AACC;AACL;;AAE1C,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAO;AAC5B;AACA;AACA;AACA,QAAQ,iEAAK,eAAe,iEAAK,EAAE,sCAAsC;AACzE,QAAQ,iEAAK,UAAU,iEAAK,EAAE,oBAAoB;AAClD,QAAQ,sEAAU,eAAe,mEAAO,qCAAqC,iEAAK,EAAE,gCAAgC;AACpH,QAAQ,sEAAU,yBAAyB,mEAAO,wCAAwC,iEAAK,EAAE,aAAa;AAC9G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oEAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAY;AACtwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,kEAAuB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,wDAAQ,MAAM,+DAAwB,mBAAmB,+DAAwB,CAAC,8DAAmB,GAAG;AAC5Y,+BAA+B,+DAAwB,EAAE,4FAA4F;AACrJ,QAAQ,yDAAkB,CAAC,mEAAe;AAC1C,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,aAAa,wEAAiC,GAAG;AACxD;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9F,KAAK,wBAAwB;AAC7B,KAAK,OAAO,8DAAY;AACxB;AACA;AACA,qBAAqB,OAAO,uDAAS,SAAS,mEAAe,GAAG,eAAe,IAAI;AACnF;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,kEAAuB,EAAE,GAAG,OAAO,+DAAwB,EAAE,GAAG;AACnI,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,wBAAwB,GAAG,OAAO,8DAAmB,EAAE,EAAE,EAAE,GAAG;AACjF,kBAAkB,uDAAS;AAC3B,mBAAmB,mEAAe,GAAG,eAAe;AACpD,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA,8CAA8C,6BAA6B;AAC3E;AACA;AACA;AACA,8CAA8C,6BAA6B;AAC3E;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA,8CAA8C,8BAA8B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,iEAAiE;AACnI,0BAA0B,+DAAwB,EAAE,gOAAgO;AACpR,QAAQ,qEAA8B,mHAAmH,sCAAsC,EAAE,kHAAkH,qCAAqC,EAAE;AAC1V,KAAK;AACL,QAAQ,4DAAqB;AAC7B,QAAQ,yDAAkB;AAC1B,QAAQ,qEAA8B;AACtC,KAAK,EAAE,aAAa,wEAAiC,kHAAkH;AACvK,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,mEAAsB,mCAAmC,cAAc,aAAa,kBAAkB,sBAAsB,cAAc,UAAU,WAAW,YAAY,mBAAmB,mBAAmB,gDAAgD,kBAAkB,oBAAoB,cAAc,eAAe,eAAe,gBAAgB,cAAc,iCAAiC,kBAAkB,gBAAgB,cAAc,oBAAoB,cAAc,aAAa,eAAe,gBAAgB,mBAAmB,uBAAuB,oBAAoB,+BAA+B,yBAAyB,kCAAkC,uBAAuB,oHAAoH,gBAAgB,wIAAwI,cAAc,iBAAiB,+BAA+B,mDAAmD,EAAE;AACplC,sDAAsD,mEAA4B;AAClF,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gDAAgD,cAAc,aAAa,kBAAkB,sBAAsB,cAAc,UAAU,WAAW,YAAY,mBAAmB,mBAAmB,gDAAgD,kBAAkB,oBAAoB,cAAc,eAAe,eAAe,gBAAgB,cAAc,iCAAiC,kBAAkB,gBAAgB,cAAc,oBAAoB,cAAc,aAAa,eAAe,gBAAgB,mBAAmB,uBAAuB,oBAAoB,+BAA+B,yBAAyB,kCAAkC,uBAAuB,oHAAoH,gBAAgB,wIAAwI,cAAc,iBAAiB;AACj+B,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,WAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA,gCAAgC,4CAAO;AACvC;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA,uDAAuD,6DAAM,qCAAqC,2DAAI;AACtG;AACA;AACA;AACA,SAAS;AACT;AACA,uDAAuD,6DAAM,qCAAqC,2DAAI;AACtG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kBAAkB,6DAAM;AACxB,qCAAqC,6DAAM,2BAA2B,6EAAc;AACpF,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,6DAAM,sCAAsC,2DAAI;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;AAC1C;AACA,uCAAuC,4DAAc;AACrD;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4CAAO;AACrD,2CAA2C,4CAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAK;AACnC;AACA,2CAA2C,gEAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kEAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAQ;AACjC;AACA,yBAAyB,6CAA6C;AACtE,SAAS;AACT,oCAAoC,mEAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yDAAW;AACzD,qDAAqD,kEAAc,gCAAgC,oCAAoC;AACvI;AACA;AACA;AACA,yEAAyE,mEAAe;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAgE;AAC7E,aAAa,wDAAwD;AACrE,aAAa;AACb;AACA;AACA,gDAAgD,gEAAc;AAC9D;AACA,yBAAyB,gEAAc;AACvC,2BAA2B,kCAAkC,+CAAE;AAC/D,aAAa;AACb;AACA,eAAe,sDAAQ,SAAS,oDAAoD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,CAAC,4DAAc,GAAG,+DAAwB,CAAC,sDAAe,GAAG,+DAAwB,aAAa,+DAAwB,aAAa,+DAAwB,CAAC,qEAAuB,GAAG,+DAAwB,aAAa,+DAAwB,CAAC,kDAAW,GAAG,+DAAwB,CAAC,kDAAW,GAAG,+DAAwB,CAAC,4DAAqB,GAAG;AACld,sBAAsB,+DAAwB,EAAE,uBAAuB;AACvE;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,kBAAkB;AACvB,KAAK,kBAAkB;AACvB,KAAK,OAAO,qEAAgB,EAAE;AAC9B,KAAK,kBAAkB;AACvB,KAAK,OAAO,kDAAI,EAAE;AAClB,KAAK,OAAO,kDAAI,EAAE;AAClB,KAAK,OAAO,4DAAc;AAC1B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,4DAAc,EAAE,GAAG,OAAO,sDAAe,EAAE,GAAG,kBAAkB,GAAG,kBAAkB,GAAG,OAAO,qEAAuB,EAAE,GAAG,kBAAkB,GAAG,OAAO,kDAAW,EAAE,GAAG,OAAO,kDAAW,EAAE,GAAG,OAAO,4DAAqB,EAAE,EAAE,EAAE,QAAQ,EAAE;AAChR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,sDAAe,CAAC,4DAAc,GAAG,sDAAe,CAAC,sDAAe,GAAG,sDAAe,CAAC,wDAAe,MAAM,sDAAe,iCAAiC,sDAAe,8BAA8B,sDAAe,iBAAiB,sDAAe,CAAC,qEAAuB,GAAG;AAC5V,kBAAkB,gEAAyB,EAAE,4CAA4C;AACzF;AACA,KAAK,OAAO,4DAAO,EAAE;AACrB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,wDAAQ,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AACxD,KAAK,sCAAsC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,uCAAuC,GAAG;AACtH,KAAK,gCAAgC,OAAO,oDAAM,uCAAuC,GAAG;AAC5F,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AAC7E,KAAK,OAAO,qEAAgB;AAC5B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,OAAO,4DAAc,EAAE,GAAG,OAAO,sDAAe,EAAE,GAAG,OAAO,wDAAe;AAC1G,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,qEAAuB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,mBAAmB,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,aAAa;AACzN,sBAAsB,+DAAwB,EAAE,wKAAwK;AACxN,QAAQ,wDAAiB,oEAAoE,mCAAmC,EAAE;AAClI,KAAK;AACL,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,mKAAmK,2CAA2C,kEAA2B,GAAG;AAC9P;AACA,KAAK,mCAAmC,OAAO,sDAAQ,EAAE,GAAG;AAC5D,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,mDAAK,+BAA+B;AAC/D,uBAAuB,OAAO,mDAAK,6BAA6B;AAChE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,wDAAiB,EAAE,GAAG,kBAAkB,EAAE,EAAE,GAAG;AACzE,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0DAA0D,kCAAkC,+DAAwB,mBAAmB,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,aAAa;AACzN,sBAAsB,+DAAwB,EAAE,4MAA4M;AAC5P,QAAQ,4DAAqB;AAC7B,KAAK,EAAE,WAAW,WAAW,gCAAgC;AAC7D;AACA,KAAK,mCAAmC,OAAO,sDAAQ,EAAE,GAAG;AAC5D,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,wDAAiB,EAAE,GAAG,kBAAkB,EAAE,EAAE,GAAG;AACzE,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,kKAAkK;AACpN,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,kKAAkK;AACpN,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,8DAAuB,EAAE,wBAAwB;AACxE,uBAAuB,8DAAuB,EAAE;AAChD;AACA;AACA;AACA,YAAY,kEAAa;AACzB,YAAY,gEAAY;AACxB,YAAY,sEAAe;AAC3B,WAAW,sEAAe,GAAG;AAC7B,cAAc,oDAAoD,gEAAyB,mBAAmB,4BAA4B,iGAAiG,EAAE,wBAAwB,SAAS,kEAAa;AAC3R,QAAQ,gEAAY;AACpB,QAAQ,sEAAe,EAAE,EAAE,wBAAwB,iGAAiG,sEAAe,EAAE,EAAE,EAAE,EAAE,EAAE;AAC7K,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA,oBAAoB,kEAAa;AACjC,oBAAoB,gEAAY;AAChC,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEsd;;AAEtd,kC;;;;;;;;;;;;AClnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;;;;;;;;;;ICCzC,0EACuD;IACnD,0EAAqC;IACjC,0EAAiC;IAC7B,qFAMsB;IAC1B,4DAAM;IACN,0EAA6B;IACzB,sEAAK;IACD,qFAKiB;IACrB,4DAAM;IAEV,4DAAM;IACN,0EAA6B;IACzB,sEAAK;IACD,qFAIiB;IACrB,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;;IA9ByD,0DAK7D;IAL6D,wIAK7D;IAKmC,0DAK3B;IAL2B,wIAK3B;IAM2B,0DAI3B;IAJ2B,wIAI3B;;;IA/BlB,wEAAsD;IAClD,0KAoCc;IAClB,qEAAe;;;IAvCnB,wEAAiE;IAC7D,2JAsCe;IACnB,qEAAe;;;IAvCoB,0DAAqB;IAArB,8FAAqB;;;;IA4C5C,0EAAmC;IAC/B,0EACgE;IAD3D,qeAA8B;;IAAnC,4DACgE;IAChE,0EAAuB;IACnB,0EAAkC;IAC9B,yEAAoD;IAAhD,oeAA8B;IAC9B,uDAEJ;;;;;IAAA,4DAAK;IACT,4DAAM;IACN,8EACmB;IADgB,gfAAqC;IAEpE,oEAAgC;IAChC,4EAAmB;IAAC,wDAAmC;;IAAA,4DAAO;IAClE,4DAAS;IACb,4DAAM;IACV,4DAAM;;;;IAdE,0DAAoD;IAApD,qRAAoD;IAI5C,0DAEJ;IAFI,4bAEJ;IAEI,0DAA0B;IAA1B,2FAA0B;IAGV,0DAAmC;IAAnC,iKAAmC;;;IAhB3E,wEAAiE;IAE7D,0KAkBc;IAClB,qEAAe;;;IArBf,0JAqBe;;;IArBgB,4FAAoB;;;;IAhD/D,yEAGkD;IAC9C,wEAAiB;IAAC,uDAAmC;;IAAA,4DAAK;IAC1D,+EAAuF;IAA/E,qVAAwC;IAC5C,4IAwCe;IACf,sNAuBc;IAClB,4DAAS;IACT,yEAA8B;IAC1B,2EACmC;IAAA,wDAAmC;;IAAA,4DAAO;IACjF,4DAAM;IACV,4DAAM;;;;IA1EN,8KAA4D;IAEtC,0DAAmC;IAAnC,+JAAmC;IACU,0DAAuB;IAAvB,uFAAuB;IACnE,0DAA8B;IAA9B,gGAA8B;IAoEV,0DAAmC;IAAnC,sJAAmC;;ADjE9E,mDAAU,CAAC,GAAG,CAAC,CAAC,sDAAU,EAAE,CAAC,CAAC;AAMvB,MAAM,wBAAwB;IAUnC,YAAsB,gBAAyC,EACrD,EAAqB,EACtB,mBAAsC,EACrC,OAAe,EACf,MAAa,EACb,sBAA8C,EAC9C,SAAsB,EACtB,aAAkC,EAClC,SAA0B;QARd,qBAAgB,GAAhB,gBAAgB,CAAyB;QACrD,OAAE,GAAF,EAAE,CAAmB;QACtB,wBAAmB,GAAnB,mBAAmB,CAAmB;QACrC,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAO;QACb,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,cAAS,GAAT,SAAS,CAAa;QACtB,kBAAa,GAAb,aAAa,CAAqB;QAClC,cAAS,GAAT,SAAS,CAAiB;QAjBpC,SAAI,GAAQ,CAAC;QACb,4BAAuB,GAAY,IAAI;QACvC,kBAAa,GAAQ,KAAK;QAC1B,qBAAgB,GAAQ,EAAE;QAC1B,uBAAkB,GAAQ,EAAE;QAE5B,kBAAa,GAAO,EAAE;QAyBtB,iBAAY,GAAQ;YAClB,aAAa,EAAE,KAAK;YACpB,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,sCAAsC;YAClD,UAAU,EAAE,MAAM;YAElB,WAAW,EAAE;gBACX,CAAC,EAAE;oBACD,aAAa,EAAE,CAAC;oBAChB,YAAY,EAAE,EAAE;iBACjB;gBACD,GAAG,EAAE;oBACH,aAAa,EAAE,CAAC;oBAChB,YAAY,EAAE,EAAE;iBACjB;gBACD,IAAI,EAAE;oBACJ,aAAa,EAAE,CAAC;oBAChB,YAAY,EAAE,EAAE;iBACjB;aACF;SAEF;QAlCG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpF,IAAI,CAAC,wBAAwB,GAAC,GAAG;QACpC,CAAC,CAAC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3D,IAAI,CAAC,wBAAwB,GAAC,GAAG;QACpC,CAAC,CAAC,CAAC;IACN,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAC,CAAC;QAChC,IAAI,CAAC,mBAAmB,EAAE;IAC5B,CAAC;IAuBD,yBAAyB;QACvB,IAAI,CAAC,IAAI,IAAI,EAAE;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CACzD,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;YAClC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE;QACtC,CAAC,EACD,GAAG,CAAC,EAAE,GAAG,CAAC,CACX,CACF;IACH,CAAC;IACC,4DAA4D;IAC5D,SAAS,CAAC,EAAO;QACf,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0DAA0D;IAC1D,mBAAmB;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CACjD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,gBAAgB,GAAG,GAAG;YAC3B,IAAI,CAAC,uBAAuB,GAAG,KAAK;QACtC,CAAC,EACD,GAAG,CAAC,EAAE;QACN,CAAC,CACF,CACF;IACH,CAAC;IACC,4BAA4B;IAChC,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI;QACzB,IAAI,CAAC,uBAAuB,GAAG,IAAI;QACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAS,CACxD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAC,EAAC,EAAE,EAAC,CAAC,CAAC,IAAI,CACzC,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,mBAAmB,EAAE;gBAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAQ,EAAE,EAAE;;oBACX,IAAI,CAAC,mBAAmB,CAAC,0BAA0B,GAAG,KAAK;oBAC3D,IAAI,CAAC,mBAAmB,CAAC,SAAS,SAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,0CAAE,SAAS;oBAC/D,IAAI,CAAC,aAAa,GAAG,KAAK;oBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,EAAG,IAAI,CAAC,wBAAwB,CAAC;gBAClF,CAAC,EACD,GAAG,CAAC,EAAE,GAAG,CAAC,CACX,CACF;YACH,CAAC,EAAG,GAAG,CAAC,EAAE,GAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAC,CAC9C;QAEH,CAAC,EACD,GAAG,CAAC,EAAE,GAAG,CAAC,CACX,CACF;IACH,CAAC;IACD,0BAA0B;IAC1B,YAAY,CAAC,GAAQ,EAAE,GAAQ;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;YAC5B,kBAAkB,EAAE,MAAM;YAC1B,gBAAgB,EAAE,QAAQ;YAC1B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC/B,GAAG,CAAC,WAAW,EAAE;QACnB,CAAC,CAAC;IACJ,CAAC;;gGA/HU,wBAAwB;wGAAxB,wBAAwB;;;;;;QCfrC,sHA4EM;;QA3EL,mIAA8B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAKA;;;;;;;;;;;;;ICEhD,yEAEwD;IAAxD,oVAA0B;IAA8B,uDAAc;IAAA,4DAAK;;;IAAhD,mFAA4B;IAAC,0DAAc;IAAd,sGAAc;;;IAO1E,0EAAuG;IACnG,0EAAsB;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,iEAAW;IAAA,4DAAM;IAC5E,4DAAM;;;;IAKM,0EAAkE;IAC9D,0EAAoB;IAChB,mEAAqC;IACxC,0EAAkB;IACd,2EAA2B;IAAA,uDAA0D;;IAAA,4DAAO;IAC5F,4EAA8B;IAAA,uDAAiC;;IAAA,4DAAQ;IAC3E,4DAAM;IACN,uEAAK;IACF,4EAA2B;IAAA,wDAAyD;;IAAA,4DAAO;IAC3F,6EAA8B;IAAA,wDAAgC;;IAAA,4DAAQ;IAC1E,4DAAM;IACN,4DAAM;IACN,yEAAmD;IAAhD,kUAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC1D,4DAAM;;;IAT6B,0DAA0D;IAA1D,4OAA0D;IACvD,0DAAiC;IAAjC,mJAAiC;IAGrC,0DAAyD;IAAzD,4OAAyD;IACtD,0DAAgC;IAAhC,oJAAgC;;;;IAQzE,2EAEgC;IAD/B,qWAA+C;IAE7C,0EAA0B;IACtB,uEAAoH;;IACpH,uEAAuH;;IAC3H,4DAAM;IACN,sEAAK;IACD,6EAAyE;IAAnD,+TAAoB,CAAC,IAAE,KAAK,KAAC;IAAsB,uDAA8B;;IAAA,4DAAS;IAChH,8EAAkF;IAAA,wDAA4B;;IAAA,4DAAS;IAC3H,4DAAM;IACT,4DAAO;;;IAXD,uFAAsB;IAI0B,0DAA+C;IAA/C,sKAA+C;IAChD,0DAA8C;IAA9C,qKAA8C;IAGnB,0DAA8B;IAA9B,iJAA8B;IAChF,0DAA6B;IAA7B,8FAA6B;IAA8B,0DAA4B;IAA5B,gJAA4B;;;;;IAOnH,0EAA+D;IAC9D,0EAAoB;IACjB,sEAAK;IACJ,mEAGsB;IACvB,4DAAM;IACL,0EAAkB;IACd,2EAAsB;IAAA,uDAAwD;;IAAA,4DAAO;IACrF,4EAA8B;IAAA,uDAA8B;;IAAA,4DAAQ;IACxE,4DAAM;IACP,4DAAM;IACN,yEAAmD;IAAhD,kUAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC3D,4DAAM;;;IAXE,0DAGC;IAHD,sXAGC;IAGsB,0DAAwD;IAAxD,yOAAwD;IAChD,0DAA8B;IAA9B,iJAA8B;;;;IAMvE,2EAEmC;IADlC,wWAAiD;IAE/C,0EAA0B;IACtB,6EAA0F;IACtF,6EAAuB;IAAA,uDAA6B;;IAAA,4DAAS;IAC7D,6EAAqB;IAAA,uDAA2B;;IAAA,4DAAS;IAC7D,4DAAS;IACb,4DAAM;IACN,sEAAK;IACD,8EAAyE;IAAnD,iUAAoB,CAAC,IAAE,KAAK,KAAC;IAAsB,wDAA8B;;IAAA,4DAAS;IAChH,8EAAoF;IAAA,wDAA4B;;IAAA,4DAAS;IAC7H,4DAAM;IACT,4DAAO;;;IAbD,yFAAwB;IAKI,0DAA6B;IAA7B,+IAA6B;IAC/B,0DAA2B;IAA3B,6IAA2B;IAIqB,0DAA8B;IAA9B,kJAA8B;IAChF,0DAA+B;IAA/B,gGAA+B;IAA8B,0DAA4B;IAA5B,gJAA4B;;;;IAO9H,0EAA+D;IAC7D,0EAAoB;IACjB,mEAAoC;IACnC,0EAAkB;IACd,2EAA2B;IAAA,uDAAqF;;IAAA,4DAAO;IACvH,4EAA8B;IAAA,uDAAiC;;IAAA,4DAAQ;IAC3E,4DAAM;IACP,4DAAM;IACN,yEAAmD;IAAhD,mUAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC5D,4DAAM;;;IAL+B,0DAAqF;IAArF,iRAAqF;IAClF,0DAAiC;IAAjC,mJAAiC;;;;IAMnF,wEAAoD;IAChD,2EAEC;IADD,gXAAiD;IAEjD,iFAAkB;IACd,4EAOI;IADA,kWAAkB;;IANtB,4DAOI;IACJ,uFAAoE;IACpE,sFAAqC;IACvC,4DAAiB;IACjB,sEAAK;IACH,6EAAyE;IAAnD,wUAAoB,CAAC,IAAE,KAAK,KAAC;IAAsB,wDAA8B;;IAAA,4DAAS;IAChH,8EAAwF;IAAA,wDAA4B;;IAAA,4DAAS;IACjI,4DAAM;IACN,4DAAO;IAEX,qEAAe;;;;IArBL,0DAA2B;IAA3B,4FAA2B;IASzB,0DAAkD;IAAlD,wKAAkD;IADlD,+EAAoB;IAIS,0DAAU;IAAV,qEAAU;IAI8B,0DAA8B;IAA9B,kJAA8B;IAC/E,0DAAkC;IAAlC,mGAAkC;IAA8B,0DAA4B;IAA5B,gJAA4B;;;;IAUxG,0EAA+D;IAC9D,0EAAoB;IACjB,sEAAK;IACD,mEAA0B;IAC9B,4DAAM;IACL,0EAAkB;IACd,2EAAsB;IAAA,uDAAsC;;IAAA,4DAAO;IACnE,4EAA8B;IAAA,uDAAgC;;IAAA,4DAAQ;IAC1E,4DAAM;IACP,4DAAM;IACN,yEAAwE;IAArE,2TAAoB,CAAC,IAAE,IAAI,qCAAmB,EAAE,IAAC;IAAoB,4DAAI;IAChF,4DAAM;;IALyB,0DAAsC;IAAtC,wJAAsC;IAC9B,0DAAgC;IAAhC,mJAAgC;;;IAkBtE,wEAAyD;IAAA,uDAAqB;IAAA,4DAAI;;;IAAzB,0DAAqB;IAArB,0FAAqB;;;;IAZjF,2EAEqC;IADpC,sWAA+C;IAE7C,0EAA0B;IACvB,uEAAqH;;IACrH,qEAAwB;IACxB,uEAAoH;;IACvH,4DAAM;IACN,sEAAK;IACD,6EAAyE;IAAnD,gUAAoB,CAAC,IAAE,KAAK,KAAC;IAAsB,uDAA8B;;IAAA,4DAAS;IAChH,8EAA4F;IAAA,wDAA4B;;IAAA,4DAAS;IACrI,4DAAM;IACN,4HAAkF;IACrF,4DAAO;;;IAbD,iGAAgC;IAIE,0DAA6C;IAA7C,oKAA6C;IAE1C,0DAAyC;IAAzC,gKAAyC;IAGJ,0DAA8B;IAA9B,kJAA8B;IAChF,0DAAuC;IAAvC,wGAAuC;IAA8B,0DAA4B;IAA5B,gJAA4B;IAE5F,0DAAuB;IAAvB,2FAAuB;;;IAvIpE,0EAAyD;IACrD,qEAAI;IAAA,uDAAiC;;IAAA,4DAAK;IAC1C,0EAA0B;IACtB,oNAec;IAGb,0HAWO;IACZ,4DAAM;IAEN,0EAA4B;IACxB,oNAgBc;IACb,4HAaO;IACZ,4DAAM;IAEN,2EAA8B;IACjC,qNAWc;IACvB,4IAsBe;IAEF,4DAAM;IAEN,2EAA4B;IACzB,qNAae;IACb,4HAaO;IACZ,4DAAM;IACN,2EAAyB;IACtB,2EAAoB;IAChB,oEAA+B;IAC/B,2EAAkB;IACd,4EAA2B;IAAA,wDAA2C;IAAA,4DAAO;IAC7E,6EAA8B;IAAA,wDAA6B;;IAAA,4DAAQ;IACvE,4DAAM;IACd,4DAAM;IACb,4DAAM;IACH,4DAAM;;;;;;;IAlJE,0DAAiC;IAAjC,oJAAiC;IAsB/B,0DAAoB;IAApB,sFAAoB;IAgCpB,0DAAoB;IAApB,sFAAoB;IA2BvB,0DAAoB;IAApB,sFAAoB;IA2ChB,0DAAoB;IAApB,sFAAoB;IAiBY,0DAA2C;IAA3C,qKAA2C;IACxC,0DAA6B;IAA7B,iJAA6B;;;;IAkB/D,6EAIyC;IADzC,gVAAkC,EAAE,IAAE,MAAM,UAAE,2BAAmB,IAAC;IACzB,uDAA8B;;IAAA,4DAAS;;IAAvC,0DAA8B;IAA9B,gJAA8B;;;;IAf/E,2EAGsB;IADtB,qWAA+C;IAE3C,uEAAyF;;IACzF,gEAAI;IACJ,0EAAwC;IACpC,6EAGwD;IAFxD,+TAAoB,CAAC,IAAE,KAAK,KAAE;IAE0B,uDAA8B;;IAAA,4DAAS;IAC/F,mIAIgF;IAChF,6EAA+E;IAAA,wDAA4B;;IAAA,4DAAS;IACxH,4DAAM;IACV,4DAAO;;;IAjBP,0FAAyB;IAGsB,0DAA6C;IAA7C,oKAA6C;IAMlF,0DAAqD;IAArD,2KAAqD;IAAC,0DAA8B;IAA9B,iJAA8B;IAErF,0DAA2C;IAA3C,uKAA2C;IAItB,0DAAgC;IAAhC,iGAAgC;IAAyB,0DAA4B;IAA5B,gJAA4B;;;;IAM/G,0EAE6D;IACzD,0EAAoB;IAChB,mEAAiC;IACjC,yEAAiB;IAAA,uDAAyE;;IAAA,4DAAK;IACnG,4DAAM;IACN,wEAAmD;IAAhD,0TAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC1D,4DAAM;;;IAHkB,0DAAyE;IAAzE,sQAAyE;;;;IA7B1G,0EAAkD;IAC9C,qEAAI;IAAA,uDAA4B;;IAAA,4DAAK;IACrC,0HAkBO;IACH,wEAE8B;IAA7B,kTAAoB,CAAC,IAAE,IAAI,KAAC;IAAC,mEAA2B;IAAC,2EAAkC;IAAA,uDAAoC;;IAAA,4DAAO;IAAA,4DAAI;IAC3I,wHAQO;IACf,4DAAM;;;IAhCE,0DAA4B;IAA5B,8IAA4B;IAI/B,0DAAmB;IAAnB,sFAAmB;IAiBhB,0DAAiE;IAAjE,iMAAiE;IAC2B,0DAAoC;IAApC,sJAAoC;IAE/H,0DAA6D;IAA7D,gMAA6D;;;;IAsB1D,6EAGyC;IADzC,oVAAsC,EAAE,IAAE,UAAU,UAAE,2BAAmB,IAAC;IACjC,uDAA8B;;IAAA,4DAAS;;IAAvC,0DAA8B;IAA9B,gJAA8B;;;;IAd/E,2EAIC;IAFD,qWAA+C;IAG3C,2EAA0G;;IAC1G,gEAAI;IACJ,0EAAwC;IACpC,6EAEmD;IAAnD,+TAAoB,CAAC,IAAE,KAAK,KAAC;IAAsB,uDAA8B;;IAAA,4DAAS;IAC1F,mIAGgF;IAChF,8EAEuE;IAAA,wDAA4B;;IAAA,4DAAS;IAChH,4DAAM;IACV,4DAAO;;;IAlBP,0FAAyB;IAImC,0DAAiD;IAAjD,wKAAiD;IAIrG,0DAAyD;IAAzD,+KAAyD;IACN,0DAA8B;IAA9B,iJAA8B;IAEhF,0DAA+C;IAA/C,2KAA+C;IAKlC,0DAAgC;IAAhC,iGAAgC;IAAyB,0DAA4B;IAA5B,gJAA4B;;;;IAMvG,0EAE6D;IACzD,0EAAoB;IAChB,mEAA4B;IAC5B,yEAAiB;IAAA,uDAA6E;;IAAA,4DAAK;IACvG,4DAAM;IACN,wEAAmD;IAAhD,0TAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC1D,4DAAM;;;IAHkB,0DAA6E;IAA7E,0QAA6E;;;;IA9B9G,0EAAmD;IAC/C,qEAAI;IAAA,uDAAkC;;IAAA,4DAAK;IAC3C,0HAmBO;IACH,wEAE6B;IAA7B,kTAAoB,CAAC,IAAE,IAAI,KAAC;IAAC,mEAA2B;IAAC,2EAAkC;IAAA,uDAAsC;;IAAA,4DAAO;IAAA,4DAAI;IAC5I,wHAQO;IACf,4DAAM;;;IAjCE,0DAAkC;IAAlC,oJAAkC;IAIrC,0DAAmB;IAAnB,sFAAmB;IAkBhB,0DAAqE;IAArE,qMAAqE;IACsB,0DAAsC;IAAtC,wJAAsC;IAEhI,0DAAiE;IAAjE,oMAAiE;;;;IAsB9D,6EAGyC;IADzC,mVAAqC,EAAE,IAAE,WAAW,UAAE,4BAAoB,IAAC;IAClC,uDAA8B;;IAAA,4DAAS;;IAAvC,0DAA8B;IAA9B,gJAA8B;;;;IAd/E,2EAIC;IAFD,sWAAgD;IAG5C,2EAA6F;;IAC7F,gEAAI;IACJ,0EAAwC;IACpC,6EAEkE;IAAnD,+TAAoB,CAAC,IAAE,KAAK,KAAC;IAAsB,uDAA8B;;IAAA,4DAAS;IACzG,mIAGgF;IAChF,8EAAgF;IAAA,wDAA4B;;IAAA,4DAAS;IACzH,4DAAM;IACV,4DAAO;;;IAhBP,2FAA0B;IAI4B,0DAA0C;IAA1C,iKAA0C;IAIxF,0DAAsD;IAAtD,4KAAsD;IACY,0DAA8B;IAA9B,iJAA8B;IAE/F,0DAA4C;IAA5C,wKAA4C;IAGvB,0DAAiC;IAAjC,kGAAiC;IAAyB,0DAA4B;IAA5B,gJAA4B;;;;IAOhH,0EAE6D;IACzD,0EAAuC;IACnC,sEAAK;IACD,qEAAsD;IAC1D,4DAAM;IACN,yEAAiB;IAAA,uDAA4E;;IAAA,4DAAK;IACtG,4DAAM;IACN,wEAAmD;IAAhD,0TAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC1D,4DAAM;;;IAHkB,0DAA4E;IAA5E,yQAA4E;;;;IA/B7G,0EAAmD;IAC/C,qEAAI;IAAA,uDAA2B;;IAAA,4DAAK;IACpC,0HAiBO;IACH,wEAE6B;IAA7B,kTAAoB,CAAC,IAAE,IAAI,KAAC;IAC5B,mEAA2B;IAAC,2EAAkC;IAAA,uDAA+B;;IAAA,4DAAO;IAAA,4DAAI;IACxG,wHAUO;IAGf,4DAAM;;;IApCE,0DAA2B;IAA3B,6IAA2B;IAI9B,0DAAmB;IAAnB,sFAAmB;IAgBhB,0DAAkE;IAAlE,kMAAkE;IAEJ,0DAA+B;IAA/B,iJAA+B;IAE5F,0DAA8D;IAA9D,iMAA8D;;;;IAoC3D,6EAGyC;IADzC,4VAA6C,EAAE,IAAE,cAAc,UAAE,6BAAqB,IAAC;IAC9C,uDAA8B;;IAAA,4DAAS;;IAAvC,0DAA8B;IAA9B,gJAA8B;;;;IAxB/E,2EAIC;IAFD,uWAAiD;IAI7C,6EAEoD;IAChD,6EAAuB;IAAA,uDAA8B;;IAAA,4DAAS;IAC9D,6EAAwB;IAAA,uDAA+B;;IAAA,4DAAS;IAChE,6EAAwB;IAAA,uDAA+B;;IAAA,4DAAS;IAChE,8EAA0B;IAAA,wDAAiC;;IAAA,4DAAS;IACpE,8EAAyB;IAAA,wDAAgC;;IAAA,4DAAS;IAClE,8EAAwB;IAAA,wDAA+B;;IAAA,4DAAS;IACpE,4DAAS;IACT,iEAAI;IACJ,2EAAwC;IACpC,8EAEiE;IAAnD,gUAAoB,CAAC,IAAE,KAAK,KAAC;IAAsB,wDAA8B;;IAAA,4DAAS;IACxG,qIAGgF;IAChF,8EAAiF;IAAA,wDAA4B;;IAAA,4DAAS;IAC1H,4DAAM;IACV,4DAAO;;;IA1BP,4FAA2B;IAQI,0DAA8B;IAA9B,iJAA8B;IAC7B,0DAA+B;IAA/B,kJAA+B;IAC/B,0DAA+B;IAA/B,mJAA+B;IAC7B,0DAAiC;IAAjC,qJAAiC;IAClC,0DAAgC;IAAhC,oJAAgC;IACjC,0DAA+B;IAA/B,mJAA+B;IAKvD,0DAAgE;IAAhE,sLAAgE;IACC,0DAA8B;IAA9B,kJAA8B;IAE9F,0DAAsD;IAAtD,kLAAsD;IAGjC,0DAAkC;IAAlC,mGAAkC;IAAyB,0DAA4B;IAA5B,gJAA4B;;;;IAQ7G,0EAE6D;IACzD,0EAAuC;IACnC,mEAAmD;IACnD,yEAAiB;IAAC,uDAAgE;;IAAA,4DAAK;IAC3F,4DAAM;IACN,wEAAmD;IAAhD,0TAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC1D,4DAAM;;;IAHmB,0DAAgE;IAAhE,4PAAgE;;;;IAxCtG,0EAAmD;IAC/C,qEAAI;IAAA,uDAAgC;;IAAA,4DAAK;IACzC,0HA2BO;IAEH,wEAE6B;IAA7B,kTAAoB,CAAC,IAAE,IAAI,KAAC;IAAC,mEAA2B;IAAC,2EAAkC;IACvF,uDAAmC;;IAAA,4DAAO;IAAA,4DAAI;IAC9C,wHAQO;IAGnB,4DAAM;;;IA7CE,0DAAgC;IAAhC,kJAAgC;IAInC,0DAAmB;IAAnB,sFAAmB;IA2BhB,0DAA4E;IAA5E,4MAA4E;IAExE,0DAAmC;IAAnC,+JAAmC;IAElC,0DAAwE;IAAxE,2MAAwE;;;;IAuBzE,6EAIyC;IADzC,uVAAsC,EAAE,IAAE,UAAU,UAAE,gCAAuB,IAAC;IACrC,uDAA8B;;IAAA,4DAAS;;IAAvC,0DAA8B;IAA9B,gJAA8B;;;;IAd/E,2EAGsB;IADtB,6WAAmD;IAE/C,uEAA6F;;IAC7F,gEAAI;IACJ,0EAAwC;IACpC,6EAEiE;IAAjE,kUAAoB,CAAC,IAAE,KAAK,KAAC;IAAoC,uDAA8B;;IAAA,4DAAS;IACxG,mIAIgF;IAChF,6EAAmF;IAAA,wDAA4B;;IAAA,4DAAS;IAC5H,4DAAM;IACV,4DAAO;;;IAhBP,8FAA6B;IAGqB,0DAA8C;IAA9C,qKAA8C;IAIxF,0DAAyD;IAAzD,+KAAyD;IACQ,0DAA8B;IAA9B,iJAA8B;IAE9F,0DAA+C;IAA/C,2KAA+C;IAIxC,0DAAoC;IAApC,qGAAoC;IAAuC,0DAA4B;IAA5B,gJAA4B;;;;IAMnH,0EAE6D;IACzD,0EAAuC;IACnC,mEAAoC;IACpC,yEAAiB;IAAC,uDAAyD;;IAAA,4DAAK;IACpF,4DAAM;IACN,wEAAmD;IAAhD,6TAAoB,CAAC,IAAE,IAAI,KAAC;IAAoB,4DAAI;IAC1D,4DAAM;;;IAHmB,0DAAyD;IAAzD,qPAAyD;;;;IA5B3F,0EAAmD;IAC/C,qEAAI;IAAA,uDAAgC;;IAAA,4DAAK;IACzC,0HAiBO;IACH,wEAE6B;IAA7B,qTAAoB,CAAC,IAAE,IAAI,KAAC;IAAC,mEAA2B;IAAC,2EAAkC;IAAA,uDAAmC;;IAAA,4DAAO;IAAA,4DAAI;IACzI,wHAQO;IACf,4DAAM;;;IA/BE,0DAAgC;IAAhC,kJAAgC;IAInC,0DAAmB;IAAnB,sFAAmB;IAgBhB,0DAAqE;IAArE,qMAAqE;IACsB,0DAAmC;IAAnC,qJAAmC;IAE7H,0DAAiE;IAAjE,oMAAiE;;AD7UnF,MAAM,kBAAkB;IAmB7B,YAAmB,mBAAsC,EAC/C,KAAW,EACX,EAAc,EACd,WAA8B,EAC9B,QAAkB,EAClB,SAAsB,EACtB,SAA0B;QANjB,wBAAmB,GAAnB,mBAAmB,CAAmB;QAC/C,UAAK,GAAL,KAAK,CAAM;QACX,OAAE,GAAF,EAAE,CAAY;QACd,gBAAW,GAAX,WAAW,CAAmB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAa;QACtB,cAAS,GAAT,SAAS,CAAiB;QAhBpC,sBAAiB,GAAQ,EAAE;QAI3B,uBAAkB,GAAS,IAAI;QAC/B,eAAU,GAAO,EAAE;QAInB,kBAAa,GAAU,EAAE,CAAC;QAUtB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAC3C,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,GAAG,CAC/B,CACF;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CACtC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAC1B,CACF;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,SAAS,CACzC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAC7B,CACF;IAEJ,CAAC;IACJ,aAAa,CAAC,KAAS;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAC,CAAC,EAAE,EAAE;YAC5C,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,GAAC,KAAK;SAClC;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,GAAC,IAAI;IACtC,CAAC;IACD,IAAI,IAAI,KAAI,OAAO,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,GAAC;IAChE,QAAQ;QACR,IAAI,CAAC,UAAU,CAAC,MAAM,GAAC,EAAE;QACzB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;;YACV,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI;YAC9C,IAAI,CAAC,IAAI,SAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS;YACzD,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,WAAW,EAAE,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;UACxJ,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,WAAW,EAAE,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACtI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC5B,SAAS,EAAC,CAAC,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,iFAAY,CAAC,CAAC;gBACnG,QAAQ,EAAC,CAAC,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,iFAAY,CAAC,CAAC;aAClG,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACjC,SAAS,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;aACpC,CAAC;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC7B,MAAM,EAAC,CAAC,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,MAAM,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;aAChF,CAAC;YACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAChC,KAAK,EAAC,CAAC,GAAG,WAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,KAAK,KAAI,EAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,iFAAY,CAAC,CAAC;aAClG,CAAC;YACF,IAAI,CAAC,WAAW,GAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAChC,IAAI,EAAC,CAAC,GAAG,WAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,IAAI,KAAI,EAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,iFAAY,CAAC,CAAC;aAChG,CAAC;YACF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,QAAQ,EAAC,CAAC,GAAG,WAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,KAAI,EAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,iFAAY,CAAC,CAAC;aACxG,CAAC;YACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACjC,eAAe,EAAC,CAAC,GAAG,WAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,eAAe,KAAI,EAAE,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;aACvG,CAAC;YACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC/B,QAAQ,EAAC,CAAC,GAAG,WAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,KAAI,EAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,iFAAY,CAAC,CAAC;aACxG,CAAC;YACF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACtC,QAAQ,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;gBACjC,WAAW,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;aACrC,CAAC;QACJ,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,kBAAkB,GAAC,KAAK;QAC/B,CAAC,CAEF,CACD;IACF,CAAC;IACD,eAAe,CAAC,KAAS;QACxB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;QACjE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAC/B,CAAC;IACH,kBAAkB,CAAC,KAAS;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,SAAS,CAClD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,kBAAkB,GAAC,IAAI;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE;gBAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAC,KAAK;YACzE,IAAI,CAAC,kBAAkB,EAAE;QAC3B,CAAC,EAED,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE;gBAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAC,KAAK;QAC3E,CAAC,CACF,CACD;IACJ,CAAC;IACD,eAAe,CAAC,KAAS;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAC/C,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,kBAAkB,GAAC,IAAI;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE;gBAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAC,KAAK;YACxE,IAAI,CAAC,kBAAkB,EAAE;QAC5B,CAAC,EAED,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE;gBAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAC,KAAK;QAC3E,CAAC,CACF,CACF;IAED,CAAC;IAED,kBAAkB,CAAC,KAAS,EAAC,IAAQ;QACnC,IAAI,CAAC,kBAAkB,GAAC,IAAI;QAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAClD,GAAG,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;YAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE;gBAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAC,KAAK;YACzE,IAAI,CAAC,kBAAkB,EAAE;QAC1B,CAAC,EACD,GAAG,CAAC,EAAE;YACL,IAAI,CAAC,kBAAkB,GAAC,KAAK;QAC9B,CAAC,CACF,CACF;IACH,CAAC;IAED,kBAAkB;QACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;;YACV,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI;YAC9C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,WAAW,EAAE,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACxJ,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,WAAW,EAAE,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACxI,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,kBAAkB,GAAC,KAAK;QAC/B,CAAC,CAEF,CACD;IACF,CAAC;IACD,YAAY,CAAC,GAAO;QAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,EAAG,IAAI,CAAC,OAAO,EAAE;YACvC,kBAAkB,EAAE,MAAM;YAC1B,gBAAgB,EAAE,QAAQ;YAC1B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IACD,cAAc,CAAC,KAAS;QAEtB,IAAI,CAAC,kBAAkB,GAAC,IAAI;QAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5D,CAAC,GAAO,EAAE,EAAE;YACV,KAAK,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,IAAI,CAAC,iBAAiB,GAAC,IAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM;QAClD,CAAC,EAAG,GAAG,CAAC,EAAE;;YACR,KAAK,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,kBAAkB,GAAC,KAAK;YAC7B,IAAI,CAAC,iBAAiB,SAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK,0CAAE,KAAK;QAC1C,CAAC,CACF,CACF;IACH,CAAC;IACD,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC/B,GAAG,CAAC,WAAW,EAAE;QACnB,CAAC,CAAC;IACJ,CAAC;;oFAtMY,kBAAkB;kGAAlB,kBAAkB;QCd/B,yEAAiG;QAC7F,yEAA2B;QAIvB,yEAA8B;QAC1B,yEAAiD;QAC7C,wEAAkC;QAAA,uDAA8B;;QAAA,4DAAK;QACrE,wEAA8B;QAC1B,4GAE2E;QAC/E,4DAAK;QACT,4DAAM;QACV,4DAAM;QACN,yEAA2B;QAEvB,0EAAyE;QACrE,gHAEM;QACN,mHAmJM;QACN,kHAiCM;QACN,kHAkCM;QACN,kHAqCM;QACN,kHA8CM;QACN,kHAgCM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAxW8B,wKAA4D;QAO9C,0DAA8B;QAA9B,gJAA8B;QAG3C,0DAAgB;QAAhB,qFAAgB;QAQ/B,0DAAwB;QAAxB,wFAAwB;QAGxB,0DAA4B;QAA5B,4FAA4B;QAoJ5B,0DAA4B;QAA5B,4FAA4B;QAkC3B,0DAA4B;QAA5B,4FAA4B;QAmC5B,0DAA4B;QAA5B,4FAA4B;QAsC5B,0DAA4B;QAA5B,4FAA4B;QA+C5B,0DAA4B;QAA5B,4FAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICnTnC,0EAEsB;IACrB,0EAEsD;IACtD,0EAAkE;IAC9D,0EACoC;IAChC,qFAKsB;IAC1B,4DAAM;IACN,0EAAiC;IAC7B,sEAAK;IACD,qFAKiB;IACrB,4DAAM;IACN,sEAAK;IACD,qFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACH,4DAAM;;;IA7BL,0DAA2D;IAA3D,4KAA2D;IAKA,0DAIvD;IAJuD,wIAIvD;IAK6B,0DAK3B;IAL2B,wIAK3B;IAIU,0DAAgE;IAAhE,wIAAgE;;;IA5BrF,wEAAiF;IAC7E,8HAiCM;IAET,qEAAe;;;IAlCK,0DAAe;IAAf,wFAAe;;;;IAyDN,0EAA+E;IAC3E,0EAAuC;IACvC,sEAAK;IACH,0EAEgB;IACZ,qEAE2E;;IAC/E,4DAAM;IACR,4DAAM;IACF,0EAAkB;IACd,yEAEa;IAAA,uDAGC;;;;;IAAA,4DAAK;IACnB,qEAAG;IAAA,oEAAmC;IAAC,4EAAmB;IAAA,wDAA8B;;IAAA,4DAAO;IAC3F,wDAAyD;;IAAA,4DAAI;IACrE,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAlBA,0DAAmC;IAAnC,sLAAmC;IAIf,0DAAmD;IAAnD,yRAAmD;IAKjE,0DAAmC;IAAnC,sLAAmC;IACtB,0DAGC;IAHD,icAGC;IAC4C,0DAA8B;IAA9B,kJAA8B;IACpF,0DAAyD;IAAzD,+NAAyD;;;;IAtC/F,0EAAsH;IAClH,0EAAkC;IAC9B,0EAAwE;IAAjC,+WAA8B,CAAC,IAAC;IACnE,0EAEgD;IAAhC,8YAA8B;IAC1C,sEAAK;IACD,qEAE0D;;IAC9D,4DAAM;IACV,4DAAM;IACP,0EAAmF;IAAjE,8YAA8B,uTAAgC,CAAC,IAAjC;IAC5C,yEAEsB;IAAA,uDAC6B;;;;;IAAA,4DAAK;IACpD,yEAA8B;IAAA,oEAAmC;IAAC,4EAAmB;IAAC,wDAA8B;;IAAA,4DAAO;IACxH,wDAAyD;;IAAA,4DAAI;IAC7D,oKAsBM;IACjB,4DAAM;IACR,4DAAM;IACX,4DAAM;IACV,4DAAM;;;;;IAzCM,0DAAmC;IAAnC,sLAAmC;IAK3B,0DAAkD;IAAlD,yRAAkD;IAKvD,0DAAmC;IAAnC,sLAAmC;IACb,0DAC6B;IAD7B,kcAC6B;IACuC,0DAA8B;IAA9B,4JAA8B;IACjH,0DAAyD;IAAzD,+NAAyD;IACnD,0DAAuB;IAAvB,iGAAuB;;;IA2BnD,yEAEsE;IAClE,uDACJ;;IAAA,4DAAK;;;IADD,0DACJ;IADI,iMACJ;;;IAnDJ,wEAA2F;IACvF,4JA6CM;;IACN,wJAIK;IACT,qEAAe;;;;IAnDiC,0DAA2D;IAA3D,mMAA2D;IA+CtG,0DAA0B;IAA1B,uHAA0B;;;IAjDnC,wEAA4E;IACxE,6JAoDe;;IAGnB,qEAAe;;;IAvDI,0DAAiE;IAAjE,8LAAiE;;;IAyDhF,yEAA0E;IACtE,uDACJ;;IAAA,4DAAK;;;IADD,0DACJ;IADI,+LACJ;;;IA5DJ,6IAwDe;IACf,wNAIc;;;;IA7DC,iKAA2C;;;IA4EtD,0EAEsB;IACrB,0EAEsD;IACtD,0EAAkE;IAC/D,0EACoC;IAChC,qFAKsB;IAC1B,4DAAM;IACL,0EAAiC;IAC7B,sEAAK;IACD,qFAKiB;IACrB,4DAAM;IACN,sEAAK;IACD,qFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACH,4DAAM;;;IA7BL,0DAA2D;IAA3D,8KAA2D;IAKD,0DAIvD;IAJuD,wIAIvD;IAK8B,0DAK3B;IAL2B,wIAK3B;IAIU,0DAAgE;IAAhE,wIAAgE;;;IA5BrF,wEAAiF;IAC7E,8HAiCM;IACT,qEAAe;;;IAjCK,0DAAe;IAAf,wFAAe;;;IAuDN,0EAAiF;IAC7E,0EAAuC;IACrC,sEAAK;IACD,0EAA0D;IACtD,qEAE0E;;IAC9E,4DAAM;IACV,4DAAM;IACJ,0EAAkB;IACd,yEAEa;IAAA,uDAGC;;;;;IAAA,4DAAK;IACnB,qEAAG;IAAA,oEAAmC;IAAC,4EAAmB;IAAA,wDAA8B;;IAAA,4DAAO;IAC3F,wDAAyD;;IAAA,4DAAI;IACrE,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAjB0B,0DAAmC;IAAnC,sLAAmC;IAGrC,0DAAkD;IAAlD,yRAAkD;IAKpE,0DAAkC;IAAlC,4JAAkC;IACrB,0DAGC;IAHD,icAGC;IAC4C,0DAA8B;IAA9B,kJAA8B;IACpF,0DAAyD;IAAzD,+NAAyD;;;;IAnC/F,0EAC8F;IAC1F,0EAAkC;IAC9B,0EAA0E;IAAnC,iXAAgC,CAAC,IAAC;IACrE,0EAEkD;IAAlC,gZAAgC;IAC5C,qEAE0D;;IAC9D,4DAAM;IACP,0EAAuF;IAArE,gZAAgC,yTAAkC,CAAC,IAAnC;IAC9C,yEAEsB;IAAA,uDAC6B;;;;;IAAA,4DAAK;IACpD,yEAA8B;IAAA,oEAAmC;IAAC,4EAAmB;IAAA,wDAA8B;;IAAA,4DAAO;IACvH,wDAAyD;;IAAA,4DAAI;IAC7D,oKAoBM;IACjB,4DAAM;IACR,4DAAM;IACX,4DAAM;IACV,4DAAM;;;;;IArCM,0DAAmC;IAAnC,sLAAmC;IAI/B,0DAAkD;IAAlD,yRAAkD;IAInD,0DAAmC;IAAnC,sLAAmC;IACb,0DAC6B;IAD7B,icAC6B;IACsC,0DAA8B;IAA9B,kJAA8B;IAChH,0DAAyD;IAAzD,+NAAyD;IACnD,0DAAyB;IAAzB,mGAAyB;;;IAyBrD,yEAEsE;IACtE,uDACA;;IAAA,4DAAK;;;IADL,0DACA;IADA,oMACA;;;IAhDJ,wEAAiG;IAC7F,4JA0CM;;IACN,wJAIK;IACT,qEAAe;;;;IA/CM,0DAA8D;IAA9D,sMAA8D;IA2C9E,0DAA6B;IAA7B,6HAA6B;;;IA9CtC,wEAA4E;IACxE,6JAiDe;;IAGnB,qEAAe;;;IApDI,0DAAoE;IAApE,mMAAoE;;;IAsDnF,yEAA0E;IACtE,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,mKACJ;;;IAzDJ,6IAqDe;IACf,wNAIc;;;;IA1DC,iKAA2C;;AC7J/D,MAAM,gBAAgB;IAM3B,YAAmB,kBAAqC;QAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;QAL1D,mBAAc,GAAQ,CAAC,CAAC;QACxB,qBAAgB,GAAQ,CAAC,CAAC;QAG1B,iBAAY,GAAK,EAAE;QAC2C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC;IAAC,CAAC;IAC1F,IAAI,IAAI,KAAI,OAAO,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,GAAC;IAChE,QAAQ;IACR,CAAC;;gFATU,gBAAgB;gGAAhB,gBAAgB;QDR7B,yEAEkB;QAEd,yEAAwB;QACpB,yEAAsD;QAClD,yEAA4B;QAC1B,yEAA0E;QACxE,wEAA2C;QAAA,uDAAoC;;QAAA,4DAAK;QACpF,yEAA8C;QAC1C,2EAAgG;QAAzF,6LAA6B;;QAApC,4DAAgG;QAC/F,mEAA4C;QACjD,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,gIAoCgB;QACf,2MA+DS;QAEd,4DAAM;QACN,2EAAiD;QAC7C,0EAA4B;QACxB,0EAA0E;QACtE,0EAA0C;QAAA,wDAAoC;;QAAA,4DAAK;QACnF,0EAA8C;QAC1C,4EAAmG;QAA5F,iMAAgC;;QAAvC,4DAAmG;QAClG,mEAA4C;QACjD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,gIAmCgB;QACpB,2MA4Dc;QAEd,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;QAnON,sKAA2D;QAOA,0DAAoC;QAApC,uJAAoC;QAEtC,0DAA4C;QAA5C,qKAA4C;QAA1E,wFAA6B;QAK7B,0DAAoD;QAApD,mHAAoD;QA0GjB,0DAAoC;QAApC,wJAAoC;QAElC,0DAA4C;QAA5C,qKAA4C;QAA7E,2FAAgC;QAKpC,0DAAiD;QAAjD,gHAAiD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEvHpE,uEAA6E;IACzE,uDAEJ;;IAAA,4DAAI;;;IAFA,0DAEJ;IAFI,keAEJ;;;;IAgBQ,0EAA2F;IACvF,0EAAuC;IACnC,sEAAK;IACD,0EAAyD;IACrD,qEAA+E;;IACnF,4DAAM;IACV,4DAAM;IACN,0EAAkB;IACd,yEAAsD;IAAA,uDAEH;;;;;IAAA,4DAAK;IACxD,qEAAG;IAAA,oEAAmC;IAAC,4EAAmB;IAAA,wDAA8B;;IAAA,4DAAO;IAC3F,wDAAyD;;IAAA,4DAAI;IAErE,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAb2B,0DAAmC;IAAnC,oLAAmC;IAC/B,0DAAkD;IAAlD,qRAAkD;IAIvE,0DAAmC;IAAnC,oLAAmC;IAAe,0DAEH;IAFG,6bAEH;IACO,0DAA8B;IAA9B,kJAA8B;IACpF,0DAAyD;IAAzD,4NAAyD;;;;IA1B7E,yEAE4F;IAAxF,qXAA0C,gSAA2C,CAAC,IAA5C;IAC1C,0EAA8B;IAC1B,0EAAkE;IAC9D,qEAAiF;;IACrF,4DAAM;IAEN,4EAAyF;IACrF,uDAEJ;;;;;;IAAA,4DAAI;IACR,4DAAM;IAEN,qIAgBM;IACV,4DAAM;;;;;;IA3BiC,0DAAkC;IAAlC,2JAAkC;IACxD,0DAAkD;IAAlD,qRAAkD;IAGxD,0DAAmC;IAAnC,oLAAmC;IAClC,0DAEJ;IAFI,qgBAEJ;IAGE,0DAAmC;IAAnC,2GAAmC;;ACpBlD,MAAM,6BAA6B;IAGxC,YAAmB,mBAAsC;QAAtC,wBAAmB,GAAnB,mBAAmB,CAAmB;QADzD,+BAA0B,GAAG,CAAC,CAAC;IAC8B,CAAC;IAChE,IAAI,IAAI,KAAI,OAAO,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,GAAC;IAChE,QAAQ;IACR,CAAC;;0GANU,6BAA6B;6GAA7B,6BAA6B;QDR1C,yEAGC;QACG,yEAAkD;QAC9C,yEAA+D;QAC3D,wEAA0D;QAAA,uDAAoC;;QAAA,4DAAK;QACnG,uEAA2B;QAAA,uDAA0C;;QAAA,4DAAI;QAC7E,4DAAM;QACN,qHAGI;QACJ,0EAAiB;QACb,6HA+BM;;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA/CN,wKAA4D;QAKU,0DAAoC;QAApC,sJAAoC;QACnE,0DAA0C;QAA1C,4JAA0C;QAErE,0DAA2C;QAA3C,6JAA2C;QAKrB,0DAAiD;QAAjD,+KAAiD;;;;;;;;;;;;;;AEHnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAOA;AACf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICWjC,wEAAsD;IAClD,0EAC+D;IAC3D,0EAAkE;IAC9D,0EAAuB;IACnB,qFAIsB;IAC1B,4DAAM;IACN,0EAAiC;IAC7B,sEAAK;IACD,qFAKa;IACjB,4DAAM;IACN,sEAAK;IACD,qFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAAoC;IAChC,2EAAqB;IACjB,sFAKe;IACnB,4DAAM;IACN,2EAAqB;IACjB,sFAKe;IACnB,4DAAM;IACN,2EAAqB;IACjB,sFAKe;IACnB,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,qEAAe;;;IArDN,0DAA4D;IAA5D,8KAA4D;IAIZ,0DAGvC;IAHuC,wIAGvC;IAKuB,0DAK/B;IAL+B,wIAK/B;IAIc,0DAAgE;IAAhE,yIAAgE;IAOnD,0DAK7B;IAL6B,yIAK7B;IAG6B,0DAK7B;IAL6B,yIAK7B;IAG6B,0DAK7B;IAL6B,yIAK7B;;;IAnDZ,wEAA6E;IACzE,qJAsDe;IACnB,qEAAe;;;IAvDoB,0DAAqB;IAArB,8FAAqB;;;;IA6E5B,0EACoD;IAChD,0EAAuC;IACnC,sEAAK;IACD,0EAA2C;IAAtC,8VAAqB;IACtB,qEAEW;;IACf,4DAAM;IACV,4DAAM;IACN,0EAAkB;IACd,yEAAiB;IAAA,uDAIH;;;;;IAAA,4DAAK;IACnB,qEAAG;IACC,oEAAmC;IACnC,4EAAmB;IAAA,wDAA8B;;IAAA,4DAAO;IACxD,wDAAqF;;IAAA,4DAAI;IACjG,4DAAM;IACV,4DAAM;IACN,8EAA0D;IACtD,oEAA+B;IAAG,wDACtC;;IAAA,4DAAS;IACb,4DAAM;;;IAnBc,0DAAyG;IAAzG,qZAAyG;IAKhG,0DAIH;IAJG,4jBAIH;IAGS,0DAA8B;IAA9B,kJAA8B;IACjD,0DAAqF;IAArF,6RAAqF;IAI3D,0DACtC;IADsC,mKACtC;;;;;IAyBJ,6EAMsC;IADlC,umBAAoE,OAAO,2CAA6B;IAExG,mEAA4B;IAAC,2EAAmB;IAAA,uDAAiC;;IAAA,4DAAO;IAC5F,4DAAS;;;IAPT,yNAGE;IAGkD,0DAAiC;IAAjC,mJAAiC;;;;IAiBjG,2EAEwD;IAApD,odAA6C,CAAC,YAAK;IACnD,uDAAuE;;IAAA,4DAAO;;;;IAA9E,0DAAuE;IAAvE,6MAAuE;;;;IAE/E,0EAC0E;IADrE,+gBAAqD,IAAI,yDAA6B;IAA3F,4DAC0E;;;IAAtE,4IAAkB;;;IAOE,uEAC6B;IAC7B,uDAAwB;IAAA,4DAAO;;;IAA/B,0DAAwB;IAAxB,4HAAwB;;;;IAGxC,wEAA4F;IAAzF,mgBAAqC;IACpC,uDAEJ;;IAAA,4DAAI;;;IAFA,0DAEJ;IAFI,gSAEJ;;;IAQY,sEAA0D;IACtD,mEAAgC;IAAC,2EAAmB;IAAA,uDAA4B;;IAAA,4DAAO;IAC3F,4DAAM;;IADkD,0DAA4B;IAA5B,8IAA4B;;;IAI5E,0EAC0C;IACtC,qEAA2B;IAC3B,2EAA6C;IACzC,uDAA0B;;IAAA,4DAAO;IACzC,4DAAM;;;IAHG,0DAAqB;IAArB,yKAAqB;IACpB,0DAAyB;IAAzB,uGAAyB;IAC3B,0DAA0B;IAA1B,0JAA0B;;;IALtC,wEAA8C;IAC1C,mLAKM;IACV,qEAAe;;;;IANL,0DAAoD;IAApD,wNAAoD;;;IAD9D,sLAOe;;;IAPiB,sFAAY;;;;IAY5C,yEACyE;IAArE,2rBAAoE;IACpE,qEAAiC;IACrC,4DAAK;;;IADI,0DAAoB;IAApB,uKAAoB;;;;;;IAY7C,0EAE6B;IACzB,qEACW;;IACX,0EAEC;IACG,mFAQgF;IAFhF,kqBAAkE;;IAEc,4DAAW;IAC3F,wEAEuD;IADnD,2oBAA0D;IACP,4DAAI;IAC/D,4DAAM;IACV,4DAAM;;;IAlBG,0DAAyG;IAAzG,qZAAyG;IAG9G,0DAA0F;IAA1F,qNAA0F;IAUzD,0DAAkD;IAAlD,yKAAkD;IAN/E,uLAGE;IAJF,wEAAmB;;;;;;IAgBf,qEAA4C;IACxC,0EACsD;IAClD,0EACiE;IAC7D,0EAAuB;IACnB,qFAKsB;IAC1B,4DAAM;IACN,0EAAiC;IAC7B,sEAAK;IACD,qFAKS;IACb,4DAAM;IACN,sEAAK;IACD,qFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IA7BI,0DAA4D;IAA5D,gLAA4D;IAKZ,0DAI3C;IAJ2C,yIAI3C;IAK2B,0DAKnC;IALmC,yIAKnC;IAIkB,0DAA+D;IAA/D,yIAA+D;;;IAzB3F,wEAA4D;IACxD,mLA8BK;IACT,qEAAe;;;IA/BU,0DAAqB;IAArB,+FAAqB;;;IAsEL,4EACY;IAAA,uDAAiC;;IAAA,4DAAO;;IAAxC,0DAAiC;IAAjC,4JAAiC;;;;;;IA/B1E,wEACiE;IAC7D,0EAAmB;IACf,2EAK8B;IAE1B,qFAeuD;IALnD,qfAA6C,yWACnB,IAAI,IADe,uWAEpB,KAAK,IAFe,sXAGZ,CAAC,IAHW;;IAKM,uDAAoB;IAAA,4DAAW;IACtF,yEAEsD;IADlD,kxBAAkF;IAChC,4DAAI;IAC9D,4DAAM;IACN,4EAAqB;IAAA,yNACoD;IACrE,6EACkC;IAA9B,+ZAA2B,CAAC,IAAC;IAAC,wDAA8B;;IAAA,4DAAO;IAAA,6DAAC;IAAA,4DAAQ;IACxF,4DAAM;IACV,qEAAe;;;;IA/BP,0DAGE;IAHF,sNAGE;IAkBM,0DAAkD;IAAlD,yKAAkD;IAdtD,oOAKE;IACF,wEAAmB;IAQoC,0DAAoB;IAApB,iHAAoB;IAMtE,0DAAsB;IAAtB,0FAAsB;IAEO,0DAA8B;IAA9B,iJAA8B;;;IAe5D,oEAGiC;;;;IAH9B,mFAAiC;;;;;IAXhD,0EAAkB;IACd,2EAA4B;IACxB,0EAAoB;IAChB,yEAE6B;IACzB,uDAIJ;;;;;IAAA,4DAAI;IACJ,kNAGiC;IACjC,uFAAiC;IAC7B,uEACqE;IACjE,+EAG+D;IAA3D,+iBAA0D;IAC1D,wDACJ;;IAAA,4DAAS;IACT,+EAGkB;IADd,qrBAAqD;IAErD,wDACJ;;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAW;IACf,4DAAM;IACN,gFAAa;IAAA,wDACb;;IAAA,4DAAI;IACR,4DAAM;IACN,2EAA+B;IAC3B,2EAAkC;IAC9B,6EAC4B;IAAA,wDACgB;;IAAA,4DAAQ;IACpD,6EAA2B;IAAA,wDACiB;;IAAA,4DAAQ;IACxD,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;IA1CS,0DAA4C;IAA5C,oOAA4C;IAG3C,0DAIJ;IAJI,geAIJ;IAEK,0DAAgE;IAAhE,iQAAgE;IAK7D,0DAAgE;IAAhE,oLAAgE;IAEhE,0DAA+B;IAA/B,6FAA+B;IAG3B,0DACJ;IADI,2JACJ;IAEA,0DAA+B;IAA/B,6FAA+B;IAG3B,0DACJ;IADI,6JACJ;IAIC,0DACb;IADa,qMACb;IAKgC,0DACgB;IADhB,2NACgB;IACjB,0DACiB;IADjB,2NACiB;;;IArFhE,yEACmB;IACf,qEAGW;;IACX,0NAmCe;IACf,qSA+Cc;IAClB,4DAAK;;;;;;IAxFI,0DAA4C;IAA5C,mOAA4C;IAK5C,0DAAuC;IAAvC,8GAAuC;;;IARpD,wEAA8D;IAC1D,gMA0FK;IACT,qEAAe;;;IA3Fa,0DAAgB;IAAhB,yFAAgB;;;IA6FxC,qEAAI;IAAA,uDAAkC;;IAAA,4DAAK;;IAAvC,0DAAkC;IAAlC,oJAAkC;;;IA9F1C,oMA4Fe;IACf,+QAEc;;;;IA/FC,mIAA2B;;;IA3D1D,wEAA6C;IACzC,sKAqBM;IACN,0EAAmC;IAC/B,yEAA4C;IACxC,sLAgCe;IACf,iQAiGc;IAClB,4DAAK;IACT,4DAAM;IACV,qEAAe;;;;IA5JV,0DAAsB;IAAtB,0FAAsB;IAuBA,0DAAsB;IAAtB,yFAAsB;;;IA4JzC,2EAA4E;IACxE,2EAA0B;IACtB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACf,4DAAM;IACV,4DAAM;;;;IAvBd,sEAAuE;IACnE,2EAA0B;IACtB,0EAAkC;IAAA,uDAAkC;;IAAA,4DAAK;IACzE,8EAG8B;IAA1B,oVAAS,wBAAe,IAAC;IACzB,oEAA4B;IAChC,4DAAS;IACb,4DAAM;IACN,2EAAwB;IACpB,yEAAgB;IAAA,uDAAsC;;IAAA,4DAAI;IAC1D,4EAAwC;IACpC,+EAA4D;IAA1B,qVAAS,wBAAe,IAAC;IAAC,wDAA+B;;IAAA,4DAAS;IACpG,oFACwC;IAApC,yiBAAmC;IAAC,wDAA+B;;IAAA,4DAAS;IACpF,4DAAM;IACN,uKAMM;IACV,4DAAM;IACV,4DAAM;;;IAzBD,qLAAiE;IAE5B,0DAAkC;IAAlC,oJAAkC;IAEpE,0DAAyF;IAAzF,uJAAyF;IAOzE,0DAAsC;IAAtC,yJAAsC;IAEU,0DAA+B;IAA/B,kJAA+B;IAEnD,0DAA+B;IAA/B,kJAA+B;IAErE,0DAAuB;IAAvB,2FAAuB;;;;;IAzU7C,0EACiD;IAC7C,0EAAmE;IAC/D,0EAA0E;IAArE,uWAA8B,CAAC,IAAC;IACjC,0EAAoC;IAA/B,sYAA8B;IAC/B,0EAEW;IAFN,0VAAqB;;IAA1B,4DAEW;IACf,4DAAM;IACN,0EAAkB;IACd,0EAAqE;IAAhE,sYAA8B,+SAA+B,CAAC,IAAhC;IAC/B,yEAAqB;IAAA,uDAKrB;;;;;IAAA,4DAAK;IACL,yJAyBM;IACV,4DAAM;IACN,2EAA+B;IAC3B,2EAAkC;IAC9B,6EAA+B;IAAA,wDAA0D;;IAAA,4DAAQ;IACjG,6EAA2B;IAAA,wDAA0D;;IAAA,4DAAQ;IACjG,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAA+B;IAC3B,oEACkC;IAClC,sFAA0B;IACtB,uEAAsE;IAClE,8EAMkB;IADd,6eAAiD,MAAM,4CAA6B;IAEpF,oEAA0B;IAAC,4EAAmB;IAAA,wDAAgC;;IAAA,4DAAO;IACzF,4DAAS;IACT,6JAQS;IACT,8EAK8C;IAA9C,8aAA+B;IAC3B,oEAAgC;IAAC,4EAAmB;IAAC,wDAA8B;;IAAA,4DAAO;IAC9F,4DAAS;IACb,4DAAM;IACV,4DAAW;IAEf,4DAAM;IACV,4DAAM;IACN,6EAAsC;IAClC,wDACA;;;IAAA,yJAGkF;IACtF,4DAAI;IACJ,uJAC0E;IAC1E,2EAA8B;IAC1B,2EAAoE;IAC5D,2EACkE;IAD7D,2dAAyB,EAAE,qCAAyB,CAAC,2FAAyC;IAEvF,0EAA2I;;IAC3I,0EAAqJ;;IACrJ,yJAE+B;IAE/C,4DAAM;IACN,mJAGI;IACR,4DAAM;IACN,2EAA+B;IAC3B,0EAAqE;IACjE,0EAE0B;IAFtB,qcAA6D;IAG7D,2EAAuB;IACnB,sJAEM;IACN,mPASc;IAClB,4DAAM;IACN,+EAAwE;IACpE,0EAAyD;IACrD,qJAGK;IACT,4DAAK;IACT,4DAAM;IACV,4DAAK;IACL,0EAA2C;IAAvC,scAAsC;IACtC,oEAAmC;IACnC,4EAAmB;IAAA,wDAA+B;;IAAA,4DAAO;IAC7D,4DAAK;IACT,4DAAK;IACT,4DAAM;IACN,yKA8Je;IACnB,4DAAM;IAGN,qPA4Bc;IAClB,4DAAM;;;;;;;;;;IA7Uc,0DAAyG;IAAzG,sZAAyG;IAKpF,0DAKrB;IALqB,+jBAKrB;IACM,0DAAuB;IAAvB,iGAAuB;IA6BM,0DAA0D;IAA1D,qNAA0D;IAC9D,0DAA0D;IAA1D,qNAA0D;IAM1D,0DAA0B;IAA1B,mFAA0B;IAGxD,0DAAgE;IAAhE,oLAAgE;IAEjE,0DAGE;IAHF,0NAGE;IAGgD,0DAAgC;IAAhC,oJAAgC;IAQ7E,0DAAiB;IAAjB,0GAAiB;IAItB,0DAGE;IAHF,0NAGE;IAEuD,0DAA8B;IAA9B,4JAA8B;IAQnG,0DACA;IADA,+RACA;IAAO,0DAA+B;IAA/B,6JAA+B;IAKmD,0DAAiB;IAAjB,0GAAiB;IAM5D,0DAAyG;IAAzG,mgBAAyG;IACrG,0DAA+G;IAA/G,mgBAA+G;IAE5I,0DAA0B;IAA1B,mHAA0B;IAIsB,0DAAyB;IAAzB,kHAAyB;IAWxE,0DAAgC;IAAhC,8JAAgC;IAgBb,0DAAY;IAAZ,sFAAY;IAStB,0DAA+B;IAA/B,mJAA+B;IAI/C,0DAA4B;IAA5B,oGAA4B;;;IArJvD,wEAAyE;IACrE,kJAmVM;IACV,qEAAe;;;IApVW,0DAAiC;IAAjC,0GAAiC;;;IAuVvD,0EAA6D;IACzD,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,qKACJ;;;IA1VJ,iJAqVe;IAEf,4NAIc;;;;IA3VC,mKAA4C;;;IAkW3E,2EAA8F;IAC1F,2EAAyB;IACrB,2EAA0B;IACtB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,yEAAuC;IAAC,uDAA4B;;IAAA,4DAAI;IAC5E,4DAAM;IACV,4DAAM;IACV,4DAAM;;IAH8C,0DAA4B;IAA5B,wJAA4B;;;;IAmBxE,4EACwD;IAApD,wXAAmD;IACnD,2EACgE;;IAChE,8EAAmG;IAC/F,uDAA4B;;IAAA,4DAAS;IAC7C,4DAAO;;;IANiC,+FAA6B;IAG7D,0DAAgD;IAAhD,uKAAgD;IADnB,wEAAmB;IAE5C,0DAAoC;IAApC,sGAAoC;IACxC,0DAA4B;IAA5B,wJAA4B;;;;IAEpC,4EAA8F;IAA3B,sVAA0B;IACzF,2EAAgD;IAC5C,yEAAiE;IAAzC,ibAAqC,EAAE,IAAC;IAAC,4DAAI;IACrE,sEAAyC;IAC7C,4DAAM;IACN,2EAC0G;IACtG,uDACA;;IAAA,2EAAuE;IACnE,uEAA2B;IAAC,2EAAmB;IAAC,wDAA+B;;IAAA,4DAAO;IACtF,mFACgB;IADuC,kWAAgC;IAAvF,4DACgB;IACpB,4DAAM;IACV,4DAAM;IACN,+EAA8D;IAC1D,wDAA4B;;IAAA,4DAAS;IAC7C,4DAAO;;;IAhBkC,2FAAyB;IAGrD,0DAAc;IAAd,6IAAc;IAInB,0DACA;IADA,iKACA;IACoD,0DAA+B;IAA/B,4JAA+B;IAMnF,0DAA4B;IAA5B,yJAA4B;;;;IAhD5C,kIAUM;IACN,sEAAuE;IACnE,2EAA0B;IACtB,0EAAoD;IAAA,uDAAgC;;IAAA,4DAAK;IACzF,8EAA4F;IAA1B,+SAAS,wBAAe,IAAC;IACvF,oEAA4B;IAChC,4DAAS;IACb,4DAAM;IACN,2EAAwB;IACpB,2EAA4C;IACxC,uEAEW;;IACX,0EAAiB;IAAA,wDAC6D;;;;;IAAA,4DAAK;IACvF,4DAAM;IACN,qIAMO;IACP,uIAgBO;IACX,4DAAM;IACV,4DAAM;;;IAnDA,oFAAiB;IAWlB,0DAAiE;IAAjE,mLAAiE;IAEV,0DAAgC;IAAhC,kJAAgC;IAQ5E,0DAAyG;IAAzG,mZAAyG;IAE5F,0DAC6D;IAD7D,0jBAC6D;IAE3E,0DAA+B;IAA/B,oGAA+B;IAO/B,0DAAgC;IAAhC,qGAAgC;;;;IA4B3C,2EAEuD;IAAvD,+UAAyB,EAAE,4CAAyB,CAAC,IAAC;IAAI,uDAAmC;;IAAA,4DAAM;;;IADlG,iGAAkC;IACuB,0DAAmC;IAAnC,+JAAmC;;;;IAIrF,2EAI2C;IAF3C,wlBAAoE;IAGhE,sEACW;IACX,oEAAG;IAAA,uDAAgB;IAAA,4DAAI;IAC3B,4DAAM;;;;;;IALF,sKAAgE;IAEX,0DAA0C;IAA1C,qMAA0C;IAE5F,0DAAgB;IAAhB,4GAAgB;;;IATnC,wEAA8D;IAC1D,gKAUc;IAClB,qEAAe;;;;IASH,0EAAqF;IACjF,0EAAuC;IACnC,0EAA+B;IAC3B,2EAE0E;IAF5C,mTAAS,wBAAe,IAAC;;IAAvD,4DAE0E;IAC1E,sEAAwE;IAC5E,4DAAM;IACN,0EACiB;IADb,kTAAS,wBAAe,IAAC;IAEzB,uDAEJ;;;;;IAAA,4DAAK;IACT,4DAAM;IACV,4DAAK;;;IAVW,0DAAyC;IAAzC,8NAAyC;IAExC,0DAAuC;IAAvC,kMAAuC;IAEO,0DAAyC;IAAzC,8NAAyC;IAE5F,0DAEJ;IAFI,+gBAEJ;;;;IA3CpB,2EAAsG;IAClG,2EAA0B;IAElC,8EAAmC;IAE/B,iJAIc;IACd,kJAYe;IAEnB,4DAAS;IACG,8EAA4F;IAA1B,+SAAS,wBAAe,IAAC;IACvF,4EAAyB;IAAA,iEAAO;IAAA,4DAAO;IAC3C,4DAAS;IACb,4DAAM;IACN,2EAAmD;IAC/C,0EAA8B;IAC1B,mIAcK;;IACT,4DAAK;IACT,4DAAM;IACV,4DAAM;;;IAhD8B,mLAAiE;IAGhG,0DAAyB;IAAzB,yFAAyB;IAOC,0DAAgB;IAAhB,wFAAgB;IAqBD,0DAAiD;IAAjD,mLAAiD;;;IA2B3F,qEAAgF;;;IAAhC,0LAAwB;;;IAEpE,2EAAsB;IAClB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACf,4DAAM;;;;IAYV,2EAAsE;IAClE,2EAIW;IAFN,qUAAsB;;IAF3B,4DAIW;IACX,0EAAkB;IACd,0EAGC;IADD,oUAAsB;IAElB,uDAEJ;;;;;IAAA,4DAAK;IACL,6EAA8B;IAC1B,wDACJ;;IAAA,4DAAQ;IACZ,4DAAM;IACN,0EACyB;IADtB,oeAAqD;IAC/B,4DAAI;IACjC,4DAAM;;;IAhBE,0DAA8E;IAA9E,qaAA8E;IAO1E,0DAEJ;IAFI,2kBAEJ;IAEI,0DACJ;IADI,qPACJ;;;IAcgB,uEACuC;IACvC,uDAAkC;IAAA,4DAAO;;;IAAzC,0DAAkC;IAAlC,0JAAkC;;;IAGlD,oEAAkC;IAC9B,uDAEJ;;IAAA,4DAAI;;;IAFA,0DAEJ;IAFI,sUAEJ;;;IAdA,2EAA4F;IACxF,2EAC6C;IACjC,0EAAiP;;IACjP,yEACsN;;IACtN,iIAEyC;IAEzD,4DAAM;IACN,2HAGI;IACR,4DAAM;;;;;IAZ2C,0DAA4M;IAA5M,0tBAA4M;IAEzO,0DAA8M;IAA9M,2tBAA8M;IAE7M,0DAAoC;IAApC,iJAAoC;IAI/C,0DAA0B;IAA1B,qIAA0B;;;IAQpB,qEAA4C;IACxC,0EACsD;IAClD,0EACiE;IAC7D,0EAAuB;IACnB,qFAMsB;IAC1B,4DAAM;IACN,0EAAiC;IAC7B,sEAAK;IACD,qFAKS;IACb,4DAAM;IACN,sEAAK;IACD,qFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAK;;;IA9BI,0DAA4D;IAA5D,kLAA4D;IAMjD,0DAIN;IAJM,yIAIN;IAK2B,0DAKnC;IALmC,yIAKnC;IAIkB,0DAA+D;IAA/D,yIAA+D;;;IA1B3F,wEAA4D;IACxD,uIA+BK;IACT,qEAAe;;;IAhCU,0DAAqB;IAArB,gGAAqB;;;;IAmCtC,yEACmB;IACf,2EAIW;IAHP,ydAAsC;;IAD1C,4DAIW;IACX,0EAAkB;IACd,2EAA4B;IACxB,yEAG6B;IAF7B,udAAsC;IAGlC,uDAIJ;;;;;IAAA,4DAAI;IACJ,gFAAa;IAAA,wDACC;;IAAA,4DAAI;IACtB,4DAAM;IACN,2EAA+B;IAC3B,2EAAkC;IAC9B,6EAC4B;IAAA,wDACgB;;IAAA,4DAAQ;IACxD,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAK;;;;;IAxBG,0DAAoE;IAApE,2VAAoE;IAQ5D,0DAIJ;IAJI,oeAIJ;IACa,0DACC;IADD,6LACC;IAKkB,0DACgB;IADhB,8NACgB;;;IA1BhE,wEAA8D;IAC1D,sJA6BK;IACT,qEAAe;;;IA9Ba,0DAAgB;IAAhB,0FAAgB;;;IAgCxC,qEAAI;IAAA,uDAAkC;;IAAA,4DAAK;;IAAvC,0DAAkC;IAAlC,oJAAkC;;;IAjC1C,wJA+Be;IACf,mOAEc;;;;IAlCC,qIAA2B;;;;IArGtE,2EAEiD;IAC7C,2EAAyE;IAErE,yHAAgF;IAChF,qNAOc;IACd,2EACE;IAEE,yEAAkE;IAA/D,6ZAAqD;IACpD,mEAAkC;IAAC,2EAAmB;IAAA,uDAAoC;;IAAA,4DAAO;IACrG,4DAAI;IACR,4DAAM;IACN,0EAA+C;IAA5C,4TAAsB;IAAsB,4DAAI;IACvD,4DAAM;IACN,iFAAyD;IACrD,6HAoBM;IACN,4EAAyC;IACrC,+EAAyB;IAAA,wDAAkC;;IAAA,4DAAI;IAC/D,4EAAyB;IACrB,6HAeE;IACF,2EAAmC;IAC/B,0EAA4C;IACxC,2IAiCe;IACf,sNAoCc;IAClB,4DAAK;IACT,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;;IA7IN,8KAA4D;IAI9C,0DAAuB;IAAvB,0HAAuB;IAaiC,0DAAoC;IAApC,wJAAoC;IAM5F,0DAAsB;IAAtB,yFAAsB;IAsBC,0DAAkC;IAAlC,qMAAkC;IAEjD,0DAAsB;IAAtB,yFAAsB;IAkBL,0DAAsB;IAAtB,wFAAsB;;ADrlB7D,mDAAU,CAAC,GAAG,CAAC,CAAC,sDAAU,EAAE,CAAC,CAAC;AAMvB,MAAM,oBAAoB;IA+B/B,YAAmB,mBAAuC,EACjD,YAA4B,EAC3B,EAAe,EACf,OAAkB,EAClB,SAAsB,EACtB,EAAqB,EACrB,cAAoC,EACpC,MAAa,EACb,SAA0B;QARjB,wBAAmB,GAAnB,mBAAmB,CAAoB;QACjD,iBAAY,GAAZ,YAAY,CAAgB;QAC3B,OAAE,GAAF,EAAE,CAAa;QACf,YAAO,GAAP,OAAO,CAAW;QAClB,cAAS,GAAT,SAAS,CAAa;QACtB,OAAE,GAAF,EAAE,CAAmB;QACrB,mBAAc,GAAd,cAAc,CAAsB;QACpC,WAAM,GAAN,MAAM,CAAO;QACb,cAAS,GAAT,SAAS,CAAiB;QAtCpC,mBAAc,GAAW,CAAC,CAAC;QAC3B,yBAAoB,GAAQ,CAAC,CAAC;QAC9B,gBAAW,GAAY,KAAK;QAM5B,sBAAiB,GAAY,KAAK;QAClC,iBAAY,GAAG,CAAC,CAAC;QACjB,sBAAiB,GAAW,EAAE;QAE9B,uBAAkB,GAAQ,EAAE;QAC5B,iBAAY,GAAQ,EAAE;QACtB,sBAAiB,GAAQ,CAAC,CAAC;QAC3B,oBAAe,GAAY,IAAI;QAC/B,kBAAa,GAAU,EAAE,CAAC;QAC1B,qBAAgB,GAAQ,CAAC,CAAC;QAC1B,qBAAgB,GAAS,IAAI;QAG7B,cAAS,GAAO,EAAE;QAClB,kBAAa,GAAK,EAAE;QACpB,iBAAY,GAAO,EAAE;QACrB,wBAAmB,GAAK,EAAE;QAC1B,oBAAe,GAAK,EAAE;QACtB,2BAAsB,GAAK,CAAC,CAAC;QAkL7B,gCAAgC;QAEhC,mBAAc,GAAQ;YACpB,aAAa,EAAE,KAAK;YACpB,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,sCAAsC;YAClD,UAAU,EAAE,OAAO;YAEnB,WAAW,EAAE;gBACX,CAAC,EAAE;oBACD,aAAa,EAAE,CAAC;oBAChB,YAAY,EAAE,EAAE;iBACjB;gBACD,GAAG,EAAE;oBACH,aAAa,EAAE,CAAC;oBAChB,YAAY,EAAE,EAAE;iBACjB;gBACD,IAAI,EAAE;oBACJ,aAAa,EAAE,CAAC;oBAChB,YAAY,EAAE,EAAE;iBACjB;aACF;SAEF;QA3LC,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CACxC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAC7B,CAEA;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9B,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,GAAC,GAAG,CACpC,CAEA;IACJ,CAAC;IACH,IAAI,IAAI,KAAI,OAAO,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,GAAC;IAEhE,QAAQ;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;QAClB,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC;QAClC,2EAA2E;QAC3E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAC7C,CAAC,GAAQ,EAAE,EAAE;;YACX,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,WAAI,GAAG,CAAC,OAAO,0CAAE,IAAI,CAAC,GAAG,GAAE;gBACzF,IAAI,UAAU,GAAG;oBACf,OAAO,QAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,0CAAE,OAAO;oBAC9B,SAAS,QAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,0CAAE,SAAS;oBAClC,IAAI,cAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,0CAAE,IAAI,0CAAE,GAAG;oBAC7B,IAAI,EAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI;oBACf,GAAG,QAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,0CAAE,GAAG;iBACvB;gBACD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;aACtC;QACH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC,CACF;QACD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAC9C,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,iBAAiB,EAAE;QAC1B,CAAC,EACD,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAC,CAC3C;QACD,yEAAyE;IAG3E,CAAC;IAGD,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IACD,iBAAiB,CAAC,QAA0B;QAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,IAAI,CAAC,iBAAiB,IAAI,MAAM,EAAE;YACpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,iFAAY,CAAC,CAAC;aACnF,CAAC;SACH;aAAM,IAAI,IAAI,CAAC,iBAAiB,IAAI,OAAO,EAAE;YAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;aACjC,CAAC;SACH;IACH,CAAC;IACD,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC;IACnC,2CAA2C;IAC3C,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAEtC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC;QAEF,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACzB,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI;SACtB;IACH,CAAC;IACD,yCAAyC;IACzC,kDAAkD;IAClD,aAAa,CAAC,KAAU;QACtB,KAAK,CAAC,KAAK,GAAG,EAAE;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI;IACvB,CAAC;IACD,gDAAgD;IAChD,WAAW,CAAC,EAAO,EAAE,GAAQ;QAC3B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,UAAU,EAAE,UAAU,CAAC;QACtD,IAAI,CAAC,iBAAiB,GAAG,IAAI;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAC9C,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;YACvF,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,iBAAiB,GAAG,KAAK;YAC9B,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,qBAAqB,EAAE;QAC9B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,iBAAiB,GAAG,KAAK;QAChC,CAAC,CACF,CACF;IACH,CAAC;IACD,YAAY,CAAC,GAAQ,EAAE,GAAQ;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;YAC5B,kBAAkB,EAAE,MAAM;YAC1B,gBAAgB,EAAE,QAAQ;YAC1B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAU;;QAExB,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,OAAC,IAAI,CAAC,gBAAgB,0CAAE,GAAG,EAAE,KAAK,CAAC,CAAC,SAAS,CACrF,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;YACvF,IAAI,CAAC,SAAS,GAAG,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,KAAK;YACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,iBAAiB,EAAE;QAC1B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,KAAK;QAC1B,CAAC,CACF,CACF;IACH,CAAC;IACD,WAAW;;QACT,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,WAAW,GAAG,IAAI;YACvB,IAAI,GAAG,GAAG,IAAI,QAAQ,EAAE;YACxB,IAAI,IAAI,CAAC,SAAS;gBAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;YACvD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,eAAe,OAAC,IAAI,CAAC,gBAAgB,0CAAE,GAAG,EAAE,GAAG,CAAC,CAAC,SAAS,CACjF,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;gBACxF,IAAI,CAAC,SAAS,GAAG,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpB,IAAI,CAAC,WAAW,GAAG,KAAK;gBACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;gBAC3B,IAAI,CAAC,iBAAiB,EAAE;gBACxB,IAAI,CAAC,qBAAqB,EAAE;YAC9B,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,SAAS,GAAG,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACpB,IAAI,CAAC,WAAW,GAAG,KAAK;YAC1B,CAAC,CACF,CACF;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;SACrB;IACH,CAAC;IA0BD,8BAA8B;IAC9B,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,CAErB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,iBAAiB,GAAC,CAAC,CAAC;YACzB,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK;QACjD,CAAC,EACD,GAAG,CAAC,EAAE;QACN,CAAC,CAEF,CACF;IACH,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC9C,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,GAAG,KAAK;YACxD,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,GAAG;QACvC,CAAC,EACD,GAAG,CAAC,EAAE,GAAG,CAAC,CACX,CACF;IACH,CAAC;IAGD,YAAY,CAAC,KAAU,EAAE,KAAU,EAAE,OAAY,EAAC,CAAK;;QACrD,KAAK,CAAC,cAAc,EAAE;QACtB,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,WAAI,IAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,GAAG,GAAE;YACzE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE;gBACrC,MAAM,EAAE,OAAO;gBACf,MAAM,QAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,GAAG;gBACjD,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE;aAC5B,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,IAAE,CAAC;gBACtD,KAAK,CAAC,KAAK,GAAG,EAAE;gBAChB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM;gBAC3B,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,YAAY,GAAG,IAAI;YAChD,CAAC,EACD,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAC5C;SAEF;IACH,CAAC;IAGF,eAAe,CAAC,EAAO,EAAE,CAAM;QAC3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;QAC9B,IAAI,CAAC,eAAe,GAAG,IAAI;QAC3B,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,IAAI,CAAC,iBAAiB,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CACnD,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,CAAC,eAAe,GAAG,KAAK;YAC5B,IAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;gBAClC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE;aAC3C;YACD,IAAI,CAAC,cAAc,GAAC,GAAG;YAEvB,IAAI,CAAC,YAAY,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,QAAQ;YACjC,IAAI,CAAC,SAAS,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI;QAC1B,CAAC,EAAE,GAAG,CAAC,EAAE;QACT,CAAC,CACF,CACF;IACH,CAAC;IACD,iBAAiB,CAAC,EAAM,EAAC,KAAS,EAAC,CAAK;;QACtC,IAAI,CAAC,aAAa,GAAC,EAAE;QACrB,IAAI,CAAC,YAAY,GAAC,EAAE;QACpB,IAAI,QAAQ,SAAG,IAAI,CAAC,mBAAmB,0CAAE,SAAS,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CACnD,CAAC,GAAQ,EAAE,EAAE;YACX,QAAQ,CAAC,KAAK,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,WAAW;YAChC,QAAQ,CAAC,GAAG,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;YAC5B,QAAQ,CAAC,IAAI,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;YAC9B,QAAQ,CAAC,GAAG,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;YAC5B,QAAQ,CAAC,IAAI,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;YAC9B,QAAQ,CAAC,IAAI,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;YAC9B,QAAQ,CAAC,cAAc,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,cAAc;YAC7C,IAAI,CAAC,aAAa,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;YACnC,IAAI,oBAAoB,GAAG;gBACzB,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;gBACf,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;gBACf,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;gBACd,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;gBACd,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;gBACf,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,WAAW;aACjB;YACD,IAAI,aAAa,GAAG;gBAClB,MAAM;gBACN,MAAM;gBACN,KAAK;gBACL,KAAK;gBACL,MAAM;gBACN,OAAO;aACR;YACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAE,CAAC,EAAC,CAAC,EAAE,EAAE;gBAC1B,IAAK,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC;gBAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,GAAG,EAAC,WAAW,EAAC,aAAa,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;gBACjG,aAAa,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;gBACzD,oBAAoB,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;aACjE;YACD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAEvB,CAAC,EAAE,GAAG,CAAC,EAAE;QACT,CAAC,CACF,CACF;IACH,CAAC;IACD,aAAa,CAAC,SAAc,EAAE,MAAW,EAAE,CAAM;QAC/C,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,SAAS,CACxD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,IAAE,CAAC;YACtD,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;QACjC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CACjB;IACH,CAAC;IACD,aAAa,CAAC,EAAM,EAAC,OAAW,EAAC,MAAU,EAAC,CAAK,EAAC,CAAK;QACrD,CAAC,CAAC,cAAc,EAAE;QAClB,IAAG,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACxB,IAAI,cAAc,GAAG,EAAC,EAAE,EAAC,OAAO,EAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAC3B,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,SAAS,CAC9D,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC/B,IAAI,CAAC,gBAAgB,GAAC,CAAC,CAAC;YAC1B,CAAC,EAAE,GAAG,CAAC,EAAE,GAAI,CAAC,CAAC,CAClB;SACA;IACH,CAAC;IACD,6CAA6C;IAC7C,kBAAkB,CAAC,QAAa;QAC9B,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM;QAC9B,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,YAAY,GAAG,IAAI;IACtD,CAAC;IACD,2CAA2C;IAE3C,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC/B,GAAG,CAAC,WAAW,EAAE;QACnB,CAAC,CAAC;IACJ,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;QACvB,IAAI,QAAQ,GAAI,IAAI,CAAC,eAAe,CAAC,aAAa;QAClD,QAAQ,CAAC,KAAK,EAAE;QAChB,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM;QAC/C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC,YAAY,IAAI,CAAC;IACzE,CAAC;IACD,0BAA0B,CAAC,OAAW;QACpC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAC,QAAQ,CAAC;IAC5C,CAAC;IACD,0BAA0B,CAAC,OAAW;QACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAC,QAAQ,CAAC;IACzC,CAAC;IACD,UAAU;QACR,IAAI,CAAC,mBAAmB,CAAC,KAAK,GAAC,KAAK,CAAC;QACrC,UAAU,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAC,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,GAAC,EAAE;QACrB,IAAI,CAAC,iBAAiB,GAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IACD,QAAQ,CAAC,EAAM;QACb,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IACoD,gBAAgB,CAAC,KAAoB;QACxF,IAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE;YAChC,IAAI,CAAE,UAAU,EAAE;SACpB;IACH,CAAC;IAED,YAAY,CAAC,YAAgB,EAAC,CAAK,EAAC,iBAAqB,EAAC,MAAU;;QAClE,IAAI,QAAQ,SAAG,IAAI,CAAC,mBAAmB,0CAAE,SAAS,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;QACjE,UAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,0CAAE,MAAM,EAAE;YAC/B,IAAI,YAAY,WAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,CAAC,2CAAG,QAAQ,GAAE;gBAClD,QAAQ,CAAC,UAAU,GAAC,EAAE;aACxB;iBAAM;gBACL,QAAQ,CAAC,UAAU,GAAC,EAAE;gBACtB,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAC,YAAY,EAAC,EAAC;aACnD;SACF;aAAO;YACN,QAAQ,CAAC,UAAU,GAAG,EAAE;YACxB,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAC,YAAY,EAAC,CAAC;SAClD;QACC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,EAAC;YACvC,MAAM,EAAC,MAAM;YACb,QAAQ,EAAC,YAAY;SACtB,CAAC,CAAC,IAAI,CACL,GAAG,CAAC,EAAE;YACJ,IAAI,CAAE,cAAc,CAAC,MAAM,EAAC,CAAC,CAAC;QAChC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAC,CAC9C;IACH,CAAC;IACD,cAAc,CAAC,MAAU,EAAC,CAAK;;QAC7B,IAAI,QAAQ,SAAG,IAAI,CAAC,mBAAmB,0CAAE,SAAS,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CACvD,CAAC,GAAQ,EAAE,EAAE;YACX,QAAQ,CAAC,KAAK,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,WAAW;YAChC,QAAQ,CAAC,GAAG,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;YAC5B,QAAQ,CAAC,IAAI,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;YAC9B,QAAQ,CAAC,GAAG,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;YAC5B,QAAQ,CAAC,IAAI,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;YAC9B,QAAQ,CAAC,IAAI,GAAE,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU;YAC9B,QAAQ,CAAC,cAAc,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,cAAc;QAE/C,CAAC,EAAE,GAAG,CAAC,EAAE;QACT,CAAC,CACF;IACH,CAAC;IACD,4BAA4B,CAAC,OAAW;QACtC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,uBAAuB,CAAC;IAC5D,CAAC;IACD,4BAA4B,CAAC,OAAW;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,uBAAuB,CAAC;IACzD,CAAC;;wFArcU,oBAAoB;oGAApB,oBAAoB;;;;;;;;oKAApB,4BAAwB;;QC1BrC,yEAAoD;QAChD,yEAAwF;QAEpF,yEAA4B;QACvB,oFAAiD;QACtD,4DAAM;QAEN,yEAA4B;QACxB,yEAAwB;QAEpB,mFAA+C;QAG/C,uFAAuD;QAGvD,uFAAuD;QAGjD,oFAAiD;QAE3D,4DAAM;QACV,4DAAM;QACN,0EAA2B;QACvB,uEAAK;QAED,2EAA6B;QAG7B,oIAwDe;QAEf,8MA8Vc;QAClB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,gNAqDc;QAEd,+MAkDc;QAId,qHA8IM;;;QAprByB,0DAA4D;QAA5D,wKAA4D;QA4B5D,2DAAyC;QAAzC,wGAAyC;QA4gBvE,0DAA+B;QAA/B,+FAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC/hBhB,yEAEsB;IAClB,yEAEoC;IAChC,qFAKsB;IAC1B,4DAAM;IACV,4DAAM;;;IATF,0DAA4D;IAA5D,8KAA4D;IAEL,0DAIvD;IAJuD,wIAIvD;;;IAXR,wEAA+E;IAC3E,0HAaM;IACT,qEAAe;;;IAbK,0DAAe;IAAf,wFAAe;;;IAgB5B,0EAA0F;IACtF,sEAAK;IACH,qEAAuC;IACzC,4DAAM;IACV,4DAAM;;;IAFK,0DAAY;IAAZ,qIAAY;;;IAH/B,wEAAsE;IAC9D,yIAIM;IACV,qEAAe;;;IALgD,0DAA6B;IAA7B,sGAA6B;;;IAO5F,yEAA0E;IACtE,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,gKACJ;;;IAVJ,2IAMmB;IACnB,sNAIc;;;;IAXC,0GAAwC;;AClB5D,MAAM,eAAe;IAG1B,YAAmB,mBAAsC;QAAtC,wBAAmB,GAAnB,mBAAmB,CAAmB;QADzD,iBAAY,GAAK,EAAE;QAC0C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,CAAC;IAAC,CAAC;IAEzF,QAAQ;IACR,CAAC;;8EANU,eAAe;+FAAf,eAAe;QDR5B,yEAEgC;QAE5B,yEAAuB;QACnB,yEAAsD;QAClD,yEAA4B;QACxB,wEAAiC;QAAA,uDAAiC;;QAAA,4DAAK;QAC3E,4DAAM;QACN,6HAegB;QACf,uMAaS;QAEd,4DAAM;QACV,4DAAM;QACV,4DAAM;;;QAzCN,wKAA4D;QAMX,0DAAiC;QAAjC,mJAAiC;QAEvD,0DAAkD;QAAlD,iHAAkD;;;;;;;;;;;;;;AER7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAOA;;;;;;;;;;;;;;ICDxD,0EAAwC;IAChC,0EAA0B;IACtB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACf,4DAAM;IACV,4DAAM;;;IAEN,qEAAwI;;;IAA3D,uOAAmD;;;;IAc5H,4EAA2H;IAA9C,+UAAiC;IAA9G,4DAA2H;;;IAsCvH,0EAA0C;IACtC,0EAA0B;IACtB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACf,4DAAM;IACV,4DAAM;;;;IAcH,4EAA+H;IAAhD,iVAAmC;IAAlH,4DAA+H;;;;IAkB1H,6EAOuD;IACnD,mEAAmC;IAAE,2EAAmB;IAAA,uDAAyC;;IAAA,4DAAO;IAC5G,4DAAS;;;IART,uNAGE;IAI0D,0DAAyC;IAAzC,2JAAyC;;;IA+B7G,yEAGkB;IAClB,uDACJ;;IAAA,4DAAK;;;;IAJU,mFAAyB;IAGpC,0DACJ;IADI,+OACJ;;;IACA,wEAGgE;IAChE,uDAEJ;;IAAA,4DAAI;;;IAFA,0DAEJ;IAFI,weAEJ;;;;IAUa,0EAA2F;IACxF,0EAAuC;IACpC,sEAAK;IACJ,0EAA4D;IACxD,qEAE8E;;IAClF,4DAAM;IACP,4DAAM;IACL,0EAAkB;IACd,yEAEc;IAAA,uDACuC;;;;;IAAA,4DAAK;IAC1D,qEAAG;IAAA,oEAAmC;IAAC,4EAAmB;IAAA,wDAA8B;;IAAA,4DAAO;IAC3F,wDAA2D;;IAAA,4DAAI;IACvE,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAfwB,0DAAqC;IAArC,0LAAqC;IAGvC,0DAAsD;IAAtD,iSAAsD;IAKtE,0DAAqC;IAArC,0LAAqC;IACvB,0DACuC;IADvC,ycACuC;IACK,0DAA8B;IAA9B,kJAA8B;IACpF,0DAA2D;IAA3D,mOAA2D;;;;IApB9E,qEAAwF;IACpF,0EAGO;IAFP,qXAA0C;;IAD1C,4DAGO;IACP,6HAkBK;IACT,4DAAK;;;;;IAvBI,0DAAsD;IAAtD,iSAAsD;IAIrD,0DAAmC;IAAnC,6GAAmC;;;;IATlD,yEAG4E;IAD5E,+UAA0C,CAAC,IAAC;IAEvC,oHAwBK;;IACV,4DAAK;;;IAzBuB,0DAAkD;IAAlD,8NAAkD;;;;IAqC1E,yEAAkG;IAA9D,uYAAwB,CAAC,EAAC,uBAAe,oCAAoB;IAAC,uDAA+B;;IAAA,4DAAK;;IAApC,0DAA+B;IAA/B,iJAA+B;;;IAoE3I,0EAAsE;IAClE,0EAA0B;IACpB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACjB,4DAAM;IACZ,4DAAM;;;;IAvBd,sEAAwE;IACpE,0EAA0B;IACtB,yEAAkC;IAAA,uDAA4B;;IAAA,4DAAK;IACnE,6EAEoF;IAA1B,6SAAS,uBAAe,IAAC;IACjF,mEAA4B;IAC9B,4DAAS;IACX,4DAAM;IACN,0EAAwB;IACpB,wEAAgB;IAAA,uDAAsC;;IAAA,4DAAI;IAC1D,2EAAwC;IACpC,8EAC2B;IAA1B,8SAAS,uBAAe,IAAC;IAAC,wDAA8B;;IAAA,4DAAS;IAClE,kFAC2B;IAA3B,0UAA0B;IAAC,wDAAgC;;IAAA,4DAAS;IACxE,4DAAM;IACN,kIAMI;IACR,4DAAM;IACZ,4DAAM;;;IAzBA,qLAAiE;IAE7B,0DAA4B;IAA5B,8IAA4B;IAE9D,0DAAyF;IAAzF,uJAAyF;IAMvE,0DAAsC;IAAtC,0JAAsC;IAGvB,0DAA8B;IAA9B,kJAA8B;IAE9B,0DAAgC;IAAhC,oJAAgC;IAEzD,0DAAiB;IAAjB,qFAAiB;;;IA8B3B,0EAAsE;IAClE,0EAA0B;IACpB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACjB,4DAAM;IACZ,4DAAM;;;;IAzBX,sEAEC;IACA,0EAA0B;IACtB,yEAAkC;IAAA,uDAA2C;;IAAA,4DAAK;IAClF,6EAEoF;IAA1B,6SAAS,uBAAe,IAAC;IACjF,mEAA4B;IAC9B,4DAAS;IACX,4DAAM;IACN,0EAAwB;IACpB,wEAAgB;IAAA,uDAAsC;;IAAA,4DAAI;IAC1D,2EAAwC;IACpC,8EAC2B;IAA1B,8SAAS,uBAAe,IAAC;IAAC,wDAA8B;;IAAA,4DAAS;IAClE,kFAC6B;IAA7B,4UAA4B;IAAC,wDAAgC;;IAAA,4DAAS;IAC1E,4DAAM;IACN,kIAMI;IACR,4DAAM;IACT,4DAAM;;;IA1BN,qLAAiE;IAG1B,0DAA2C;IAA3C,6JAA2C;IAE7E,0DAAyF;IAAzF,uJAAyF;IAMvE,0DAAsC;IAAtC,0JAAsC;IAGvB,0DAA8B;IAA9B,kJAA8B;IAE5B,0DAAgC;IAAhC,oJAAgC;IAE3D,0DAAiB;IAAjB,qFAAiB;;;IAgCX,2EAA2E;IAAA,uDAA4D;;IAAA,4DAAO;;;IAAnE,0DAA4D;IAA5D,gMAA4D;;;IAQ/I,0EAAqE;IACjE,0EAA0B;IACpB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACjB,4DAAM;IACZ,4DAAM;;;;IAjCd,sEAAwE;IACpE,0EAA0B;IACtB,yEAAkC;IAAA,uDAAgC;;IAAA,4DAAK;IACvE,6EAEoF;IAA1B,6SAAS,uBAAe,IAAC;IACjF,mEAA4B;IAC9B,4DAAS;IACX,4DAAM;IACN,0EAAwB;IACpB,0EAA+B;IAE3B,2EAGC;IADD,0VAAkC;IAE9B,oFAE6H;IAAvD,uZAAyB;;IAA8B,4DAAW;IACxI,oIAA8I;IAC9I,2EAAoB;IAChB,8EAA4E;IAAnE,8SAAS,uBAAe,IAAC;IAC9B,wDAA8B;;IAAA,4DAAS;IAC3C,8EAAgF;IAAA,wDAA4B;;IAAA,4DAAS;IACzH,4DAAM;IACV,4DAAO;IACX,4DAAM;IACN,kIAMI;IACR,4DAAM;IACZ,4DAAM;;;IAnCA,qLAAiE;IAE7B,0DAAgC;IAAhC,mJAAgC;IAElE,0DAAyF;IAAzF,uJAAyF;IASnF,0DAAqB;IAArB,sFAAqB;IAKX,0DAA+C;IAA/C,wKAA+C;IAC9C,0DAAmB;IAAnB,uFAAmB;IAGlB,0DAA8B;IAA9B,4JAA8B;IAC1B,0DAA4B;IAA5B,6FAA4B;IAA4C,0DAA4B;IAA5B,gJAA4B;IAIlH,0DAAgB;IAAhB,oFAAgB;;;;ADnU7B,MAAM,mBAAmB;IAe9B,YACS,mBAAsC,EACrC,YAA4B,EAC5B,KAAW,EACX,EAAc,EACd,SAAsB,EACtB,MAAa,EACb,OAAiB,EACjB,SAA0B;QAP3B,wBAAmB,GAAnB,mBAAmB,CAAmB;QACrC,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,UAAK,GAAL,KAAK,CAAM;QACX,OAAE,GAAF,EAAE,CAAY;QACd,cAAS,GAAT,SAAS,CAAa;QACtB,WAAM,GAAN,MAAM,CAAO;QACb,YAAO,GAAP,OAAO,CAAU;QACjB,cAAS,GAAT,SAAS,CAAiB;QArBpC,mBAAc,GAAS,KAAK;QAC5B,qBAAgB,GAAS,KAAK;QAC9B,gBAAW,GAAS,KAAK;QACzB,eAAU,GAAS,KAAK;QAGxB,mBAAc,GAAK,CAAC;QACpB,kBAAa,GAAS,KAAK;QAC3B,+BAA0B,GAAQ,CAAC,CAAC;QACpC,kBAAa,GAAU,EAAE,CAAC;QAcxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9E,IAAI,CAAC,wBAAwB,GAAC,GAAG;QACpC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,CAAC,wBAAwB,GAAC,GAAG;QACpC,CAAC,CAAC,CAAC;IACH,CAAC;IACF,SAAS,CAAC,IAAQ;QACd,IAAI,CAAC,aAAa,GAAC,IAAI;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;IAC3C,CAAC;IACD,MAAM,CAAC,KAAS;QACd,IAAI,CAAC,UAAU,GAAC,IAAI;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CACvD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,UAAU,GAAC,KAAK;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;gBACV,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI;YAChD,CAAC,EACD,GAAG,CAAC,EAAE;YACN,CAAC,CAEF,CACF;QACH,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,UAAU,GAAC,KAAK;QACvB,CAAC,CACF,CACF;IACH,CAAC;IACD,IAAI,IAAI,KAAI,OAAO,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,GAAC;IAClE,QAAQ;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;;YACV,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI;YAC9C,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK;YAC7C,IAAI,CAAC,mBAAmB,CAAC,cAAc,GAAC,KAAK;YAC7C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,WAAW,EAAE,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACxJ,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,EAAE,WAAW,EAAE,GAAG,UAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACtI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,GAAG,EAAC,CAAC,GAAG,iBAAI,CAAC,mBAAmB,0CAAE,WAAW,0CAAE,GAAG,KAAI,EAAE,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,iFAAY,CAAC,CAAC;aAC/F,CAAC;QACJ,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,mBAAmB,CAAC,cAAc,GAAC,KAAK;QAC/C,CAAC,CAEF,CACF;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAC,EAAE;YACT,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS;YACjD,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,GAAC,KAAK;QACxD,CAAC,EAAE,GAAG,CAAC,EAAE;QACT,CAAC,CACF,CACD;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;;YACX,IAAI,CAAC,mBAAmB,CAAC,0BAA0B,GAAC,KAAK;YACzD,IAAI,CAAC,mBAAmB,CAAC,SAAS,SAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,0CAAE,SAAS;QAC9D,CAAC,CACF,CACF;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC9C,CAAC,GAAO,EAAE,EAAE;YACX,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,GAAC,KAAK;YACtD,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAC,GAAG;QACpC,CAAC,EACD,GAAG,CAAC,EAAE,GAAE,CAAC,CACV,CACD;IACA,CAAC;IACD,cAAc,CAAC,KAAS;QACtB,IAAI,CAAC,cAAc,GAAC,IAAI;QACxB,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE;QAC7B,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAC,GAAG;YACxC,IAAI,CAAC,cAAc,GAAC,KAAK;QAC3B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,cAAc,GAAC,KAAK;QAC3B,CAAC,CACF,CACF;IACL,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,WAAW,GAAC,IAAI;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,SAAS,CAChD,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,GAAG;QAC5C,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,WAAW,GAAC,KAAK;QACxB,CAAC,CACF,CACD;IACF,CAAC;IAED,gBAAgB,CAAC,KAAS;QACxB,IAAI,CAAC,gBAAgB,GAAC,IAAI;QAC1B,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE;QAC7B,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3D,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAC,GAAG;YACxC,IAAI,CAAC,gBAAgB,GAAC,KAAK;QAC7B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,gBAAgB,GAAC,KAAK;QAC7B,CAAC,CACF,CACD;IACJ,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,WAAW,GAAC,IAAI;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC,SAAS,CAClD,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,WAAW,GAAC,KAAK;YACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAG,GAAG;QAC5C,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,WAAW,GAAC,KAAK,CAAC;QACzB,CAAC,CACF,CACD;IACJ,CAAC;IACD,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IACD,SAAS;QACL,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAC,GAAG,EAAC,EAAE,EAAC,CAAC,CAAC,SAAS,CACrD,GAAG,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,aAAa,GAAC,KAAK;YACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;gBACV,IAAI,CAAC,mBAAmB,CAAC,WAAW,GAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI;gBAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,EAAC,IAAI,CAAC,wBAAwB,CAAC;YAChF,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,UAAU,GAAC,KAAK;YACvB,CAAC,CAEF,CACD;QACF,CAAC,EACD,GAAG,CAAC,EAAE;YACL,IAAI,CAAC,UAAU,GAAC,KAAK;QACtB,CAAC,CACF,CACF;IACL,CAAC;IACD,YAAY,CAAC,GAAO,EAAC,GAAO;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,EAAG,GAAG,EAAE;YAC9B,kBAAkB,EAAE,MAAM;YAC1B,gBAAgB,EAAE,QAAQ;YAC1B,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IACD,oFAAoF;IACpF,cAAc,CAAC,GAAO;;QACpB,UAAI,IAAI,CAAC,mBAAmB,CAAC,WAAW,0CAAE,YAAY,EAAE;YACzD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAC,aAAa,EAAC,KAAK,CAAC;YAC9C,UAAU,CAAC,GAAG,EAAE;gBACX,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAC,aAAa,EAAC,KAAK,CAAC;YACnD,CAAC,EAAE,GAAG,CAAC,CAAC;YACR,UAAU,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC;YACxD,CAAC,EAAE,GAAG,CAAC,CAAC;SACP;IACC,CAAC;IACD,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC/B,GAAG,CAAC,WAAW,EAAE;QACnB,CAAC,CAAC;IACL,CAAC;;sFAlOW,mBAAmB;mGAAnB,mBAAmB;;;;;;;QCfhC,yEAA6E;QACzE,yEAAuB;QACnB,yEAA2B;QAEvB,yEAC6F;QAE7F,+GAOU;QAEN,+GAAwI;QACxI,yEACe;QACX,yEAA8C;QACzC,kEAA6B;QAClC,0EAMyB;QACzB,wDAAsG;;QAAA,4DAAO;QAC7G,4DAAM;QACN,sHAA2H;QAC3H,uEAAK;QACD,sFAA4B;QAC7B,uEAGC;QACA,8EAKc;QACV,oEAA6B;QAAC,4EAAmB;QAAA,wDAAqC;;QAAA,4DAAO;QACjG,6EAAsE;QAA9C,mJAAU,0BAAsB,IAAC;QAAzD,4DAAsE;QAC1E,4DAAS;QACT,8EAMc;QADd,4RAAS,mBAAuB,IAAC;QAE7B,oEAAgC;QAAC,4EAAmB;QAAA,wDAA8B;;QAAA,4DAAO;QAC7F,4DAAS;QACN,4DAAM;QAEJ,4DAAW;QAChB,4DAAM;QAEV,4DAAM;QACV,4DAAM;QAGN,2EAAkC;QAC9B,2EAA+D;QAE3D,2EAAoC;QAChC,iHAOM;QAEN,+EAKc;QAHd,uRAAS,uBAA0B,IAAC;;QAFpC,4DAKc;QACd,2EACsB;QACnB,0EAAkD;QACjD,mEAA6B;QAE9B,4DAAM;QACN,sHAA+H;QAClI,4DAAM;QAEN,sFAAgC;QAC5B,uEAGC;QAEG,8EAKC;QACG,oEAA6B;QAAC,4EAAmB;QAAA,wDAA2C;;QAAA,4DAAO;QACnG,6EAAwE;QAAhD,mJAAU,4BAAwB,IAAC;QAA3D,4DAAwE;QAC5E,4DAAS;QACT,wHASS;QACT,8EAMc;QADd,4RAAS,mBAA4B,IAAC;QAElC,oEAAgC;QAChC,4EAAmB;QAAA,wDAA8B;;QAAA,4DAAO;QAC5D,4DAAS;QACb,4DAAM;QAER,4DAAW;QAEjB,4DAAM;QAET,2EAOsH;QACpH,uEAAK;QACJ,0EACqC;QACrC,wDAC8E;;;;;QAAA,4DAAK;QAC/E,gHAKC;QACL,8GAMA;QACA,gHA6BK;QACN,4DAAM;QACN,uEAAK;QACJ,8EAG8B;QAC1B,oEAA+B;QAAE,4EAAmB;QAAA,wDAAoC;;QAAA,4DAAO;QACnG,4DAAS;QACb,4DAAM;QACL,4DAAM;QACH,8MAEc;QAEd,sFAAyB;QACrB,uEAAuE;QACnE,8EAMc;QADd,4RAAS,mBAAkB,IAAC;QAExB,oEAA0B;QAAC,4EAAmB;QAAA,wDAAiC;;QAAA,4DAAO;QAC1F,4DAAS;QACT,8EAMc;QADd,4IAAS,eAAW,IAAC;QAEjB,oEAAgC;QAAC,4EAAmB;QAAA,wDAA+B;;QAAA,4DAAO;QAC9F,4DAAS;QACb,4DAAM;QAER,4DAAW;QACjB,4DAAM;QACN,qEAAiB;QAEb,0EAEC;QACG,0EAA4D;QAAA,wEAAM;QAAA,wDAA8B;;QAAA,4DAAO;QAAA,4DAAK;QAC5G,0EAA2D;QAAA,wEAAM;QAAA,wDAA8B;;QAAA,4DAAO;QAAA,4DAAK;QAC3G,0EAA6D;QAAA,wEAAM;QAAA,wDAAgC;;QAAA,4DAAO;QAAA,4DAAK;QAC/G,2EAA4D;QAAA,yEAAM;QAAA,yDAA+B;;QAAA,4DAAO;QAAA,4DAAK;QACjH,4DAAK;QAEb,4DAAM;QAGV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4EAE0D;QAC1D,6EAA+B;QAC/B,4DAAM;QACN,kNA4BgB;QACd,kNA8Bc;QACd,kNAsCc;;;;;QA3VA,wKAA4D;QAO9C,0DAAoB;QAApB,oFAAoB;QAS5B,0DAAiD;QAAjD,qKAAiD;QAGlC,0DAA4B;QAA5B,kFAA4B;QAG7C,0DAGE;QAHF,+KAGE;QAGF,0DAAsG;QAAtG,4RAAsG;QAE7E,0DAAkD;QAAlD,wKAAkD;QAKxE,0DAAgE;QAAhE,4KAAgE;QAG/D,0DAGE;QAHF,kNAGE;QAEmD,0DAAqC;QAArC,kKAAqC;QAI9F,0DAGE;QAHF,kNAGE;QAGsD,0DAA8B;QAA9B,kJAA8B;QAehE,0DAAsB;QAAtB,sFAAsB;QAaxC,0DAAyG;QAAzG,uYAAyG;QAIrF,0DAAgC;QAAhC,kFAAgC;QAIxB,0DAAoD;QAApD,0KAAoD;QAM5E,0DAAgE;QAAhE,4KAAgE;QAI5D,0DAGE;QAHF,kNAGE;QAEmD,0DAA2C;QAA3C,+JAA2C;QAU9F,0DAAmD;QAAnD,uKAAmD;QAIrD,0DAGE;QAHF,kNAGE;QAIqB,0DAA8B;QAA9B,kJAA8B;QASpE,0DAKE;QALF,oNAKE;QAKC,0DAC8E;QAD9E,+iBAC8E;QAGzE,0DAA2C;QAA3C,8JAA2C;QAM/C,0DAA4C;QAA5C,sMAA4C;QAM5C,0DAA4C;QAA5C,sMAA4C;QAmCW,0DAAoC;QAApC,wJAAoC;QASlF,0DAAgE;QAAhE,4KAAgE;QAElE,0DAGE;QAHF,mNAGE;QAGgD,0DAAiC;QAAjC,oJAAiC;QAGnF,0DAGE;QAHF,mNAGE;QAGsD,0DAA+B;QAA/B,kJAA+B;QAS/F,0DAAuB;QAAvB,iFAAuB;QAE+C,0DAA8B;QAA9B,kJAA8B;QAC/B,0DAA8B;QAA9B,kJAA8B;QAC5B,0DAAgC;QAAhC,oJAAgC;QACjC,0DAA+B;QAA/B,oJAA+B;QAUzH,0DAA4D;QAA5D,wKAA4D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IChPpD,wEAA6D;IAC7D,yEAAqG;IACjG,oEACwB;IACxB,wEAEyB;IADzB,oYAAsC;IACb,4DAAI;IACjC,4DAAM;IACN,4DAAQ;;;IANe,0DAAqD;IAArD,kRAAqD;;;;IAQ5E,wEAAmF;IAC9E,yEAAqG;IAClG,qEAAwF;IACxF,wEAAyF;IAAtF,gfAA4D;IAA0B,4DAAI;IAChG,4DAAM;IACT,4DAAQ;;;IAHiB,0DAA0B;IAA1B,2KAA0B;;;IAHxD,wEAAqF;IAClF,sIAKU;IACb,qEAAe;;;IANY,0DAAyD;IAAzD,kOAAyD;;;IA6B9E,0EAAkE;IAC9D,0EAA0B;IACpB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACjB,4DAAM;IACZ,4DAAM;;;;IAvBX,sEAEC;IACA,0EAA0B;IACtB,yEAAkC;IAAA,uDAA2C;;IAAA,4DAAK;IAClF,6EAA4F;IAA1B,8SAAS,uBAAe,IAAC;IACzF,mEAA4B;IAC9B,4DAAS;IACX,4DAAM;IACN,0EAAwB;IACpB,wEAAgB;IAAA,uDAAmC;;IAAA,4DAAI;IACvD,2EAAwC;IACpC,8EAC2B;IAA1B,+SAAS,uBAAe,IAAC;IAAC,wDAA+B;;IAAA,4DAAS;IACnE,kFAC6B;IAA7B,6UAA4B;IAAC,wDAAgC;;IAAA,4DAAS;IAC1E,4DAAM;IACN,mIAMI;IACR,4DAAM;IACT,4DAAM;;;IAxBN,iLAAgE;IAGzB,0DAA2C;IAA3C,6JAA2C;IAM3D,0DAAmC;IAAnC,sJAAmC;IAGpB,0DAA+B;IAA/B,mJAA+B;IAE7B,0DAAgC;IAAhC,oJAAgC;IAE3D,0DAAa;IAAb,gFAAa;;;IA6BnB,0EAAkE;IAC9D,0EAA0B;IACpB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACjB,4DAAM;IACZ,4DAAM;;;;IAvBX,sEAEC;IACA,0EAA0B;IACtB,yEAAkC;IAAA,uDAA2C;;IAAA,4DAAK;IAClF,6EAA4F;IAA1B,8SAAS,uBAAe,IAAC;IACzF,mEAA4B;IAC9B,4DAAS;IACX,4DAAM;IACN,0EAAwB;IACpB,wEAAgB;IAAA,uDAAmC;;IAAA,4DAAI;IACvD,2EAAwC;IACpC,8EAC2B;IAA1B,+SAAS,uBAAe,IAAC;IAAC,wDAA+B;;IAAA,4DAAS;IACnE,kFACwC;IAAxC,gWAAuC;IAAC,wDAAgC;;IAAA,4DAAS;IACrF,4DAAM;IACN,mIAMI;IACR,4DAAM;IACT,4DAAM;;;IAxBN,iLAAgE;IAGzB,0DAA2C;IAA3C,6JAA2C;IAM3D,0DAAmC;IAAnC,sJAAmC;IAGpB,0DAA+B;IAA/B,mJAA+B;IAElB,0DAAgC;IAAhC,oJAAgC;IAEtE,0DAAa;IAAb,gFAAa;;AC/DvB,MAAM,sBAAsB;IAKjC,YAAmB,kBAAqC,EAC9C,MAAa,EACb,YAA4B;QAFnB,uBAAkB,GAAlB,kBAAkB,CAAmB;QAC9C,WAAM,GAAN,MAAM,CAAO;QACb,iBAAY,GAAZ,YAAY,CAAgB;QANxC,YAAO,GAAS,KAAK;QAGrB,kBAAa,GAAU,EAAE,CAAC;IAGkB,CAAC;IAE3C,QAAQ;QACN,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC;IACpB,CAAC;IACD,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,OAAO,GAAC,IAAI;QAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,SAAS,CACjD,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI;YACvD,IAAI,CAAC,OAAO,GAAC,KAAK;YAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC;QACnD,CAAC,EACD,GAAG,CAAC,EAAE;QACN,CAAC,CACF,CACD;IACJ,CAAC;IACD,mBAAmB,CAAC,EAAM;QACxB,IAAI,CAAC,OAAO,GAAC,IAAI;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CACtB,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CACtD,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,OAAO,GAAC,KAAK;YAClB,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAG,GAAG;YACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC;QAEnD,CAAC,EACD,GAAG,CAAC,EAAE;QACN,CAAC,CACF,CACD;IACF,CAAC;IACD,MAAM,KAAI,QAAQ,CAAC,MAAM,EAAE,GAAC;IACyB,gBAAgB,CAAC,KAAoB;QACvF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC;IACD,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC/B,GAAG,CAAC,WAAW,EAAE;QACnB,CAAC,CAAC;IACL,CAAC;;4FAtDW,sBAAsB;sGAAtB,sBAAsB;sKAAtB,4BAAwB;;QDVrC,yEAA6D;QACzD,kEAA2D;QAC3D,uEAA8C;QAA3C,yIAAS,YAAQ,IAAC;QAAyB,4DAAI;QACpD,yEAAwC;QACtC,8EAAyB;QACrB,sHAQQ;QACX,oIAOe;QAEd,4DAAW;QACf,4DAAM;QACR,4DAAM;QACN,gNA4BiB;QACd,gNA4Bc;;QA/EH,0DAAc;QAAd,uEAAc;QACZ,0DAAmD;QAAnD,6MAAmD;QAS/C,0DAAoE;QAApE,uSAAoE;;;;;;;;;;;;;;AEbxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACQ;AACH;AACuB;AACZ;AACG;AACC;;;AAE3E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,eAAe;QACpB,SAAS,EAAC,+FAAsB;KACjC;IACD;QACE,IAAI,EAAC,EAAE;QACP,UAAU,EAAC,cAAc;QACzB,SAAS,EAAC,MAAM;KACjB;IACD;QACE,IAAI,EAAC,QAAQ;QACb,UAAU,EAAC,cAAc;QACzB,SAAS,EAAC,MAAM;KACjB;IACD;QACA,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,sFAAmB;QAC7B,QAAQ,EAAC;YACP,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,uFAAoB,EAAC;YAC7C,EAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,mFAAkB,EAAC;YAC3C,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,2EAAgB,EAAC;YAC3C,EAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,wEAAe,EAAC;SAC1C;KACF;CACA,CAAC;AAMK,MAAM,wBAAwB;;gGAAxB,wBAAwB;uGAAxB,wBAAwB;2GAH1B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,wBAAwB,uFAFzB,4DAAY;;;;;;;;;;;;;ACrCxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAGA;;;;;;;;;;ICgBhE,0EAA8F;IAC1F,0EAAyB;IACrB,wEAAoG;IAChG,uDACJ;;IAAA,4DAAI;IACJ,0EAA0B;IACtB,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IAEf,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAXK,0DAA4D;IAA5D,8KAA4D;IAC3D,0DACJ;IADI,8JACJ;;;;IAgCI,0EAA+D;IAC3D,wEAAuD;IAA/B,gdAA8B;IAAC,4DAAI;IAC3D,qEAAyC;IAC7C,4DAAM;;;IADG,0DAAc;IAAd,2IAAc;;;;IAtCnC,4HAaM;IACN,sEAAuE;IACnE,0EAA0B;IAEtB,yEAAoD;IAAA,uDAAoC;;IAAA,4DAAK;IAE7F,6EAA4F;IAA1B,uSAAS,sBAAe,IAAC;IACvF,mEAA4B;IAChC,4DAAS;IACb,4DAAM;IACN,0EAAwB;IACpB,0EAA4C;IACxC,sEAEW;;IACX,0EAAiB;IAAA,wDAC6D;;;;;IAAA,4DAAK;IACvF,4DAAM;IACN,4EAAoE;IAAvC,uVAAsC;IAE/D,2EACgE;;IAEhE,8HAGM;IACN,2EAC0G;IACtG,wDACA;;IAAA,2EAAwE;IACpE,sEAA2B;IAC1B,2EAAmB;IAAE,wDAA+B;;IAAA,4DAAO;IAC5D,iFAA4E;IAA7C,iVAAgC;IAA/D,4DAA4E;IAChF,4DAAM;IACV,4DAAM;IACN,8EAA4F;IACxF,wDAA8B;;IAAA,4DAAS;IAC/C,4DAAO;IACX,4DAAM;IACV,4DAAM;;;IArDA,oFAAiB;IAclB,0DAAiE;IAAjE,mLAAiE;IAGV,0DAAoC;IAApC,uJAAoC;IAShF,0DAAwG;IAAxG,mZAAwG;IAE3F,0DAC6D;IAD7D,0jBAC6D;IAE5E,0DAAsB;IAAtB,sFAAsB;IAGpB,0DAAgD;IAAhD,yKAAgD;IADnB,wEAAmB;IAGH,0DAAY;IAAZ,+EAAY;IAMzD,0DACA;IADA,mKACA;IAE0B,0DAA+B;IAA/B,6JAA+B;IAIrD,0DAA6B;IAA7B,6FAA6B;IACjC,0DAA8B;IAA9B,4JAA8B;;AD3D3C,MAAM,gBAAgB;IAO3B,YAAmB,mBAAsC,EAChD,YAA4B,EAC3B,EAAc;QAFL,wBAAmB,GAAnB,mBAAmB,CAAmB;QAChD,iBAAY,GAAZ,YAAY,CAAgB;QAC3B,OAAE,GAAF,EAAE,CAAY;QAJxB,gBAAW,GAAY,KAAK;QAC5B,kBAAa,GAAO,EAAE;IAGM,CAAC;IAE7B,QAAQ;IACR,CAAC;IACD,SAAS,CAAC,QAA0B;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,iFAAY,CAAC,CAAC;SACnD,CAAC;IACJ,CAAC;IACD,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC;IACnC,SAAS,CAAC,KAAU;QAElB,IAAI,CAAC,WAAW,GAAG,IAAI;QACvB,IAAI,YAAY,GAAG,IAAI,QAAQ;QAC/B,YAAY,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC;QAC7C,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC;SAC7C;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,SAAS,CACxD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,SAAS,GAAG,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,KAAK;YACxB,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,qBAAqB,EAAE;QAC9B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,KAAK;QAC1B,CAAC,CACF,CACF;IACH,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC/C,CAAC,GAAO,EAAE,EAAE;YACV,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,KAAK;QACjD,CAAC,EACD,GAAG,CAAC,EAAE;QACN,CAAC,CAEF,CACF;IACH,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC9C,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,GAAG,KAAK;YACxD,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,GAAG;QACvC,CAAC,EACD,GAAG,CAAC,EAAE,GAAG,CAAC,CACX,CACF;IACH,CAAC;IAEC,kDAAkD;IAClD,aAAa,CAAC,KAAU;QACtB,KAAK,CAAC,KAAK,GAAG,EAAE;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI;IACvB,CAAC;IACD,gDAAgD;IAC9C,2CAA2C;IAC/C,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAEtC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC9B,CAAC,CAAC;QAEF,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACzB,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI;SACtB;IACH,CAAC;IACD,yCAAyC;IACzC,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC/B,GAAG,CAAC,WAAW,EAAE;QACnB,CAAC,CAAC;IACJ,CAAC;;gFAlGU,gBAAgB;gGAAhB,gBAAgB;;QCX7B,yEAC6D;QACzD,yEAAwC;QACpC,yEAEW;QAFN,qIAAS,eAAW,IAAC;;QAA1B,4DAEW;QACX,uEAAqE;QAA9B,iRAAS,kBAAmB,IAAC;QAChE,uDACJ;;;QAAA,4DAAI;QACR,4DAAM;QACN,gEAAI;QACJ,yEAA+F;QAC3F,wDACA;;QAAA,0EAC6B;QADyB,oRAAS,kBAAmB,IAAC;QAE/E,sEAA2B;QAAG,2EAAmB;QAAA,wDAA+B;;QAAA,4DAAO;QAC3F,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4MAuDc;;QAzEd,wKAA4D;QAGhD,0DAAyG;QAAzG,qYAAyG;QAGzG,0DACJ;QADI,uPACJ;QAIA,0DACA;QADA,mKACA;QAEqD,0DAA+B;QAA/B,mJAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICLxF,uEAA6E;IACzE,uDAA+E;;IAAA,4DAAI;;;IAAnF,0DAA+E;IAA/E,oTAA+E;;;;IAiB3E,0EAA2F;IACvF,0EAAuC;IACnC,sEAAK;IACD,0EAAwD;IACpD,qEAA+E;;IACnF,4DAAM;IACV,4DAAM;IACN,0EAAkB;IACd,yEAAsD;IAClD,uDAC+C;;;;;IAAA,4DAAK;IACxD,qEAAG;IAAA,oEAAmC;IAAC,4EAAmB;IAAA,wDAA8B;;IAAA,4DAAO;IAC3F,wDAAyD;;IAAA,4DAAI;IAErE,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAb2B,0DAAkC;IAAlC,2JAAkC;IAC9B,0DAAkD;IAAlD,qRAAkD;IAIvE,0DAAmC;IAAnC,oLAAmC;IACnC,0DAC+C;IAD/C,8bAC+C;IACO,0DAA8B;IAA9B,kJAA8B;IACpF,0DAAyD;IAAzD,4NAAyD;;;;IA3B7E,yEAE4F;IAAxF,qXAA0C,gSAA2C,CAAC,IAA5C;IAC1C,0EAA8B;IAC1B,0EAAkE;IAC9D,qEAAiF;;IACrF,4DAAM;IACN,4EAGW;IACP,uDAEJ;;;;;;IAAA,4DAAI;IACR,4DAAM;IACN,qIAgBM;IACV,4DAAM;;;;;;IA5BiC,0DAAkC;IAAlC,2JAAkC;IACtC,0DAAkD;IAAlD,qRAAkD;IAG7E,0DAAkC;IAAlC,2JAAkC;IAG9B,0DAEJ;IAFI,qgBAEJ;IAEE,0DAAmC;IAAnC,2GAAmC;;ACpB9C,MAAM,6BAA6B;IAExC,YAAmB,mBAAsC;QAAtC,wBAAmB,GAAnB,mBAAmB,CAAmB;QADzD,+BAA0B,GAAG,CAAC,CAAC;IAC8B,CAAC;IAChE,IAAI,IAAI,KAAI,OAAO,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,GAAC;IAChE,QAAQ;IACR,CAAC;;0GALU,6BAA6B;6GAA7B,6BAA6B;QDP1C,yEAGC;QACD,yEAAkD;QAC9C,yEAA+D;QAC3D,wEAA0D;QAAA,uDAAoC;;QAAA,4DAAK;QACnG,uEAA2B;QAAA,uDAA0C;;QAAA,4DAAI;QAC7E,4DAAM;QACN,qHACuF;QACvF,0EAAiB;QACb,6HAgCM;;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;;QA9CN,wKAA4D;QAKM,0DAAoC;QAApC,sJAAoC;QACnE,0DAA0C;QAA1C,4JAA0C;QAErE,0DAA2C;QAA3C,6JAA2C;QAGrB,0DAAiD;QAAjD,+KAAiD;;;;;;;;;;;;;;;;;;;;;;;;;;;IEAvE,yEAC6B;IACzB,sEAAK;IACD,yEAA+B;IAC3B,oEAA2C;IAC/C,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAH6B,0DAAY;IAAZ,qIAAY;;ACThD,MAAM,0BAA0B;IAErC,YAAmB,mBAAsC;QAAtC,wBAAmB,GAAnB,mBAAmB,CAAmB;IAAI,CAAC;IAE9D,QAAQ;IACR,CAAC;;oGALU,0BAA0B;0GAA1B,0BAA0B;QDNvC,yEAGC;QAED,yEAAkD;QAC9C,yEAA+D;QAC3D,wEAAyD;QAAA,uDAAkC;;QAAA,4DAAK;QAChG,uEAA0B;QAAA,uDAAwC;;QAAA,4DAAI;QAC1E,4DAAM;QACN,yEAAiB;QACb,wHAOM;;QACV,4DAAM;QACV,4DAAM;QACN,4DAAM;;QApBN,wKAA4D;QAMK,0DAAkC;QAAlC,mJAAkC;QACjE,0DAAwC;QAAxC,yJAAwC;QAG5C,0DAA6C;QAA7C,2KAA6C;;;;;;;;;;;;;;AEb3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC8B;AACO;AAC3B;AAC8S;AAC5S;AACW;AACT;AAC2E;AAChF;AAC8G;AACnH;AACM;AACwB;AACA;AACsD;AACtC;AAC9B;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACE;AACO;AACL;AACO;AACP;AACE;AACK;AACJ;AACQ;AACb;;AAE1C;AACA,iDAAiD;AACjD,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,yDAAkB;AACtB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,yDAAkB;AACtB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,sDAAsD;AACtD,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,mFAAmF,CAAC,2DAAoB,MAAM,+BAA+B,gBAAgB,2DAAoB,IAAI,6CAA6C,EAAE;AACzP,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,wBAAwB,2DAAoB;AAC5C,mBAAmB,2DAAoB;AACvC,IAAI,yDAAkB;AACtB,IAAI,yDAAkB;AACtB,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD,iDAAiD;AACjD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,8CAA8C;AAC9C,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD;AACA,sDAAsD;AACtD,yDAAyD;AACzD,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,wHAAwH,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,mCAAmC,EAAE,qHAAqH,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,qCAAqC,EAAE;AACld,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,CAAC;AACD,wDAAwD;AACxD,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,sHAAsH,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,mCAAmC,EAAE,iHAAiH,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,gDAAgD,EAAE,mHAAmH,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,iDAAiD,EAAE;AAChsB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,CAAC;AACD,8DAA8D;AAC9D,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kIAAkI,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,oCAAoC,EAAE,2HAA2H,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,qDAAqD,EAAE,+HAA+H,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,gDAAgD,EAAE;AAC5uB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,CAAC;AACD,+DAA+D;AAC/D;AACA,2DAA2D;AAC3D,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,IAAI,4DAAqB;AACzB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,yDAAyD,SAAS;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM,UAAU,IAAI;AACtC;AACA;AACA,gEAAgE,uCAAuC;AACvG,0BAA0B,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AAChL,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,2CAA2C;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,qBAAqB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2CAA2C,2BAA2B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,4DAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,yCAAyC,sDAAe,aAAa,sDAAe,CAAC,kEAAkB,GAAG;AAClL,8BAA8B,gEAAyB,EAAE,oEAAoE;AAC7H;AACA,KAAK,kBAAkB;AACvB,KAAK,OAAO,kEAAW;AACvB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,kBAAkB,GAAG,OAAO,kEAAkB,EAAE,EAAE,EAAE,QAAQ,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,+CAA+C,sDAAe,CAAC,kEAAkB,GAAG;AACxK,oCAAoC,gEAAyB,EAAE,gFAAgF;AAC/I;AACA,KAAK,OAAO,kEAAW;AACvB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,OAAO,kEAAkB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,8CAA8C,sDAAe,CAAC,kEAAkB,GAAG;AACrK,mCAAmC,gEAAyB,EAAE,8EAA8E;AAC5I;AACA,KAAK,OAAO,kEAAW;AACvB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,OAAO,kEAAkB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,4BAA4B,kEAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,4BAA4B,kEAAW;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4DAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,mDAAmD,sDAAe,CAAC,kEAAkB,GAAG;AACpL,wCAAwC,gEAAyB,EAAE,wFAAwF;AAC3J;AACA,KAAK,OAAO,kEAAW;AACvB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,OAAO,kEAAkB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAQ,QAAQ,sDAAQ,wCAAwC,kEAAW;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAY;AACjD;AACA,kCAAkC,0DAAY;AAC9C;AACA,kCAAkC,0DAAY;AAC9C;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0CAA0C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,kEAAW;AAC5B;AACA;AACA,iBAAiB,+DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA;AACA,iBAAiB,8DAAO;AACxB;AACA;AACA;AACA;AACA,iBAAiB,gEAAS;AAC1B;AACA;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB;AACA,wCAAwC,4DAA4D;AACpG;AACA;AACA;AACA;AACA,iBAAiB,6DAAM;AACvB;AACA,iDAAiD,6EAAc;AAC/D;AACA;AACA,8CAA8C,qBAAqB;AACnE;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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CA,qCAAqC,iDAAY;AACjD;AACA,kCAAkC,0DAAY;AAC9C;AACA,gCAAgC,0DAAY;AAC5C;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,kEAAW;AAC5B;AACA;AACA,iBAAiB,+DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA,iBAAiB,8DAAO;AACxB;AACA;AACA;AACA,iBAAiB,gEAAS;AAC1B;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB,oCAAoC,4DAA4D;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,yCAAyC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,kEAAkB,MAAM,+DAAwB,CAAC,iEAAqB,MAAM;AAC3P,wBAAwB,+DAAwB,EAAE,oHAAoH;AACtK,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,2IAA2I,YAAY,uGAAuG,iaAAia;AACjrB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,yGAAyG,kCAAkC,EAAE,kFAAkF,+CAA+C,EAAE;AACzS,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,uEAAuE;AAC9E;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,OAAO,iEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,oDAAM,EAAE;AACrC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,wBAAwB,OAAO,uDAAS,4BAA4B;AACpE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,+DAAwB,EAAE,GAAG,OAAO,kEAAkB;AAC5F,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,iEAAqB;AAC/C,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iDAAY;AACjD;AACA,kCAAkC,0DAAY;AAC9C;AACA,iCAAiC,0DAAY;AAC7C;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,kEAAW;AAC5B;AACA;AACA,iBAAiB,+DAAQ;AACzB;AACA;AACA,iBAAiB,iEAAU;AAC3B;AACA;AACA,iBAAiB,2DAAI;AACrB;AACA;AACA,iBAAiB,0DAAG;AACpB;AACA;AACA,iBAAiB,8DAAO;AACxB;AACA;AACA;AACA,iBAAiB,gEAAS;AAC1B;AACA;AACA;AACA,iBAAiB,4DAAK;AACtB,iBAAiB,4DAAK;AACtB,qCAAqC,6DAA6D;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2CAA2C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,uEAAgB,MAAM,+DAAwB,CAAC,kEAAkB,MAAM,+DAAwB,CAAC,iEAAqB,MAAM;AAC3R,mBAAmB,+DAAwB,EAAE,oGAAoG;AACjJ,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,2IAA2I,YAAY,yGAAyG,ybAAyb;AAC3sB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,oGAAoG,mCAAmC,EAAE,6EAA6E,+CAA+C,EAAE;AAChS,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ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A;AACA,SAAS;AACT;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mEAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,qBAAqB,+DAAwB,CAAC,kEAAkB,MAAM,+DAAwB,CAAC,uEAAgB,MAAM,+DAAwB,CAAC,+DAAwB,GAAG;AACpR,mBAAmB,+DAAwB,EAAE,mGAAmG;AAChJ,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,2CAA2C,qQAAqQ,YAAY,+JAA+J,wCAAwC,gEAAyB,8CAA8C,kEAA2B,6kCAA6kC;AACzrD,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0D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kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oEAAO;AAC3B,QAAQ,kEAAK,SAAS,kEAAK;AAC3B;AACA;AACA,SAAS;AACT,QAAQ,uEAAU,kBAAkB,oEAAO,qCAAqC,kEAAK;AACrF;AACA;AACA,SAAS;AACT,QAAQ,uEAAU,cAAc,oEAAO,iBAAiB,kEAAK,EAAE,aAAa;AAC5E;AACA;AACA,oBAAoB,oEAAO;AAC3B,QAAQ,kEAAK,SAAS,kEAAK,EAAE,aAAa;AAC1C,QAAQ,kEAAK,UAAU,kEAAK,EAAE,aAAa;AAC3C;AACA;AACA,QAAQ,uEAAU,cAAc,oEAAO;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yEAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAY;AAC9C;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,yBAAyB,+DAAwB,CAAC,kEAAkB,GAAG,+DAAwB,wCAAwC,+DAAwB,qBAAqB;AAC3Z,4BAA4B,+DAAwB,EAAE,+HAA+H;AACrL,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,4HAA4H;AACnI,QAAQ,qEAA8B,2GAA2G,kCAAkC,EAAE;AACrL,KAAK;AACL,QAAQ,qEAA8B;AACtC,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,iBAAiB,iDAAiD,wEAAiC,0gBAA0gB;AAC/nB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,sGAAsG,2CAA2C,EAAE,yGAAyG,4CAA4C,EAAE,qGAAqG,4CAA4C,EAAE,2GAA2G,yCAAyC,EAAE;AAC5mB,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,4EAA4E,uCAAuC,EAAE,2EAA2E,wCAAwC,EAAE,6EAA6E,+BAA+B,EAAE;AACjX,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,+DAAwB;AAChC,KAAK,EAAE,eAAe,8DAAmB,eAAe,uDAAc,EAAE,mEAAsB,EAAE,kEAAgB,qCAAqC,cAAc,kBAAkB,sCAAsC,YAAY,aAAa,qDAAqD,kBAAkB,SAAS,OAAO,eAAe,mEAAmE,aAAa,kCAAkC,aAAa,sBAAsB,8BAA8B,8BAA8B,cAAc,gBAAgB,cAAc,aAAa,gEAAgE,iBAAiB,iBAAiB,gBAAgB,gBAAgB,4CAA4C,WAAW,YAAY,wCAAwC,gEAAgE,WAAW,aAAa,uCAAuC,gEAAgE,WAAW,aAAa,6EAA6E,cAAc,+BAA+B;AAClqC;AACA;AACA,WAAW,sBAAsB;AACjC;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,8BAA8B;AACnC,KAAK,OAAO,kEAAW,EAAE;AACzB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,8CAA8C,GAAG;AACvH,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,uDAAS,wBAAwB;AACzD;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,24CAA24C,oBAAoB;AAC/5C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA,kDAAkD,cAAc,kBAAkB,sCAAsC,YAAY,aAAa,qDAAqD,kBAAkB,SAAS,OAAO,eAAe,mEAAmE,aAAa,kCAAkC,aAAa,sBAAsB,8BAA8B,8BAA8B,cAAc,gBAAgB,cAAc,aAAa,gEAAgE,iBAAiB,iBAAiB,gBAAgB,gBAAgB,4CAA4C,WAAW,YAAY,wCAAwC,gEAAgE,WAAW,aAAa,uCAAuC,gEAAgE,WAAW,aAAa,6EAA6E,cAAc;AAChiC,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,+DAAwB,EAAE,GAAG,8BAA8B,GAAG,OAAO,kEAAkB,EAAE,GAAG;AAC/J,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG,0BAA0B,EAAE,EAAE,GAAG;AACpD,kBAAkB,uDAAS;AAC3B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,gCAAgC,0DAAY;AAC5C;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,wBAAwB,oFAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA,6BAA6B,oFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA,2BAA2B,gFAAiB;AAC5C;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA,QAAQ,oFAAqyCAAyC,4DAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B,mEAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAAI;AACvC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AA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ACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uDAAuD;AAC/G,qBAAqB,+DAAwB,EAAE,+FAA+F,gEAAyB;AACvK;AACA,aAAa,yDAAyD;AACtE,YAAY,wEAAiC,0EAA0E,EAAE,wCAAwC;AACjK,iDAAiD,mEAA4B;AAC7E,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA,qBAAqB,yDAAyD;AAC9E;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA,6BAA6B,0DAAY;AACzC;AACA,gCAAgC,4CAAO;AACvC,iCAAiC;AACjC,yCAAyC;AACzC,mCAAmC;AACnC,yCAAyC,iDAAY;AACrD,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA,wBAAwB,wBAAwB,+CAA+C;AAC/F;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB,qCAAqC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB,qCAAqC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mDAAmD;AACvE;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iEAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,kEAAkB,MAAM,+DAAwB,CAAC,uEAAgB,MAAM;AACjQ,8BAA8B,+DAAwB,EAAE,wCAAwC,uCAAuC,YAAY,mDAAmD,aAAa,kEAA2B,GAAG;AACjP;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAW,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC3D,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uEAAgB,IAAI;AACnG;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,iBAAiB,OAAO,oDAAM,EAAE;AAChC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,kEAAkB;AACrF,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,uEAAgB;AACvC,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA,aAAa,6DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAY;AAC/C,0BAA0B,0DAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,+DAAwB,CAA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EAAE,GAAG,OAAO,sDAAe,EAAE,GAAG,OAAO,sDAAc;AACpI,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,kEAA0B;AACpD,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,OAAO,kEAAkB;AAC5C,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,uEAAgB;AACvC,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iDAAY;AAC/C;AACA,0CAA0C,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM,GAAG,eAAe,GAAG,IAAI;AAClE;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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wB,EAAE,oEAAoE,6BAA6B,EAAE;AAChJ;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,wBAAwB,EAAE,EAAE,GAAG;AAC3F,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,wBAAwB,kFAAoB;AAC5C;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,gBAAgB,mFAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAsC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAS;AACzB,0BAA0B,gEAAS,MAAM,gEAAS;AAClD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,8DAAe,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAQ,MAAM;AACnR,2BAA2B,+DAAwB,EAAE,0MAA0M;AAC/P,QAAQ,wDAAiB,mEAAmE,gCAAgC,EAAE;AAC9H,KAAK,EAAE,WAAW,sIAAsI,qCAAqC;AAC7L;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC3F;AACA;AACA,eAAe,OAAO,mDAAK,iCAAiC;AAC5D,eAAe,OAAO,mDAAK,iCAAiC;AAC5D,eAAe,OAAO,mDAAK,kCAAkC;AAC7D,yBAAyB,OAAO,0DAAY,oBAAoB;AAChE;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,8DAAe,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AAChH,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,8DAAuB,EAAE,wBAAwB;AACxE,uBAAuB,8DAAuB,EAAE,YAAY,oEAAc,IAAI;AAC9E,cAAc,oDAAoD,gEAAyB,mBAAmB,4BAA4B,2CAA2C,EAAE,wBAAwB,SAAS,oEAAc,EAAE,EAAE,wBAAwB,2CAA2C,EAAE,EAAE,EAAE,EAAE;AACrT,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA,0BAA0B,oEAAc;AACxC;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8E;;AAE9E,sC;;;;;;;;;;;;AClbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACV;AACsL;AAChK;AAClB;AACW;AACb;AACW;AACqB;AAChC;AAC4B;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACI;AACN;AACO;;AAEjD;AACA;AACA;AACA;AACA,wDAAwD;AACxD,IAAI,qEAA8B;AAClC,IAAI,4DAAqB;AACzB,IAAI,uDAAgB;AACpB,IAAI,uDAAgB;AACpB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,IAAI,4DAAqB;AACzB,IAAI,uDAAgB;AACpB,IAAI,uDAAgB;AACpB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,IAAI,mEAA4B;AAChC,CAAC;AACD,+CAA+C;AAC/C,IAAI,4DAAqB;AACzB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,gEAAgE;AAChE,IAAI,qEAA8B;AAClC,IAAI,0DAAmB;AACvB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,mEAA4B;AAChC,CAAC;AACD,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,8DAA8D;AAC9D,IAAI,0DAAmB;AACvB,CAAC;AACD,wDAAwD;AACxD,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,iDAAiD;AACjD,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,mGAAmG,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,mCAAmC,EAAE;AACjO,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,yDAAkB;AACtB,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,gDAAgD;AAChD,IAAI,4DAAqB;AACzB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,gDAAgD;AAChD,IAAI,4DAAqB;AACzB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,yDAAkB;AACtB,CAAC;AACD,gDAAgD;AAChD,IAAI,4DAAqB;AACzB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,oBAAoB,2DAAoB;AACxC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,gDAAgD;AAChD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAc;AACpC;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA,8CAA8C,8BAA8B;AAC5E,gBAAgB,+DAAwB,EAAE,+JAA+J;AACzM,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,WAAW,aAAa,gEAAyB,GAAG,4CAA4C,KAAK;AACvH;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,4CAA4C;AACzE,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mEAAO;AAC/B;AACA,QAAQ,iEAAK,UAAU,iEAAK,EAAE,0CAA0C;AACxE,QAAQ,sEAAU;AAClB,YAAY,iEAAK,EAAE,4CAA4C;AAC/D,YAAY,mEAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yCAAyC;AAC7G,2BAA2B,+DAAwB,EAAE,4BAA4B;AACjF,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA,4CAA4C,6BAA6B;AACzE,eAAe,+DAAwB,EAAE,0IAA0I;AACnL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,2BAA2B,aAAa,gEAAyB,GAAG,2CAA2C,KAAK;AACtI;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,UAAU,OAAO,mDAAK,EAAE;AACxB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,2CAA2C;AACxE,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,gBAAgB,+DAAwB,EAAE,6CAA6C;AACvF,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,sBAAsB,+DAAwB,EAAE,yDAAyD;AACzG,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAc;AACrC;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,iBAAiB,+DAAwB,EAAE,iEAAiE,gEAAyB,GAAG,8CAA8C,KAAK;AAC3L,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,8CAA8C;AAC3E,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAc;AACrC;AACA;AACA;AACA,gDAAgD,+BAA+B;AAC/E,iBAAiB,+DAAwB,EAAE,iEAAiE,gEAAyB,GAAG,8CAA8C,KAAK;AAC3L,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,6BAA6B,8CAA8C;AAC3E,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yEAAU;AACzC;AACA;AACA;AACA;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA;AACA;AACA;AACA,2BAA2B,4DAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,mCAAmC,mFAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,oBAAoB;AACpG;AACA;AACA,kCAAkC,gEAAS;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,QAAQ,kDAAK;AACb;AACA;AACA,SAAS;AACT;AACA,wCAAwC,gEAAS;AACjD;AACA;AACA,SAAS;AACT;AACA,yCAAyC,gEAAS;AAClD;AACA;AACA,SAAS;AACT;AACA,kCAAkC,gEAAS;AAC3C;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAS,kDAAkD,2DAAI;AAC/E;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C,yCAAyC,WAAW;AACpD;AACA,uBAAuB,mBAAmB;AAC1C,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,wDAAU,GAAG,+DAAwB,CAAC,gEAAqB,MAAM,+DAAwB,qCAAqC,+DAAwB,CAAC,8DAAe,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,2FAAqB,MAAM;AACtd,oBAAoB,+DAAwB,EAAE,+HAA+H;AAC7K,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,mDAAmD;AAC1D,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,6GAA6G;AACpH,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,uIAAuI,yCAAyC,gEAAyB;AAC3N,aAAa,qDAAqD;AAClE,YAAY,wEAAiC,8hDAA8hD;AAC3kD,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,uEAAuE,+EAA+E,EAAE;AACjL,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,oDAAW,EAAE,wDAAe,EAAE,4DAAmB,EAAE,wEAAwB,6BAA6B,qBAAqB,kBAAkB,gBAAgB,0BAA0B,iBAAiB,wBAAwB,kBAAkB,qBAAqB,oBAAoB,qBAAqB,sBAAsB,WAAW,8CAA8C,mBAAmB,UAAU,kBAAkB,sBAAsB,cAAc,kBAAkB,UAAU,YAAY,YAAY,gDAAgD,uDAAuD,8BAA8B,kBAAkB,OAAO,uBAAuB,WAAW,YAAY,gBAAgB,oBAAoB,wCAAwC,UAAU,QAAQ,sBAAsB,kBAAkB,OAAO,aAAa,oBAAoB,WAAW,mBAAmB,uBAAuB,gBAAgB,qBAAqB,sJAAsJ,aAAa,gCAAgC,wBAAwB,UAAU,QAAQ,uHAAuH,cAAc,sGAAsG,aAAa,gIAAgI,cAAc,gBAAgB,uLAAuL,aAAa,2OAA2O,cAAc,iDAAiD,gBAAgB,0BAA0B,kBAAkB,WAAW,oBAAoB,gCAAgC,uBAAuB,kBAAkB,OAAO,WAAW,qBAAqB,sBAAsB,UAAU,mEAAmE,iHAAiH,UAAU,eAAe,mKAAmK,kCAAkC,kBAAkB,sBAAsB,WAAW,gBAAgB,oFAAoF,UAAU,WAAW,kBAAkB,wBAAwB,6BAA6B,aAAa,4BAA4B,aAAa,WAAW,cAAc,gCAAgC,kBAAkB,yBAAyB,QAAQ,6HAA6H,gBAAgB,2DAA2D,0BAA0B,4BAA4B,+EAA+E,kBAAkB,kEAAkE,aAAa,cAAc,kBAAkB,SAAS,WAAW,WAAW,uDAAuD,SAAS,WAAW,iFAAiF,SAAS,qBAAqB,0IAA0I,UAAU,eAAe,0DAA0D,kKAAkK,gBAAgB,kEAAkE,cAAc,yBAAyB,aAAa,uBAAuB,mBAAmB,YAAY,aAAa,UAAU,SAAS,WAAW,eAAe,sBAAsB,mBAAmB,uBAAuB,mCAAmC,gBAAgB,6DAA6D,aAAa,0NAA0N,wBAAwB,+JAA+J,kBAAkB,mMAAmM,cAAc,6OAA6O,cAAc,gBAAgB,UAAU,6IAA6I,gBAAgB,gCAAgC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,sDAAsD,qBAAqB,qCAAqC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,2DAA2D,qBAAqB,8CAA8C,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,oEAAoE,qBAAqB,yCAAyC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,+DAA+D,qBAAqB,iEAAiE,6BAA6B,oCAAoC,gBAAgB,sEAAsE,6BAA6B,oCAAoC,gBAAgB,+EAA+E,6BAA6B,oCAAoC,gBAAgB,0EAA0E,6BAA6B,oCAAoC,gBAAgB,2BAA2B,gBAAgB,cAAc,iDAAiD,YAAY,2BAA2B,cAAc,cAAc,yBAAyB,qBAAqB,wBAAwB,kBAAkB,6BAA6B,oBAAoB,sBAAsB,gBAAgB,SAAS,mBAAmB,qCAAqC,aAAa,2CAA2C,SAAS,wCAAwC,eAAe,oCAAoC,cAAc,gBAAgB,2EAA2E,cAAc,oEAAoE,aAAa,QAAQ,SAAS,kCAAkC,mCAAmC,qBAAqB,kBAAkB,QAAQ,QAAQ,kBAAkB,oBAAoB,8EAA8E,WAAW,OAAO,0DAA0D,mBAAmB,oEAAoE,gBAAgB,kBAAkB,qEAAqE,4BAA4B,sGAAsG,gBAAgB,mGAAmG,iBAAiB,8DAA8D,6BAA6B,mBAAmB,sIAAsI,UAAU,oJAAoJ,aAAa,wBAAwB,wKAAwK,kBAAkB,4DAA4D,WAAW,sFAAsF,SAAS,qBAAqB,yDAAyD,MAAM,WAAW,gBAAgB,mFAAmF,SAAS,qBAAqB,oFAAoF,sBAAsB,6BAA6B,8GAA8G,wBAAwB,qBAAqB,kGAAkG,WAAW,iEAAiE,eAAe,wDAAwD,wBAAwB,mBAAmB,kBAAkB,oHAAoH,UAAU,2DAA2D,aAAa,kBAAkB,UAAU,OAAO,QAAQ,SAAS,oBAAoB,gIAAgI,8BAA8B,cAAc,iEAAiE,0BAA0B,wBAAwB,2EAA2E,yBAAyB,uBAAuB,0BAA0B,+DAA+D,0BAA0B,uBAAuB,YAAY,yEAAyE,wBAAwB,wBAAwB,0BAA0B,+DAA+D,wBAAwB,8BAA8B,uBAAuB,wBAAwB,oHAAoH,6BAA6B,iEAAiE,UAAU,yRAAyR,iBAAiB,yJAAyJ,UAAU,0DAA0D,qKAAqK,UAAU,oHAAoH,UAAU,0DAA0D,0HAA0H,UAAU,qEAAqE,cAAc,seAAse,gBAAgB,+DAA+D,kBAAkB,8DAA8D,WAAW,wFAAwF,SAAS,qBAAqB,2DAA2D,SAAS,WAAW,qFAAqF,SAAS,qBAAqB,sFAAsF,sBAAsB,6BAA6B,gHAAgH,wBAAwB,qBAAqB,8IAA8I,UAAU,eAAe,0DAA0D,sKAAsK,gBAAgB,+BAA+B,yDAAyD,sBAAsB;AAC1hd;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAU,IAAI,GAAG;AAC5E,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,2CAA2C,GAAG;AACpH,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,2FAAqB,IAAI;AACrG;AACA;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,uDAAS,wBAAwB;AAC5D,+BAA+B,OAAO,uDAAS,iCAAiC,eAAe,IAAI;AACnG,0BAA0B,OAAO,uDAAS,6BAA6B;AACvE,cAAc,OAAO,uDAAS,oBAAoB;AAClD,yBAAyB,OAAO,0DAAY,gCAAgC;AAC5E,sBAAsB,OAAO,0DAAY,+BAA+B,eAAe,IAAI;AAC3F,4BAA4B,OAAO,0DAAY,qBAAqB;AACpE,yBAAyB,OAAO,0DAAY,oBAAoB,eAAe,IAAI;AACnF,yBAAyB,OAAO,0DAAY,2BAA2B;AACvE,sBAAsB,OAAO,6DAAe,qBAAqB,oBAAoB,IAAI;AACzF,qBAAqB,OAAO,6DAAe,qBAAqB,oBAAoB,IAAI;AACxF,uBAAuB,OAAO,6DAAe,sBAAsB,oBAAoB,IAAI;AAC3F,uBAAuB,OAAO,6DAAe,sBAAsB,oBAAoB,IAAI;AAC3F;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA,qrEAAqrE,sBAAsB,waAAwa,8kCAA8kC,WAAW;AAC5sH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD;AACA,qBAAqB,qDAAqD;AAC1E;AACA,0CAA0C,qBAAqB,kBAAkB,gBAAgB,0BAA0B,iBAAiB,wBAAwB,kBAAkB,qBAAqB,oBAAoB,qBAAqB,sBAAsB,WAAW,8CAA8C,mBAAmB,UAAU,kBAAkB,sBAAsB,cAAc,kBAAkB,UAAU,YAAY,YAAY,gDAAgD,uDAAuD,8BAA8B,kBAAkB,OAAO,uBAAuB,WAAW,YAAY,gBAAgB,oBAAoB,wCAAwC,UAAU,QAAQ,sBAAsB,kBAAkB,OAAO,aAAa,oBAAoB,WAAW,mBAAmB,uBAAuB,gBAAgB,qBAAqB,sJAAsJ,aAAa,gCAAgC,wBAAwB,UAAU,QAAQ,uHAAuH,cAAc,sGAAsG,aAAa,gIAAgI,cAAc,gBAAgB,uLAAuL,aAAa,2OAA2O,cAAc,iDAAiD,gBAAgB,0BAA0B,kBAAkB,WAAW,oBAAoB,gCAAgC,uBAAuB,kBAAkB,OAAO,WAAW,qBAAqB,sBAAsB,UAAU,mEAAmE,iHAAiH,UAAU,eAAe,mKAAmK,kCAAkC,kBAAkB,sBAAsB,WAAW,gBAAgB,oFAAoF,UAAU,WAAW,kBAAkB,wBAAwB,6BAA6B,aAAa,4BAA4B,aAAa,WAAW,cAAc,gCAAgC,kBAAkB,yBAAyB,QAAQ,6HAA6H,gBAAgB,2DAA2D,0BAA0B,4BAA4B,+EAA+E,kBAAkB,kEAAkE,aAAa,cAAc,kBAAkB,SAAS,WAAW,WAAW,uDAAuD,SAAS,WAAW,iFAAiF,SAAS,qBAAqB,0IAA0I,UAAU,eAAe,0DAA0D,kKAAkK,gBAAgB,kEAAkE,cAAc,yBAAyB,aAAa,uBAAuB,mBAAmB,YAAY,aAAa,UAAU,SAAS,WAAW,eAAe,sBAAsB,mBAAmB,uBAAuB,mCAAmC,gBAAgB,6DAA6D,aAAa,0NAA0N,wBAAwB,+JAA+J,kBAAkB,mMAAmM,cAAc,6OAA6O,cAAc,gBAAgB,UAAU,6IAA6I,gBAAgB,gCAAgC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,sDAAsD,qBAAqB,qCAAqC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,2DAA2D,qBAAqB,8CAA8C,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,oEAAoE,qBAAqB,yCAAyC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,yEAAyE,+DAA+D,qBAAqB,iEAAiE,6BAA6B,oCAAoC,gBAAgB,sEAAsE,6BAA6B,oCAAoC,gBAAgB,+EAA+E,6BAA6B,oCAAoC,gBAAgB,0EAA0E,6BAA6B,oCAAoC,gBAAgB,2BAA2B,gBAAgB,cAAc,iDAAiD,YAAY,2BAA2B,cAAc,cAAc,yBAAyB,qBAAqB,wBAAwB,kBAAkB,6BAA6B,oBAAoB,sBAAsB,gBAAgB,SAAS,mBAAmB,qCAAqC,aAAa,2CAA2C,SAAS,wCAAwC,eAAe,oCAAoC,cAAc,gBAAgB,2EAA2E,cAAc,oEAAoE,aAAa,QAAQ,SAAS,kCAAkC,mCAAmC,qBAAqB,kBAAkB,QAAQ,QAAQ,kBAAkB,oBAAoB,8EAA8E,WAAW,OAAO,0DAA0D,mBAAmB,oEAAoE,gBAAgB,kBAAkB,qEAAqE,4BAA4B,sGAAsG,gBAAgB,mGAAmG,iBAAiB,8DAA8D,6BAA6B,mBAAmB,sIAAsI,UAAU,oJAAoJ,aAAa,wBAAwB,wKAAwK,kBAAkB,4DAA4D,WAAW,sFAAsF,SAAS,qBAAqB,yDAAyD,MAAM,WAAW,gBAAgB,mFAAmF,SAAS,qBAAqB,oFAAoF,sBAAsB,6BAA6B,8GAA8G,wBAAwB,qBAAqB,kGAAkG,WAAW,iEAAiE,eAAe,wDAAwD,wBAAwB,mBAAmB,kBAAkB,oHAAoH,UAAU,2DAA2D,aAAa,kBAAkB,UAAU,OAAO,QAAQ,SAAS,oBAAoB,gIAAgI,8BAA8B,cAAc,iEAAiE,0BAA0B,wBAAwB,2EAA2E,yBAAyB,uBAAuB,0BAA0B,+DAA+D,0BAA0B,uBAAuB,YAAY,yEAAyE,wBAAwB,wBAAwB,0BAA0B,+DAA+D,wBAAwB,8BAA8B,uBAAuB,wBAAwB,oHAAoH,6BAA6B,iEAAiE,UAAU,yRAAyR,iBAAiB,yJAAyJ,UAAU,0DAA0D,qKAAqK,UAAU,oHAAoH,UAAU,0DAA0D,0HAA0H,UAAU,qEAAqE,cAAc,seAAse,gBAAgB,+DAA+D,kBAAkB,8DAA8D,WAAW,wFAAwF,SAAS,qBAAqB,2DAA2D,SAAS,WAAW,qFAAqF,SAAS,qBAAqB,sFAAsF,sBAAsB,6BAA6B,gHAAgH,wBAAwB,qBAAqB,8IAA8I,UAAU,eAAe,0DAA0D,sKAAsK,gBAAgB;AACx1c,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,+DAAwB,EAAE,GAAG;AAChG,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAU;AACjC,aAAa,GAAG,GAAG,OAAO,gEAAqB;AAC/C,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG,OAAO,8DAAe,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AACvE,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,2FAAqB;AAC5C,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B,2CAA2C,eAAe;AAC1D,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B,yCAAyC,eAAe;AACxD,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B,8BAA8B,eAAe;AAC7C,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC,+BAA+B,oBAAoB;AACnD,SAAS;AACT,kBAAkB,6DAAe;AACjC,+BAA+B,oBAAoB;AACnD,SAAS;AACT,kBAAkB,6DAAe;AACjC,gCAAgC,oBAAoB;AACpD,SAAS;AACT,kBAAkB,6DAAe;AACjC,gCAAgC,oBAAoB;AACpD,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,wCAAwC;AAC1G,0BAA0B,8DAAuB,EAAE,2BAA2B;AAC9E,0BAA0B,8DAAuB,EAAE;AACnD,YAAY,4DAAY;AACxB,YAAY,sEAAe;AAC3B,YAAY,sEAAe;AAC3B,WAAW,sEAAe,GAAG;AAC7B,cAAc,oDAAoD,gEAAyB,sBAAsB,4BAA4B,0FAA0F,EAAE,wBAAwB,SAAS,4DAAY;AACtR,QAAQ,sEAAe;AACvB,QAAQ,sEAAe,EAAE,EAAE,wBAAwB,SAAS,sEAAe,mFAAmF,EAAE,EAAE,EAAE,EAAE;AACtK,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,sEAAe;AACnC,oBAAoB,sEAAe;AACnC;AACA;AACA,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2W;;AAE3W,sC;;;;;;;;;;;;ACliCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAE0B;AACE;AACT;AACJ;AACF;AACP;AACkB;AACG;AACT;AACoB;AACxB;AACJ;AACd;AACmB;AACC;AACH;AACb;AACD;AACqC;AAC3B;AACuC;AACS;AACA;AACZ;AACC;AAC5B;;;AAsC1D,MAAM,iBAAiB;;kFAAjB,iBAAiB;iGAAjB,iBAAiB;sGAJjB;QACT,wDAAQ;KACT,YApBQ;YACP,4DAAY;YACZ,qFAAwB;YACxB,6DAAY;YACZ,kEAAmB;YACnB,0DAAW;YACX,6EAAiB;YACjB,oEAAa;YACb,yEAAY;YACZ,gFAAmB;YACnB,gFAAkB;YAClB,2EAAmB;YACnB,gFAAkB;YAClB,uEAAc;YACd,4EAAuB;YACvB,4DAAY;YACZ,sEAAc,CAAC,OAAO,EAAE;SACzB;oIAKU,iBAAiB,mBAnC1B,uFAAoB;QACpB,mFAAkB;QAClB,sFAAmB;QACnB,4EAAgB;QAChB,yEAAe;QACf,gGAAsB;QACtB,4GAA0B;QAC1B,qHAA6B;QAC7B,qHAA6B;QAC7B,yGAAyB;QACzB,0GAAwB;QACxB,8EAAgB,aAGhB,4DAAY;QACZ,qFAAwB;QACxB,6DAAY;QACZ,kEAAmB;QACnB,0DAAW;QACX,6EAAiB;QACjB,oEAAa;QACb,yEAAY;QACZ,gFAAmB;QACnB,gFAAkB;QAClB,2EAAmB;QACnB,gFAAkB;QAClB,uEAAc;QACd,4EAAuB;QACvB,4DAAY;;;;;;;;;;;;;AC3DhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgG;AACqC;AACvE;AACW;AACF;AACsB;AACwB;AACtF;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACQ;AACP;AACQ;AACC;AACK;AACvD,kCAAkC,2EAAmB;AACrD,8BAA8B,qBAAqB;AACnD,mCAAmC,sBAAsB;AACzD,8BAA8B,qBAAqB;AACnD,mCAAmC,sBAAsB;AACzD,uBAAuB,qBAAqB;AAC5C,4BAA4B,sBAAsB;AAClD,+BAA+B,qBAAqB;AACpD,oCAAoC,sBAAsB;AAC1D;AACA,oEAAoE,mEAAmE;AACvI,2BAA2B,+DAAwB,EAAE,mMAAmM,mQAAmQ,gDAAgD,wEAAiC,GAAG;AAC/kB;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,mBAAmB,OAAO,mDAAK,2BAA2B;AAC1D,2BAA2B,OAAO,mDAAK,EAAE;AACzC;AACA,uDAAuD,mEAA4B;AACnF,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,UAAU;AACf,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAK;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4DAAc;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oFAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oFAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA,aAAa;AACbwB,CAAC,wDA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","file":"src-app-view-user-profile-user-profile-module.js","sourcesContent":["import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Directive, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, Type, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether the dialog should focus the first focusable element on open. */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n        // Move focus onto the dialog immediately in order to prevent the user\n        // from accidentally opening multiple dialogs at the same time.\n        this._focusDialogContainer();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            const focusContainer = !this._config.autoFocus || !this._focusTrap.focusInitialElement();\n            if (focusContainer) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /** Moves the focus inside the focus trap. */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = this._getActiveElement();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = this._getActiveElement();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = this._getActiveElement();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Gets the currently-focused element on the page. */\n    _getActiveElement() {\n        var _a;\n        // If the `activeElement` is inside a shadow root, `document.activeElement` will\n        // point to the shadow root so we have to descend into it ourselves.\n        const activeElement = this._document.activeElement;\n        return ((_a = activeElement === null || activeElement === void 0 ? void 0 : activeElement.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement) || activeElement;\n    }\n}\n_MatDialogContainerBase.ɵfac = function _MatDialogContainerBase_Factory(t) { return new (t || _MatDialogContainerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\n_MatDialogContainerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatDialogContainerBase, viewQuery: function _MatDialogContainerBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(CdkPortalOutlet, 3);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatDialogContainerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig },\n    { type: FocusMonitor }\n];\n_MatDialogContainerBase.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogContainerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }, { type: ɵngcc1.FocusMonitor }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return ɵMatDialogContainer_BaseFactory(t || MatDialogContainer); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._id);\n        ɵngcc0.ɵɵattribute(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\nconst ɵMatDialogContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatDialogContainer);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closed'), take(1)).subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef.keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length ?\n            this._getAfterAllClosed() :\n            this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, { $implicit: config.data, dialogRef }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = function _MatDialogBase_Factory(t) { return new (t || _MatDialogBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.OverlayContainer), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Type), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.InjectionToken)); };\n_MatDialogBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatDialogBase });\n_MatDialogBase.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: undefined },\n    { type: undefined },\n    { type: OverlayContainer },\n    { type: undefined },\n    { type: Type },\n    { type: Type },\n    { type: InjectionToken }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatDialogBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: undefined }, { type: undefined }, { type: ɵngcc3.OverlayContainer }, { type: undefined }, { type: ɵngcc0.Type }, { type: ɵngcc0.Type }, { type: ɵngcc0.InjectionToken }]; }, null); })();\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA);\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler($event) { return ctx._onButtonClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': '_onButtonClick($event)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); };\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { ChangeDetectorRef, Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CommentSocketService } from 'src/app/services/comment-socket.service';\r\nimport { FollowOrUnfollowService } from 'src/app/services/follow-or-unfollow.service';\r\nimport { PeopleYouMayKnowService } from 'src/app/services/people-you-may-know.service';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\nimport SwiperCore, { Navigation, Swiper } from 'swiper/core';\r\nSwiperCore.use([Navigation,]);\r\n@Component({\r\n  selector: 'app-peope-you-may-know',\r\n  templateUrl: './peope-you-may-know.component.html',\r\n  styleUrls: ['./peope-you-may-know.component.scss']\r\n})\r\nexport class PeopeYouMayKnowComponent implements OnInit {\r\n  skip: any = 0\r\n  peopleYouMayKnowLoading: boolean = true\r\n  followLoading: any = false\r\n  suggestedFriends: any = []\r\n  swiperLoadingCount: any = []\r\n  @ViewChild('updtaeSwiper') updtaeSwiper: { swiperRef: Swiper };\r\n  subscriptions:any[]=[]\r\n  translatedSnacBarTextOne:any\r\n  translatedSnacBarTextTwo:any\r\n  constructor(  private peopleYouMayKnow: PeopleYouMayKnowService,\r\n    private cd: ChangeDetectorRef,\r\n    public userProfilesService:UserProfileService,\r\n    private _ngZone: NgZone,\r\n    private router:Router,\r\n    private folloOrUnfollowService:FollowOrUnfollowService,\r\n    private _snackBar: MatSnackBar,\r\n    private socketService:CommentSocketService,\r\n    private translate:TranslateService) { \r\n      this.subscriptions.push( this.translate.get('youMayKnow.snackBarOne').subscribe(res => {\r\n        this.translatedSnacBarTextOne=res\r\n     }))\r\n      this.subscriptions.push(\r\n        this.translate.get('youMayKnow.snackBarTwo').subscribe(res => {\r\n          this.translatedSnacBarTextTwo=res\r\n       }))\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.swiperLoadingCount.length=5\r\n    this.getPeopleYouMAyKnow()\r\n  }\r\n  swiperConfig: any = {\r\n    slidesPerView: \"2.6\",\r\n    spaceBetween: \"50\",\r\n    pagination: \"{ clickable: true ,type: 'fraction'}\",\r\n    navigation: \"true\",\r\n    \r\n    breakpoints: {\r\n      0: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 20,\r\n      },\r\n      768: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 40,\r\n      },\r\n      1024: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 20,\r\n      },\r\n    }\r\n\r\n  }\r\n  fetchMoreSuggestedFriends() {\r\n    this.skip += 10\r\n    this.subscriptions.push(\r\n      this.peopleYouMayKnow.peopleYouMAyKnow(this.skip).subscribe(\r\n        (res: any) => {\r\n          this.suggestedFriends.push(...res)\r\n          this.cd.detectChanges()\r\n          this.updtaeSwiper.swiperRef.update()\r\n        },\r\n        err => { }\r\n      )\r\n    )\r\n  }\r\n    // start navigate from swiper carousel to another component \r\n    navigatee(id: any) {\r\n      this._ngZone.run(() => {\r\n        this.router.navigate(['/visit', id])\r\n      });\r\n    }\r\n    // end navigate from swiper carousel to another component \r\n    getPeopleYouMAyKnow() {\r\n      this.subscriptions.push(\r\n        this.peopleYouMayKnow.peopleYouMAyKnow(0).subscribe(\r\n          res => {\r\n            this.suggestedFriends = res\r\n            this.peopleYouMayKnowLoading = false\r\n          },\r\n          err => {\r\n          }\r\n        )\r\n      )\r\n    }\r\n      // statr follow users method\r\n  followOrUnFollow(id: any) {\r\n    this.followLoading = true\r\n    this.peopleYouMayKnowLoading = true\r\n    this.subscriptions.push(\r\n      this.folloOrUnfollowService.followOrUnFollow(id).subscribe(\r\n        res => {\r\n          this.socketService.emit(\"follow\",{id}).then(\r\n            res => {\r\n              this.getPeopleYouMAyKnow()\r\n              this.subscriptions.push(\r\n                this.userProfilesService.getFollowing().subscribe(\r\n                  (res: any) => {\r\n                    this.userProfilesService.skeltonLoadingForFollowing = false\r\n                    this.userProfilesService.following = res?.followings?.following\r\n                    this.followLoading = false\r\n                    this.openSnackBar(this.translatedSnacBarTextOne,  this.translatedSnacBarTextTwo)\r\n                  },\r\n                  err => { }\r\n                )\r\n              )\r\n            } , err => {this.router.navigate([\"/error\"])}\r\n          )\r\n   \r\n        },\r\n        err => { }\r\n      )\r\n    )\r\n  }\r\n  // end follow users method\r\n  openSnackBar(one: any, two: any) {\r\n    this._snackBar.open(one, two, {\r\n      horizontalPosition: 'left',\r\n      verticalPosition: 'bottom',\r\n      duration: 3000\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => {\r\n      sub.unsubscribe()\r\n    })\r\n  }\r\n}\r\n","<div \r\n*ngIf=\"suggestedFriends?.length\"\r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\nclass=\"bg-white parentOfSugested rounded-lg p-3\" >\r\n    <h2 class=\"mb-2\"> {{'youMayKnow.people' | translate}}</h2>\r\n    <swiper (reachEnd)=\"fetchMoreSuggestedFriends()\" #updtaeSwiper [config]=\"swiperConfig\">\r\n        <ng-container *ngIf=\"peopleYouMayKnowLoading;else swiperContent\">\r\n            <ng-container *ngFor=\"let item of swiperLoadingCount\">\r\n                <ng-template swiperSlide>\r\n                    <div \r\n                        class=\"fb-item bg-white postsLoadingg rounded-lg \">\r\n                        <div class=\"first-section-wrapper  \">\r\n                            <div class=\"item  postsLoadingg\">\r\n                                <ngx-skeleton-loader count=\"1\" appearance=\"circle\" [theme]=\"{\r\n                        width: '100%',\r\n                        height: '150px',\r\n                        'border-radius': '10px',\r\n                        margin:0\r\n                    }\">\r\n                                </ngx-skeleton-loader>\r\n                            </div>\r\n                            <div class=\"gravatar-title \">\r\n                                <div>\r\n                                    <ngx-skeleton-loader [theme]=\"{\r\n                            width: '100%',\r\n                            'border-radius': '0',\r\n                            height: '10px',\r\n                            'margin-bottom': '2px'\r\n                            }\"></ngx-skeleton-loader>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"gravatar-title \">\r\n                                <div>\r\n                                    <ngx-skeleton-loader [theme]=\"{\r\n                            width: '100%',\r\n                            'border-radius': '0',\r\n                            height: '10px'\r\n                            }\"></ngx-skeleton-loader>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-template #swiperContent>\r\n            <ng-container *ngFor=\"let item of suggestedFriends;let i =index\">\r\n\r\n                <ng-template swiperSlide>\r\n                    <div class=\"peopleYouMayknow my-2\">\r\n                        <img (click)=\"navigatee(item?._id)\" class=\"mainimg\"\r\n                            [src]=\"item?.profilePhoto | gender :  item?.gender \" alt=\"\">\r\n                        <div class=\"px-2 py-3\">\r\n                            <div class=\"overflow-hidden mb-2\">\r\n                                <h2 (click)=\"navigatee(item?._id)\" class=\"mainName\">\r\n                                    {{item?.firstName | titlecase | slice : 0 : 12}}\r\n                                    {{item?.lastName | titlecase | slice : 0 : 12}}\r\n                                </h2>\r\n                            </div>\r\n                            <button [disabled]=\"followLoading\" (click)=\"followOrUnFollow(item?._id)\"\r\n                                class=\"follow\">\r\n                                <i class=\"fas fa-user-plus\"></i>\r\n                                <span class=\"mx-1\"> {{'youMayKnow.follow' | translate}}</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n            </ng-container>\r\n        </ng-template>\r\n    </swiper>\r\n    <div class=\"text-center mt-3\">\r\n        <span class=\"text-primary font-weight-bold \" style=\"cursor: pointer;\"\r\n            routerLink=\"/peopleYouMayKnow\">{{'youMayKnow.seeAll' | translate}}</span>\r\n    </div>\r\n</div>","import { DatePipe } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\nimport { emptyContent } from 'src/app/shared/emptyContentValidator';\r\n\r\n@Component({\r\n  selector: 'app-user-about',\r\n  templateUrl: './user-about.component.html',\r\n  styleUrls: ['./user-about.component.scss']\r\n})\r\nexport class UserAboutComponent implements OnInit,OnDestroy {\r\n  nameForm:FormGroup\r\n  addWorkForm:FormGroup\r\n  addReligionForm:FormGroup\r\n  addStudyForm:FormGroup\r\n  addSocialForm:FormGroup\r\n  addCityForm:FormGroup\r\n  genderForm:FormGroup\r\n  changePasswordForm:FormGroup\r\n  changePasswordMSG:string=\"\"\r\n  birthDateForm:FormGroup\r\n  date:any\r\n  DayMonthYear: any;\r\n  userProfileLoading:boolean=true\r\n  showInputs:any = []\r\n  personalInfo:any\r\n  deleted:any\r\n  deletedSuc:any\r\n  subscriptions :any[] = [];\r\n  constructor(public userProfilesService:UserProfileService,\r\n    private title:Title,\r\n    private fb:FormBuilder,\r\n    private userservice:UserProfileService,\r\n    private datePipe: DatePipe,\r\n    private _snackBar: MatSnackBar,\r\n    private translate:TranslateService\r\n    ) { \r\n      \r\n      this.subscriptions.push(\r\n        translate.get(\"about.personalInfo\").subscribe(\r\n          res => this.personalInfo = res\r\n        )\r\n      )\r\n      this.subscriptions.push(\r\n        translate.get(\"about.deleted\").subscribe(\r\n          res => this.deleted = res\r\n        )\r\n      )\r\n      this.subscriptions.push(\r\n        translate.get(\"about.deletedSuc\").subscribe(\r\n          res => this.deletedSuc = res\r\n        )\r\n      )\r\n        \r\n   } \r\nchoseCategory(index:any) {\r\n  for(let i = 0;i<this.personalInfo.length;i++) {\r\n    this.personalInfo[i].status=false\r\n  }\r\n  this.personalInfo[index].status=true\r\n}\r\nget lang() {return localStorage.getItem(\"currenLanguage\") || \"en\"}\r\n  ngOnInit(): void {\r\n  this.showInputs.length=10\r\n  this.showInputs.fill(false,0,10)\r\n   this.subscriptions.push(\r\n    this.userProfilesService.getMyProfile().subscribe(\r\n      (res:any) =>{\r\n        this.userProfilesService.userProfile=res?.user\r\n        this.date=this.userProfilesService.userProfile?.birthDate\r\n        this.userProfileLoading=false\r\n        this.title.setTitle(`${this.userProfilesService.userProfile?.firstName.slice(0,1).toUpperCase()}${this.userProfilesService.userProfile?.firstName.slice(1)} \r\n        ${this.userProfilesService.userProfile?.lastName.slice(0,1).toUpperCase()}${this.userProfilesService.userProfile?.lastName.slice(1)}`)\r\n        this.nameForm = this.fb.group({\r\n          firstName:[`${this.userProfilesService.userProfile?.firstName}`,[Validators.required,emptyContent]],\r\n          lastName:[`${this.userProfilesService.userProfile?.lastName}`,[Validators.required,emptyContent]]\r\n        })\r\n        this.birthDateForm = this.fb.group({\r\n          birthDate:['',Validators.required]\r\n       })\r\n        this.genderForm = this.fb.group({\r\n           gender:[`${this.userProfilesService.userProfile?.gender}`,Validators.required]\r\n        })\r\n        this.addStudyForm = this.fb.group({\r\n          study:[`${this.userProfilesService.userProfile?.study || ''}`,[Validators.required,emptyContent]],\r\n        })\r\n        this.addWorkForm  = this.fb.group({\r\n          work:[`${this.userProfilesService.userProfile?.work || ''}`,[Validators.required,emptyContent]],\r\n        })\r\n        this.addReligionForm = this.fb.group({\r\n          religion:[`${this.userProfilesService.userProfile?.religion || ''}`,[Validators.required,emptyContent]],\r\n        })\r\n        this.addSocialForm = this.fb.group({\r\n          socialCondition:[`${this.userProfilesService.userProfile?.socialCondition || ''}`,Validators.required],\r\n        })\r\n        this.addCityForm = this.fb.group({\r\n          location:[`${this.userProfilesService.userProfile?.location || ''}`,[Validators.required,emptyContent]],\r\n        })\r\n        this.changePasswordForm = this.fb.group({\r\n          password:[``,Validators.required],\r\n          newPassword:[``,Validators.required]\r\n        })\r\n      },\r\n      err => {\r\n        this.userProfileLoading=false\r\n      }\r\n      \r\n    )\r\n   )\r\n  }\r\n  updateBirthDate(value:any) {\r\n   value.birthDate = this.datePipe.transform(this.date, 'yyy-MM-dd')\r\n   this.updatePersonalInfo(value)\r\n  }\r\nupdatePersonalInfo(value:any) {\r\n   this.subscriptions.push(\r\n    this.userservice.updatePersonalInfo(value).subscribe(\r\n      res => {\r\n        this.userProfileLoading=true\r\n        for (let i = 0 ; i < this.showInputs.length;i++) this.showInputs[i]=false \r\n        this.getDataAfterUpdate()\r\n      },\r\n\r\n      err => {\r\n        this.userProfileLoading=false\r\n        for (let i = 0 ; i < this.showInputs.length;i++) this.showInputs[i]=false \r\n      }\r\n    ) \r\n   )\r\n}\r\naddPersonalInfo(value:any) {\r\nthis.subscriptions.push(\r\n  this.userservice.addPersonalInfo(value).subscribe(\r\n    res => {\r\n      this.userProfileLoading=true\r\n      for (let i = 0 ; i < this.showInputs.length;i++) this.showInputs[i]=false \r\n       this.getDataAfterUpdate()\r\n    },\r\n\r\n    err => {\r\n      this.userProfileLoading=false\r\n      for (let i = 0 ; i < this.showInputs.length;i++) this.showInputs[i]=false \r\n    }\r\n  )\r\n)\r\n  \r\n}\r\n\r\ndeletePersonalInfo(value:any,info:any) {\r\n  this.userProfileLoading=true\r\n  this.subscriptions.push(\r\n    this.userProfilesService.deleteInfo(value).subscribe(\r\n      res => {\r\n       this.openSnackBar(this.deletedSuc)\r\n       for (let i = 0 ; i < this.showInputs.length;i++) this.showInputs[i]=false\r\n       this.getDataAfterUpdate()\r\n      },\r\n      err => {\r\n       this.userProfileLoading=false\r\n      }\r\n    )\r\n  )\r\n}\r\n\r\ngetDataAfterUpdate() {\r\n this.subscriptions.push(\r\n  this.userProfilesService.getMyProfile().subscribe(\r\n    (res:any) =>{\r\n      this.userProfileLoading=false\r\n      this.userProfilesService.userProfile=res?.user\r\n      this.title.setTitle(`${this.userProfilesService.userProfile?.firstName.slice(0,1).toUpperCase()}${this.userProfilesService.userProfile?.firstName.slice(1)} \r\n      ${this.userProfilesService.userProfile?.lastName.slice(0,1).toUpperCase()}${this.userProfilesService.userProfile?.lastName.slice(1)}`)\r\n    },\r\n    err => {\r\n      this.userProfileLoading=false\r\n    }\r\n    \r\n  )\r\n )\r\n}\r\nopenSnackBar(one:any) {\r\n  this._snackBar.open( one,  this.deleted, {\r\n    horizontalPosition: 'left',\r\n    verticalPosition: 'bottom',\r\n    duration: 3000\r\n  });\r\n}\r\nupdatePassword(value:any) {\r\n\r\n  this.userProfileLoading=true\r\n  this.subscriptions.push(\r\n    this.userProfilesService.updatePassword(value.value).subscribe(\r\n      (res:any) => {\r\n        value.reset()\r\n        this.userProfileLoading=false\r\n        this.changePasswordMSG=res?.erorr || res?.result\r\n      } , err => {\r\n        value.reset()\r\n        this.userProfileLoading=false\r\n        this.changePasswordMSG=err?.error?.error\r\n      }\r\n    )\r\n  )\r\n}\r\nngOnDestroy() {\r\n  this.subscriptions.forEach(sub => {\r\n    sub.unsubscribe()\r\n  })\r\n}\r\n}\r\n","<div class=\"container aboutParent \" [class.darkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n    <div class=\"paddinggx row\">\r\n\r\n\r\n\r\n        <div class=\"   col-md-4 mb-4\">\r\n            <div class=\"rounded-lg left h-100  bg-white p-3\">\r\n                <h2 class=\"font-weight-bold mb-2\">{{'about.about' | translate }}</h2>\r\n                <ul class=\"list-unstyled p-0\">\r\n                    <li \r\n                    *ngFor=\"let item of personalInfo;let i = index\"\r\n                    (click)=\"choseCategory(i)\" [class.active]=\"item.status\">{{item?.name}}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-8 mb-4\">\r\n           \r\n            <div class=\"rounded-lg bg-white rightParent p-3 h-100 position-relative\">\r\n                <div *ngIf=\"userProfileLoading\" class=\"aboutLoading  d-flex align-items-center justify-content-center\">\r\n                    <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n                </div>\r\n                <div *ngIf=\"personalInfo[0].status\" class=\"imgsiz right\">\r\n                    <h2>{{'about.basicInfo' | translate}}</h2>\r\n                    <div class=\"namee my-3  \">\r\n                        <ng-template #name>\r\n                            <div  class=\" d-flex justify-content-between align-items-center \">\r\n                                <div class=\"d-flex\">\r\n                                    <i class=\"fas fa-file-signature\"></i>\r\n                                 <div class=\"mx-3\">\r\n                                     <span class=\"d-block mb-1\">{{userProfilesService.userProfile?.firstName | titlecase}}</span>\r\n                                     <small class=\"text-secondary\">{{'about.firstName' | translate}}</small>\r\n                                 </div>\r\n                                 <div>\r\n                                    <span class=\"d-block mb-1\">{{userProfilesService.userProfile?.lastName | titlecase}}</span>\r\n                                    <small class=\"text-secondary\">{{'about.lastName' | translate}}</small>\r\n                                </div>\r\n                                </div>\r\n                                <i (click)=\"showInputs[0]=true\" class=\"fas fa-pen\"></i>\r\n                             </div>\r\n                        </ng-template>\r\n                        \r\n                       \r\n                         <form [formGroup]=\"nameForm\" \r\n                          (ngSubmit)=\"updatePersonalInfo(nameForm.value)\"\r\n                         *ngIf=\"showInputs[0];else name\">\r\n                            <div class=\" mt-3 d-flex\">\r\n                                <input formControlName='firstName' type=\"text\" placeholder=\"{{'about.firstName' | translate}}\" class=\"form-control\">\r\n                                <input formControlName='lastName' type=\"text\" placeholder=\"{{'about.lastName' | translate}}\" class=\"mx-3 form-control\">\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"button\" (click)=\"showInputs[0]=false\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                                <button  type=\"submit\" [disabled]='nameForm.invalid' class=\"btn btn-primary mx-2\">{{'about.save' | translate}}</button>\r\n                            </div>\r\n                         </form>\r\n                    </div>\r\n                   \r\n                    <div class=\"gender my-3   \">\r\n                        <ng-template #genderr>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                            <div class=\"d-flex\">\r\n                               <div>\r\n                                <i [ngClass]='{\r\n                                    \"fa-female\":userProfilesService.userProfile?.gender==\"female\",\r\n                                   \"fa-male\":userProfilesService.userProfile?.gender==\"male\"\r\n                                  }' class=\"fas \"></i>\r\n                               </div>\r\n                                <div class=\"mx-3\">\r\n                                    <span class=\"d-block\">{{userProfilesService.userProfile?.gender | titlecase }}</span>\r\n                                    <small class=\"text-secondary\">{{'about.gender' | translate}}</small>\r\n                                </div>\r\n                               </div>\r\n                               <i (click)=\"showInputs[1]=true\" class=\"fas fa-pen\"></i>\r\n                           </div>\r\n                        </ng-template>\r\n                         <form [formGroup]=\"genderForm\" \r\n                          (ngSubmit)=\"updatePersonalInfo(genderForm.value)\"\r\n                         *ngIf=\"showInputs[1];else genderr\">\r\n                            <div class=\" mt-3 d-flex\">\r\n                                <select formControlName='gender' class=\"form-control my-2\" id=\"exampleFormControlSelect1\">\r\n                                    <option value=\"female\">{{'auth.female' | translate}}</option>\r\n                                    <option value=\"male\">{{'auth.male' | translate}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"button\" (click)=\"showInputs[1]=false\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                                <button  type=\"submit\" [disabled]='genderForm.invalid' class=\"btn btn-primary mx-2\">{{'about.save' | translate}}</button>\r\n                            </div>\r\n                         </form>\r\n                    </div>\r\n                    \r\n                    <div class=\"birthDate my-3  \">\r\n                 <ng-template #birthdatee>\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <div class=\"d-flex\">\r\n                       <i class=\"fas fa-birthday-cake\"></i>\r\n                        <div class=\"mx-3\">\r\n                            <span class=\"d-block mb-1\">{{userProfilesService.userProfile?.birthDate | date : 'longDate' : undefined : lang}}</span>\r\n                            <small class=\"text-secondary\">{{'about.birthDate' | translate}}</small>\r\n                        </div>\r\n                       </div>\r\n                       <i (click)=\"showInputs[3]=true\" class=\"fas fa-pen\"></i>\r\n                  </div>\r\n                 </ng-template>\r\n        <ng-container *ngIf=\"showInputs[3];else birthdatee\">\r\n            <form [formGroup]=\"birthDateForm\"\r\n            (ngSubmit)=\"updateBirthDate(birthDateForm.value)\"\r\n            >\r\n            <mat-form-field  >\r\n                <input\r\n                  class=\"datee\"\r\n                    matInput\r\n                    formControlName='birthDate'\r\n                    [matDatepicker]=\"dp\"\r\n                    placeholder=\"{{'about.chooseAdate'  | translate}}\"\r\n                    [(ngModel)]=\"date\"\r\n                  />\r\n                <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                <mat-datepicker #dp></mat-datepicker>\r\n              </mat-form-field>\r\n              <div>\r\n                <button type=\"button\" (click)=\"showInputs[3]=false\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                <button   type=\"submit\" [disabled]='birthDateForm.invalid' class=\"btn btn-primary mx-2\">{{'about.save' | translate}}</button>\r\n            </div>\r\n            </form>\r\n    \r\n        </ng-container>\r\n        \r\n                     </div>\r\n                  \r\n                     <div class=\"passwordd my-3\">\r\n                        <ng-template #passwordd>\r\n                            <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <div class=\"d-flex\">\r\n                                <div>\r\n                                    <i class=\"fas fa-key\"></i>\r\n                                </div>\r\n                                 <div class=\"mx-3\">\r\n                                     <span class=\"d-block\">{{\"about.changePassword\" | translate}}</span>\r\n                                     <small class=\"text-secondary\">{{'about.goodIdea' | translate}}</small>\r\n                                 </div>\r\n                                </div>\r\n                                <i (click)=\"showInputs[2]=true;changePasswordMSG=''\" class=\"fas fa-pen\"></i>\r\n                            </div>\r\n                         </ng-template>\r\n                          <form [formGroup]=\"changePasswordForm\" \r\n                           (ngSubmit)=\"updatePassword(changePasswordForm)\"\r\n                          *ngIf=\"showInputs[2];else passwordd\">\r\n                             <div class=\" mt-3 d-flex\">\r\n                                <input formControlName=\"password\" placeholder=\"{{'about.current' | translate}}\" type=\"password\" class=\"form-control\">\r\n                                <div class=\"mx-2\"></div>\r\n                                <input formControlName=\"newPassword\" placeholder=\"{{'about.new' | translate}}\" type=\"password\" class=\"form-control\">\r\n                             </div>\r\n                             <div>\r\n                                 <button type=\"button\" (click)=\"showInputs[2]=false\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                                 <button  type=\"submit\" [disabled]='changePasswordForm.invalid' class=\"btn btn-primary mx-2\">{{'about.save' | translate}}</button>\r\n                             </div>\r\n                             <p class=\"my-2 text-secondary\" *ngIf=\"changePasswordMSG\">{{changePasswordMSG}}</p>\r\n                          </form>\r\n                     </div>\r\n                     <div class=\"email my-3 \">\r\n                        <div class=\"d-flex\">\r\n                            <i class=\"far fa-envelope\"></i>\r\n                            <div class=\"mx-3\">\r\n                                <span class=\"d-block mb-1\">{{userProfilesService.userProfile?.email }}</span>\r\n                                <small class=\"text-secondary\">{{'about.email' | translate}}</small>\r\n                            </div>\r\n                    </div>\r\n             </div>\r\n                </div>\r\n                <div *ngIf=\"personalInfo[1].status\" class=\"right\">\r\n                    <h2>{{'about.work' | translate}}</h2>\r\n                    <form \r\n                    [formGroup]='addWorkForm'\r\n                    (ngSubmit)='addPersonalInfo(addWorkForm.value)'\r\n                    *ngIf=\"showInputs[4]\">\r\n                        <input  formControlName='work' type=\"text\" placeholder=\"{{'about.company' | translate}}\">\r\n                        <hr>\r\n                        <div class=\"d-flex justify-content-end\">\r\n                            <button type=\"button\" \r\n                            (click)=\"showInputs[4]=false;\"\r\n                             type=\"button\"  class=\" cancell btn\"\r\n                              [class.mx-2]=\"!userProfilesService.userProfile?.work\">{{'about.cancel' | translate}}</button>\r\n                            <button\r\n                            *ngIf=\"userProfilesService.userProfile?.work\"\r\n                            type=\"button\" \r\n                            (click)=\"deletePersonalInfo({work:''},'work');addWorkForm.reset()\"\r\n                             type=\"button\"  class=\"mx-2 cancell btn\">{{'about.remove' | translate}}</button>\r\n                            <button type=\"submit\" [disabled]='addWorkForm.invalid' class=\"btn btn-primary\">{{'about.save' | translate}}</button>\r\n                        </div>\r\n                    </form>\r\n                        <p \r\n                        [hidden]=\"userProfilesService.userProfile?.work || showInputs[4]\"\r\n                         (click)=\"showInputs[4]=true\"><i class=\"fas fa-plus\"></i> <span class=\"mx-2 d-inline-block\">{{'about.addWorkPlace' | translate}}</span></p>\r\n                        <div \r\n                        *ngIf=\"userProfilesService.userProfile?.work && !showInputs[4]\"\r\n                        class=\"  d-flex justify-content-between align-items-center \">\r\n                            <div class=\"d-flex\">\r\n                                <i  class=\"fas fa-briefcase\"></i>\r\n                                <h3 class=\"mx-3\">{{'about.worksAt' | translate}} {{userProfilesService.userProfile?.work}}</h3>\r\n                            </div>\r\n                            <i (click)=\"showInputs[4]=true\" class=\"fas fa-pen\"></i>\r\n                         </div>\r\n                </div>\r\n                <div  *ngIf=\"personalInfo[3].status\" class=\"right\">\r\n                    <h2>{{'about.placeLived' | translate}}</h2>\r\n                    <form \r\n                    [formGroup]='addCityForm'\r\n                    (ngSubmit)='addPersonalInfo(addCityForm.value)'\r\n                    *ngIf=\"showInputs[5]\"\r\n                    >\r\n                        <input #location formControlName='location' type=\"text\" placeholder=\"{{'about.currentCity' | translate}}\">\r\n                        <hr>\r\n                        <div class=\"d-flex justify-content-end\">\r\n                            <button type=\"button\" \r\n                            [class.mx-2]=\"!userProfilesService.userProfile?.location\"\r\n                            (click)=\"showInputs[5]=false\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                            <button type=\"button\" \r\n                            *ngIf=\"userProfilesService.userProfile?.location\"\r\n                            (click)=\"deletePersonalInfo({location:''},'Location');addCityForm.reset()\"\r\n                             type=\"button\"  class=\"mx-2 cancell btn\">{{'about.remove' | translate}}</button>\r\n                            <button \r\n                           \r\n                            type=\"submit\" [disabled]='addCityForm.invalid' class=\"btn btn-primary\">{{'about.save' | translate}}</button>\r\n                        </div>\r\n                    </form>\r\n                        <p \r\n                        [hidden]=\"userProfilesService.userProfile?.location || showInputs[5]\"\r\n                        (click)=\"showInputs[5]=true\"><i class=\"fas fa-plus\"></i> <span class=\"mx-2 d-inline-block\">{{'about.addCurrentCity' | translate}}</span></p>\r\n                        <div \r\n                        *ngIf=\"userProfilesService.userProfile?.location && !showInputs[5]\"\r\n                        class=\"  d-flex justify-content-between align-items-center \">\r\n                            <div class=\"d-flex\">\r\n                                <i  class=\"fas fa-home\"></i>\r\n                                <h3 class=\"mx-3\">{{'about.livesIn' | translate}} {{userProfilesService.userProfile?.location}}</h3>\r\n                            </div>\r\n                            <i (click)=\"showInputs[5]=true\" class=\"fas fa-pen\"></i>\r\n                         </div>\r\n                </div>\r\n                <div  *ngIf=\"personalInfo[2].status\" class=\"right\">\r\n                    <h2>{{'about.edu' | translate}}</h2>\r\n                    <form \r\n                    [formGroup]='addStudyForm'\r\n                    (ngSubmit)='addPersonalInfo(addStudyForm.value)'\r\n                    *ngIf=\"showInputs[6]\"\r\n                    > \r\n                        <input #study formControlName='study' type=\"text\" placeholder=\"{{'about.cORh' | translate}}\">\r\n                        <hr>\r\n                        <div class=\"d-flex justify-content-end\">\r\n                            <button \r\n                            [class.mx-2]=\"!userProfilesService.userProfile?.study\"\r\n                            type=\"button\"  (click)=\"showInputs[6]=false\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                            <button type=\"button\" \r\n                            *ngIf=\"userProfilesService.userProfile?.study\"\r\n                            (click)=\"deletePersonalInfo({'study':''},'Education');addStudyForm.reset()\"\r\n                             type=\"button\"  class=\"mx-2 cancell btn\">{{'about.remove' | translate}}</button>\r\n                            <button type=\"submit\" [disabled]=\"addStudyForm.invalid\" class=\"btn btn-primary\">{{'about.save' | translate}}</button>\r\n                        </div>\r\n                    </form>\r\n                        <p \r\n                        [hidden]=\"userProfilesService.userProfile?.study || showInputs[6]\"\r\n                        (click)=\"showInputs[6]=true\">\r\n                        <i class=\"fas fa-plus\"></i> <span class=\"mx-2 d-inline-block\">{{'about.AddCORh' | translate}}</span></p>\r\n                        <div\r\n                        *ngIf=\"userProfilesService.userProfile?.study && !showInputs[6]\"\r\n                        class=\"  d-flex justify-content-between align-items-center \">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <div>\r\n                                    <img class=\"eduImg\" src=\"assets/education.png\" alt=\"\">\r\n                                </div>\r\n                                <h3 class=\"mx-2\">{{'about.studiedAt' | translate}} {{userProfilesService.userProfile?.study}}</h3>\r\n                            </div>\r\n                            <i (click)=\"showInputs[6]=true\" class=\"fas fa-pen\"></i>\r\n                         </div>\r\n                    \r\n                   \r\n                </div>\r\n                <div  *ngIf=\"personalInfo[4].status\" class=\"right\">\r\n                    <h2>{{'about.relation' | translate}}</h2>\r\n                    <form\r\n                    [formGroup]='addSocialForm'\r\n                    (ngSubmit)='addPersonalInfo(addSocialForm.value)'\r\n                    *ngIf=\"showInputs[7]\"\r\n                    >\r\n    \r\n                        <select \r\n                        formControlName='socialCondition'\r\n                        class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                            <option value=\"single\">{{'about.single' | translate}}</option>\r\n                            <option value=\"engaged\">{{'about.engaged' | translate}}</option>\r\n                            <option value=\"married\">{{'about.married' | translate}}</option>\r\n                            <option value=\"separated\">{{'about.separated' | translate}}</option>\r\n                            <option value=\"divorced\">{{'about.divorced' | translate}}</option>\r\n                            <option value=\"widiwed\">{{'about.widiwed' | translate}}</option>\r\n                        </select>\r\n                        <hr>\r\n                        <div class=\"d-flex justify-content-end\">\r\n                            <button\r\n                            [class.mx-2]=\"!userProfilesService.userProfile?.socialCondition\"\r\n                            type=\"button\" (click)=\"showInputs[7]=false\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                            <button type=\"button\" \r\n                            *ngIf=\"userProfilesService.userProfile?.socialCondition\"\r\n                            (click)=\"deletePersonalInfo({socialCondition:''},'Relationship');addSocialForm.reset()\"\r\n                             type=\"button\"  class=\"mx-2 cancell btn\">{{'about.remove' | translate}}</button>\r\n                            <button type=\"submit\" [disabled]='addSocialForm.invalid' class=\"btn btn-primary\">{{'about.save' | translate}}</button>\r\n                        </div>\r\n                    </form>\r\n                   \r\n                        <p \r\n                        [hidden]=\"userProfilesService.userProfile?.socialCondition || showInputs[7]\"\r\n                        (click)=\"showInputs[7]=true\"><i class=\"fas fa-plus\"></i> <span class=\"mx-2 d-inline-block\">\r\n                            {{'about.addRelation' | translate}}</span></p>\r\n                            <div\r\n                            *ngIf=\"userProfilesService.userProfile?.socialCondition && !showInputs[7]\"\r\n                            class=\"  d-flex justify-content-between align-items-center \">\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <i _ngcontent-yyb-c123=\"\" class=\"fas fa-heart\"></i>\r\n                                    <h3 class=\"mx-3\"> {{userProfilesService.userProfile?.socialCondition | titlecase}}</h3>\r\n                                </div>\r\n                                <i (click)=\"showInputs[7]=true\" class=\"fas fa-pen\"></i>\r\n                             </div>\r\n                    \r\n                 \r\n                </div>\r\n                <div  *ngIf=\"personalInfo[5].status\" class=\"right\">\r\n                    <h2>{{'about.Religion' | translate}}</h2>\r\n                    <form \r\n                    [formGroup]='addReligionForm'\r\n                    (ngSubmit)='addPersonalInfo(addReligionForm.value)'\r\n                    *ngIf=\"showInputs[9]\">\r\n                        <input formControlName='religion' type=\"text\" placeholder=\"{{'about.Religion' | translate}}\">\r\n                        <hr>\r\n                        <div class=\"d-flex justify-content-end\">\r\n                            <button \r\n                            [class.mx-2]=\"!userProfilesService.userProfile?.religion\"\r\n                            (click)=\"showInputs[9]=false\" type=\"button\" class=\" cancell btn\">{{'about.cancel' | translate}}</button>\r\n                            <button\r\n                            *ngIf=\"userProfilesService.userProfile?.religion\"\r\n                            type=\"button\" \r\n                            (click)=\"deletePersonalInfo({religion:''},'Religion');addReligionForm.reset()\"\r\n                             type=\"button\"  class=\"mx-2 cancell btn\">{{'about.remove' | translate}}</button>\r\n                            <button [disabled]=\"addReligionForm.invalid\" type=\"submit\" class=\"btn btn-primary\">{{'about.save' | translate}}</button>\r\n                        </div>\r\n                    </form>\r\n                        <p \r\n                        [hidden]=\"userProfilesService.userProfile?.religion || showInputs[9]\"\r\n                        (click)=\"showInputs[9]=true\"><i class=\"fas fa-plus\"></i> <span class=\"mx-2 d-inline-block\">{{'about.addReligion' | translate}}</span></p>\r\n                        <div\r\n                        *ngIf=\"userProfilesService.userProfile?.religion && !showInputs[9]\"\r\n                        class=\"  d-flex justify-content-between align-items-center \">\r\n                            <div class=\"d-flex align-items-center\">\r\n                                <i class=\"fas fa-praying-hands\"></i>\r\n                                <h3 class=\"mx-3\"> {{userProfilesService.userProfile?.religion | titlecase}}</h3>\r\n                            </div>\r\n                            <i (click)=\"showInputs[9]=true\" class=\"fas fa-pen\"></i>\r\n                         </div>\r\n                </div>\r\n            </div>\r\n     \r\n        </div>\r\n    </div>\r\n</div>","<div\r\n[class.darkMode]=\"userprofileService.userProfile?.darkMode\"\r\nclass=\"container\">\r\n    \r\n    <div class=\" paddinggx\">\r\n        <div class=\"row bg-white mb-5 mx-md-0 p-3 rounded-lg\">\r\n            <div class=\"col-md-12 mb-3\">\r\n              <div class=\"d-block d-md-flex justify-content-between align-items-center\">\r\n                <h2 class=\"font-weight-bold  mb-2 mb-md-0\">{{'leftSide.following' | translate}}</h2>\r\n                <div class=\"position-relative parentOfSearch\">\r\n                    <input [(ngModel)]=\"searchPipeValue\" placeholder=\"{{'posts.search' | translate}}\" type=\"search\">\r\n                     <i class=\"fas fa-search text-secondary\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ng-container *ngIf=\"userprofileService.skeltonLoadingForFollowing;else content\">\r\n                <div \r\n                *ngFor=\"let item of loadingCount\"\r\n                class=\"col-md-6 mb-3\">\r\n                 <div \r\n                 [class.darkMode]=\"userprofileService.userProfile?.darkMode\"\r\n                 class=\"fb-item bg-white postsLoadingg rounded-lg p-4\">\r\n                 <div class=\"first-section-wrapper d-flex align-items-center mb-3\">\r\n                     <div\r\n                     class=\"item bg-white postsLoadingg\">\r\n                         <ngx-skeleton-loader count=\"1\" appearance=\"circle\" [theme]=\"{\r\n                     width: '80px',\r\n                     height: '80px',\r\n                     'border-radius': '10px'\r\n                   }\">\r\n                         </ngx-skeleton-loader>\r\n                     </div>\r\n                     <div class=\"gravatar-title mx-3\">\r\n                         <div>\r\n                             <ngx-skeleton-loader [theme]=\"{\r\n                       width: '90%',\r\n                       'border-radius': '0',\r\n                       height: '15px',\r\n                       'margin-bottom': '10px'\r\n                     }\"></ngx-skeleton-loader>\r\n                         </div>\r\n                         <div>\r\n                             <ngx-skeleton-loader\r\n                                 [theme]=\"{ width: '70%', 'border-radius': '0', height: '15px' }\">\r\n                             </ngx-skeleton-loader>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n                </div>\r\n           \r\n             </ng-container>\r\n             <ng-template #content>\r\n            <ng-container *ngIf=\"userprofileService.following?.length;else noFollowing\">\r\n                <ng-container *ngIf=\"( userprofileService.following | search : searchPipeValue) as result\">\r\n                    <div class=\"col-md-6 mb-4\" *ngFor=\"let item of userprofileService.following | search : searchPipeValue;let i = index\">\r\n                        <div class=\"d-flex  borderAround\">\r\n                            <div class=\"d-flex align-items-center\" (mouseleave)='profileOnHover=-1'>\r\n                                <div \r\n                                [routerLink]='[\"/visit\",item?._id]'\r\n                                class=\"overIMG\" (mouseover)=\"profileOnHover=i\" >\r\n                                    <div>\r\n                                        <img  \r\n                                  \r\n                                        [src]=\"item?.profilePhoto | gender : item?.gender\" alt=\"\">\r\n                                    </div>\r\n                                </div>\r\n                               <div class=\"mx-3\" (mouseover)=\"profileOnHover=i\"  (mouseleave)='profileOnHover=-1'>\r\n                                   <h2  \r\n                                   [routerLink]='[\"/visit\",item?._id]'\r\n                                   class=\"userName mb-1\">{{item?.firstName | titlecase | slice : 0 : 12}}\r\n                                       {{item?.lastName | titlecase | slice : 0 : 12}}</h2>\r\n                                       <p class=\"text-secondary m-0\"><i class=\"far fa-calendar-alt\"></i> <span class=\"mx-1\"> {{'posts.bornOn' | translate}}</span>\r\n                                          {{item?.birthDate |date : \"longDate\" : undefined : lang}}</p>\r\n                                          <div *ngIf=\"profileOnHover==i\" class=\" profileOnHover bg-white rounded-lg p-3\">\r\n                                              <div class=\"d-flex align-items-center\">\r\n                                              <div>\r\n                                                <div \r\n                                                [routerLink]='[\"/visit\",item?._id]'\r\n                                                class=\"overIMG\">\r\n                                                    <img\r\n                                                  \r\n                                                    class=\"profile\" [src]=\"item?.profilePhoto | gender : item?.gender \" alt=\"\">\r\n                                                </div>\r\n                                              </div>\r\n                                                  <div class=\"mx-3\">\r\n                                                      <h2\r\n                                                      [routerLink]='[\"/visit\",item?._id]'\r\n                                                      class=\"mb-2\">{{item?.firstName |\r\n                                                          titlecase | slice : 0 : 12}}\r\n                                                          {{item?.lastName | titlecase | slice\r\n                                                          : 0 : 12}}</h2>\r\n                                                      <p><i class=\"far fa-calendar-alt\"></i> <span class=\"mx-1\">{{'posts.bornOn' | translate}}</span>\r\n                                                          {{item?.birthDate |date : \"longDate\" : undefined : lang}}</p>\r\n                                                  </div>\r\n                                              </div>\r\n                                          </div>\r\n                               </div>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                    <h2 \r\n                    *ngIf=\"result?.length === 0\"\r\n                    class=\"text-center mx-auto my-0 pb-4 font-weight-bold text-secondary\">\r\n                        {{'leftSide.noResultFor' | translate}} {{searchPipeValue}}\r\n                    </h2>\r\n                </ng-container>\r\n                \r\n          \r\n            </ng-container>\r\n            <ng-template #noFollowing>\r\n                <h2 class=\"text-center mx-auto my-0 pb-4 font-weight-bold text-secondary\">\r\n                    {{'leftSide.noFriends' | translate}} {{searchPipeValue}}\r\n                </h2>\r\n            </ng-template>\r\n        </ng-template>\r\n            \r\n        </div>\r\n        <div class=\"row bg-white mx-md-0 p-3 rounded-lg\">\r\n            <div class=\"col-md-12 mb-3\">\r\n                <div class=\"d-block d-md-flex justify-content-between align-items-center\">\r\n                    <h2 class=\"mb-2 mb-md-0 font-weight-bold\">{{'leftSide.followers' | translate}}</h2>\r\n                    <div class=\"position-relative parentOfSearch\">\r\n                        <input [(ngModel)]=\"searchPipeValueTwo\" placeholder=\"{{'posts.search' | translate}}\" type=\"search\">\r\n                         <i class=\"fas fa-search text-secondary\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf=\"userprofileService.skeltonLoadingFollowers;else contentTwo\">\r\n                <div\r\n                *ngFor=\"let item of loadingCount\"\r\n                class=\"col-md-6 mb-3\">\r\n                 <div \r\n                 [class.darkMode]=\"userprofileService.userProfile?.darkMode\"\r\n                 class=\"fb-item bg-white postsLoadingg rounded-lg p-4\">\r\n                 <div class=\"first-section-wrapper d-flex align-items-center mb-3\">\r\n                    <div\r\n                    class=\"item bg-white postsLoadingg\">\r\n                        <ngx-skeleton-loader count=\"1\" appearance=\"circle\" [theme]=\"{\r\n                    width: '80px',\r\n                    height: '80px',\r\n                    'border-radius': '10px'\r\n                  }\">\r\n                        </ngx-skeleton-loader>\r\n                    </div>\r\n                     <div class=\"gravatar-title mx-3\">\r\n                         <div>\r\n                             <ngx-skeleton-loader [theme]=\"{\r\n                       width: '90%',\r\n                       'border-radius': '0',\r\n                       height: '15px',\r\n                       'margin-bottom': '10px'\r\n                     }\"></ngx-skeleton-loader>\r\n                         </div>\r\n                         <div>\r\n                             <ngx-skeleton-loader\r\n                                 [theme]=\"{ width: '70%', 'border-radius': '0', height: '15px' }\">\r\n                             </ngx-skeleton-loader>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n                </div>\r\n             </ng-container>\r\n        <ng-template #contentTwo>\r\n            <ng-container *ngIf=\"userprofileService.followers?.length;else noFollowers\">\r\n                <ng-container *ngIf=\"( userprofileService.followers | search : searchPipeValueTwo) as resultTwo\">\r\n                    <div class=\"col-md-6 mb-4\" \r\n                    *ngFor=\"let item of userprofileService.followers | search : searchPipeValueTwo;let i = index\">\r\n                        <div class=\"d-flex  borderAround\">\r\n                            <div class=\"d-flex align-items-center\" (mouseleave)='followersOnHover=-1'>\r\n                                <div \r\n                                [routerLink]='[\"/visit\",item?._id]'\r\n                                class=\"overIMG\" (mouseover)=\"followersOnHover=i\" >\r\n                                    <img  \r\n                                    \r\n                                    [src]=\"item?.profilePhoto | gender : item?.gender\" alt=\"\">\r\n                                </div>\r\n                               <div class=\"mx-3\" (mouseover)=\"followersOnHover=i\"  (mouseleave)='followersOnHover=-1'>\r\n                                   <h2  \r\n                                   [routerLink]='[\"/visit\",item?._id]'\r\n                                   class=\"userName mb-1\">{{item?.firstName | titlecase | slice : 0 : 12}}\r\n                                       {{item?.lastName | titlecase | slice : 0 : 12}}</h2>\r\n                                       <p class=\"text-secondary m-0\"><i class=\"far fa-calendar-alt\"></i> <span class=\"mx-1\">{{'posts.bornOn' | translate}}</span> \r\n                                          {{item?.birthDate |date : \"longDate\" : undefined : lang}}</p>\r\n                                          <div *ngIf=\"followersOnHover==i\" class=\" profileOnHover bg-white rounded-lg p-3\">\r\n                                              <div class=\"d-flex align-items-center\">\r\n                                                <div>\r\n                                                    <div  class=\"overIMG\" [routerLink]='[\"/visit\",item?._id]'>\r\n                                                        <img\r\n                                                        \r\n                                                        class=\"profile\" [src]=\"item?.profilePhoto | gender : item?.gender\" alt=\"\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                  <div class=\"mx-3\">\r\n                                                      <h2 \r\n                                                      [routerLink]='[\"/visit\",item._id]'\r\n                                                      class=\"mb-2\">{{item?.firstName |\r\n                                                          titlecase | slice : 0 : 12}}\r\n                                                          {{item?.lastName | titlecase | slice\r\n                                                          : 0 : 12}}</h2>\r\n                                                      <p><i class=\"far fa-calendar-alt\"></i> <span class=\"mx-1\">{{'posts.bornOn' | translate}}</span>\r\n                                                          {{item?.birthDate |date : \"longDate\" : undefined : lang}}</p>\r\n                                                  </div>\r\n                                              </div>\r\n                                          </div>\r\n                               </div>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                    <h2 \r\n                    *ngIf=\"resultTwo?.length === 0\"\r\n                    class=\"text-center mx-auto my-0 pb-4 font-weight-bold text-secondary\">\r\n                    {{'leftSide.noResultFor' | translate}} {{searchPipeValueTwo}}\r\n                    </h2>\r\n                </ng-container>\r\n             \r\n              \r\n            </ng-container>\r\n            <ng-template #noFollowers>\r\n                <h2 class=\"text-center mx-auto my-0 pb-4 font-weight-bold text-secondary\">\r\n                    {{'leftSide.noFollowers' | translate}}  \r\n                </h2>\r\n            </ng-template>\r\n        </ng-template>\r\n        \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.scss']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\nprofileOnHover:number=-1\r\nfollowersOnHover:number=-1\r\nsearchPipeValue:any\r\nsearchPipeValueTwo:any\r\nloadingCount:any=[]\r\n  constructor(public userprofileService:UserProfileService) { this.loadingCount.length=4 }\r\nget lang() {return localStorage.getItem(\"currenLanguage\") || \"en\"}\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n\r\n}\r\n","<div \r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\nclass=\"darkModeClass\"\r\n>\r\n    <div class=\" photos mb-3 bg-white p-3 rounded-lg\">\r\n        <div class=\"d-flex justify-content-between align-items-center\">\r\n            <h2 routerLink=\"../friends\" class=\"font-weight-bold main\">{{'leftSide.followers' | translate}}</h2>\r\n            <a routerLink=\"../friends\">{{'leftSide.seeAllFollowers' | translate}}</a>\r\n        </div>\r\n        <p *ngIf=\"userProfilesService.followers?.length\" class=\"text-secondary mb-3\">\r\n            {{userProfilesService?.followers?.length}} \r\n          {{(userProfilesService?.followers?.length==1 ? \"leftSide.follower\" : \"leftSide.followers\") | translate}}\r\n        </p>\r\n        <div class=\"row\">\r\n            <div *ngFor=\"let item of userProfilesService.followers | slice : 0 : 6;let i =index\"\r\n             class=\"col-4 col-md-4  pb-3\"\r\n                (mouseover)=\"profileOnHoverforFollowers=i\" (mouseleave)='profileOnHoverforFollowers=-1'>\r\n                <div style=\"cursor: pointer;\">\r\n                    <div class=\"parentOfFollowing\" [routerLink]='[\"/visit\",item._id]'>\r\n                        <img [src]=\"item?.profilePhoto | gender : item?.gender\" class=\"followImg\" alt=\"\">\r\n                    </div>\r\n    \r\n                    <p [routerLink]='[\"/visit\",item?._id]' class=\"font-weight-bold d-inline namee\" #elementt>\r\n                        {{item?.firstName | titlecase |\r\n                        slice : 0 : 12 | lang : elementt}} {{item?.lastName | titlecase | slice : 0 : 12}}\r\n                    </p>\r\n                </div>\r\n    \r\n                <div *ngIf=\"profileOnHoverforFollowers==i\" class=\" profileOnHover bg-white rounded-lg p-3\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <div>\r\n                            <div class=\"overIMG\" [routerLink]='[\"/visit\",item?._id]'>\r\n                                <img class=\"profile\" [src]=\"item?.profilePhoto | gender : item?.gender\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"mx-3\">\r\n                            <h2 [routerLink]='[\"/visit\",item?._id]' class=\"mb-2 \">{{item?.firstName |\r\n                                titlecase | slice : 0 : 12}}\r\n                                {{item?.lastName | titlecase | slice : 0 : 12}}</h2>\r\n                            <p><i class=\"far fa-calendar-alt\"></i> <span class=\"mx-1\">{{'posts.bornOn' | translate}}</span>\r\n                                {{item?.birthDate |date : 'longDate' : undefined : lang}}</p>\r\n                    \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-userprofile-followers',\r\n  templateUrl: './userprofile-followers.component.html',\r\n  styleUrls: ['./userprofile-followers.component.scss']\r\n})\r\nexport class UserprofileFollowersComponent implements OnInit {\r\n\r\n  profileOnHoverforFollowers = -1\r\n  constructor(public userProfilesService:UserProfileService) { }\r\nget lang() {return localStorage.getItem(\"currenLanguage\") || \"en\"}\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { CommentSocketService } from 'src/app/services/comment-socket.service';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\nimport { emptyContent } from 'src/app/shared/emptyContentValidator';\r\nimport SwiperCore, { Navigation } from 'swiper/core';\r\nSwiperCore.use([Navigation,]);\r\n@Component({\r\n  selector: 'app-userprofile',\r\n  templateUrl: './userprofile.component.html',\r\n  styleUrls: ['./userprofile.component.scss']\r\n})\r\nexport class UserprofileComponent implements OnInit, OnDestroy {\r\n  profileOnHover: number = -1\r\n  profileOnHoverSwiper: any = -1\r\n  postLoading: boolean = false\r\n  modalRef: BsModalRef\r\n  editContentForm: FormGroup\r\n  editImgForm: FormGroup\r\n  postImage: any\r\n  imgUrl: any\r\n  deletePostLoading: boolean = false\r\n  seeMoreIndex = -1\r\n  editTextOrImgPost: string = ''\r\n  chosenPostToEdit: any\r\n  swiperLoadingCount: any = []\r\n  postComments: any = []\r\n  postCommentsIndex: any = -1\r\n  commentsLoading: boolean = true\r\n  subscriptions: any[] = [];\r\n  editCommentIndex: any = -1\r\n  enterESCtoCancel:boolean=true\r\n  popupPost:any\r\n  popupReactions:any\r\n  reactions:any = []\r\n  postReactions:any=[]\r\n  sortReaction:any = []\r\n  reactionModalImgSrc:any=\"\"\r\n  filterReactions:any=''\r\n  reacionsModaClassIndex:any=-1\r\n  translatedSnackbar:any\r\n  @ViewChild('editCommentInpu', { static: false }) editCommentInpu: ElementRef\r\n  @ViewChild('addCommentInput', { static: false }) addCommentInput: ElementRef\r\n  constructor(public userProfilesService: UserProfileService,\r\n    public modalService: BsModalService,\r\n    private fb: FormBuilder,\r\n    private rendrer: Renderer2,\r\n    private _snackBar: MatSnackBar,\r\n    private cd: ChangeDetectorRef,\r\n    private commentService: CommentSocketService,\r\n    private router:Router,\r\n    private translate:TranslateService\r\n  ) {\r\n    this.subscriptions.push(\r\n      translate.get('posts.reactions').subscribe(\r\n        res => this.reactions = res\r\n     )\r\n\r\n     )\r\n     this.subscriptions.push(\r\n      translate.get('posts').subscribe(\r\n        res => this.translatedSnackbar=res\r\n     )\r\n\r\n     )\r\n  }\r\nget lang() {return localStorage.getItem(\"currenLanguage\") || \"en\"}\r\n\r\n  ngOnInit(): any {\r\n    window.scroll(0,0)\r\n    this.swiperLoadingCount.length = 5\r\n    // start listen to users comments to push the comment in the comments array\r\n    this.commentService.listen(\"comment\").subscribe(\r\n      (res: any) => {\r\n        this.getPostsAfterEdit()\r\n        if (this.postCommentsIndex != -1 &&\r\n          this.userProfilesService.userPosts[this.postCommentsIndex]._id == res.comment?.post._id) {\r\n          let newComment = {\r\n            comment: res?.comment?.comment,\r\n            createdAt: res?.comment?.createdAt,\r\n            post: res?.comment?.post?._id,\r\n            user: res?.user,\r\n            _id: res?.comment?._id\r\n          }\r\n          this.postComments.unshift(newComment)\r\n        }\r\n      }, err => {\r\n        this.router.navigate([\"/error\"])\r\n      }\r\n    )\r\n    this.commentService.listen(\"reaction\").subscribe(\r\n      (res:any) => {\r\n        this.getPostsAfterEdit()\r\n      },\r\n      err => { this.router.navigate([\"/error\"])}\r\n    )\r\n    // end listen to users comments to push the comment in the comments array\r\n    \r\n\r\n  }\r\n\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.imgUrl = null\r\n    this.postImage = null\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n  openEditPostModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n    this.postImage = ''\r\n    if (this.editTextOrImgPost == 'text') {\r\n      this.editContentForm = this.fb.group({\r\n        content: [`${this.chosenPostToEdit.content}`, [Validators.required, emptyContent]]\r\n      })\r\n    } else if (this.editTextOrImgPost == 'image') {\r\n      this.editImgForm = this.fb.group({\r\n        image: ['', Validators.required]\r\n      })\r\n    }\r\n  }\r\n  scrollTop() { window.scroll(0, 0) }\r\n  // start make img appear once user chose it\r\n  selectPostImg(event: any) {\r\n    this.postImage = event.target.files[0]\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imgUrl = reader.result;\r\n    };\r\n\r\n    if (event.target.files[0]) {\r\n      reader.readAsDataURL(this.postImage);\r\n    } else {\r\n      this.imgUrl = null\r\n      this.postImage = null\r\n    }\r\n  }\r\n  // end make img appear once user chose it\r\n  // start clear the input file if user click cancel\r\n  deletePostImg(input: any) {\r\n    input.value = ''\r\n    this.imgUrl = null\r\n    this.postImage = null\r\n  }\r\n  // end clear the input file if user click cancel\r\n  deletePostt(id: any, btn: any): any {\r\n    this.rendrer.setAttribute(btn, 'disabled', 'disabled')\r\n    this.deletePostLoading = true\r\n    this.subscriptions.push(\r\n      this.userProfilesService.deletPost(id).subscribe(\r\n        res => {\r\n          this.openSnackBar(this.translatedSnackbar.postDeleted, this.translatedSnackbar.deleted)\r\n          this.modalRef.hide()\r\n          this.deletePostLoading = false\r\n          this.getPostsAfterEdit()\r\n          this.getPhotosAfterAddPost()\r\n        }, err => {\r\n          this.deletePostLoading = false\r\n        }\r\n      )\r\n    )\r\n  }\r\n  openSnackBar(one: any, two: any) {\r\n    this._snackBar.open(one, two, {\r\n      horizontalPosition: 'left',\r\n      verticalPosition: 'bottom',\r\n      duration: 3000\r\n    });\r\n  }\r\n\r\n  editpostContent(value: any) {\r\n\r\n    this.postLoading = true\r\n    this.subscriptions.push(\r\n      this.userProfilesService.updatePostContent(this.chosenPostToEdit?._id, value).subscribe(\r\n        res => {\r\n          this.openSnackBar(this.translatedSnackbar.postUpdated, this.translatedSnackbar.updated)\r\n          this.postImage = ''\r\n          this.modalRef.hide()\r\n          this.postLoading = false\r\n          this.postCommentsIndex = -1\r\n          this.getPostsAfterEdit()\r\n        }, err => {\r\n          this.postImage = ''\r\n          this.modalRef.hide()\r\n          this.postLoading = false\r\n        }\r\n      )\r\n    )\r\n  }\r\n  editpostIMG() {\r\n    if (this.postImage) {\r\n      this.postLoading = true\r\n      let img = new FormData()\r\n      if (this.postImage) img.append('image', this.postImage)\r\n      this.subscriptions.push(\r\n        this.userProfilesService.updatePostImage(this.chosenPostToEdit?._id, img).subscribe(\r\n          res => {\r\n            this.openSnackBar(this.translatedSnackbar.imageUpdated, this.translatedSnackbar.updated)\r\n            this.postImage = ''\r\n            this.modalRef.hide()\r\n            this.postLoading = false\r\n            this.postCommentsIndex = -1\r\n            this.getPostsAfterEdit()\r\n            this.getPhotosAfterAddPost()\r\n          }, err => {\r\n            this.postImage = ''\r\n            this.modalRef.hide()\r\n            this.postLoading = false\r\n          }\r\n        )\r\n      )\r\n    } else {\r\n      this.modalRef.hide()\r\n    }\r\n  }\r\n\r\n  // start swiper carousel options\r\n\r\n  reactionSwiper: any = {\r\n    slidesPerView: \"2.6\",\r\n    spaceBetween: \"50\",\r\n    pagination: \"{ clickable: true ,type: 'fraction'}\",\r\n    navigation: \"false\",\r\n    \r\n    breakpoints: {\r\n      0: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 10,\r\n      },\r\n      768: {\r\n        slidesPerView: 5,\r\n        spaceBetween: 10,\r\n      },\r\n      1024: {\r\n        slidesPerView: 6,\r\n        spaceBetween: 10,\r\n      },\r\n    }\r\n\r\n  }\r\n  // end swiper carousel options\r\n  getPostsAfterEdit() {\r\n    this.subscriptions.push(\r\n\r\n      this.userProfilesService.getMyProfile().subscribe(\r\n        (res:any) => {\r\n          this.postCommentsIndex=-1\r\n          this.userProfilesService.userPosts = res?.posts\r\n        },\r\n        err => {\r\n        }\r\n\r\n      )\r\n    )\r\n  }\r\n  getPhotosAfterAddPost() {\r\n    this.subscriptions.push(\r\n      this.userProfilesService.getMyPhotos().subscribe(\r\n        (res: any) => {\r\n          this.userProfilesService.skeltonLoadingForPhotos = false\r\n          this.userProfilesService.photos = res\r\n        },\r\n        err => { }\r\n      )\r\n    )\r\n  }\r\n \r\n\r\n  makeAComment(event: any, input: any, positId: any,i:any) {\r\n    event.preventDefault()\r\n    if (input.value.trim() != \"\" && this.userProfilesService.userProfile?._id) {\r\n      this.commentService.emit(\"addComment\", {\r\n        postId: positId,\r\n        userId: this.userProfilesService.userProfile?._id,\r\n        comment: input.value.trim()\r\n      }).then(\r\n        res => {\r\n          this.userProfilesService.userPosts[i].numOfComments+=1\r\n          input.value = ''\r\n          input.style.height = 'auto'\r\n          input.style.height = input.scrollHeight + 'px'\r\n        },\r\n        err => { this.router.navigate([\"/error\"]) }\r\n      )\r\n\r\n    }\r\n  }\r\n \r\nscrollY:any\r\n getPostComments(id: any, i: any) {\r\n     this.scrollY = window.scrollY\r\n    this.commentsLoading = true\r\n    this.postComments = []\r\n    this.postCommentsIndex = i\r\n    this.subscriptions.push(\r\n      this.userProfilesService.getPostComment(id).subscribe(\r\n        (res: any) => {\r\n          this.commentsLoading = false\r\n          if(!this.userProfilesService.popUP) {\r\n            this.cd.detectChanges()\r\n            this.addCommentInput.nativeElement.focus()\r\n          }\r\n          this.popupReactions=res\r\n       \r\n          this.postComments = res?.comments\r\n          this.popupPost=res?.post\r\n        }, err => {\r\n        }\r\n      )\r\n    )\r\n  }\r\n  openReactionModal(id:any,modal:any,i:any) {\r\n    this.postReactions=[]\r\n    this.sortReaction=[]\r\n    let userPost = this.userProfilesService?.userPosts[i]\r\n    this.subscriptions.push(\r\n      this.userProfilesService.getPostComment(id).subscribe(\r\n        (res: any) => {\r\n          userPost.angry= res?.numOfAngrys\r\n          userPost.sad= res?.numOfSads\r\n          userPost.haha= res?.numOfHahas\r\n          userPost.wow= res?.numOfWows\r\n          userPost.like= res?.numOfLikes\r\n          userPost.love= res?.numOfLoves\r\n          userPost.numOfReactions=  res?.numOfReactions\r\n          this.postReactions = res?.reactions\r\n          let containerOfReactions = [\r\n            res?.numOfLoves,\r\n            res?.numOfHahas,\r\n            res?.numOfWows,\r\n            res?.numOfSads,\r\n            res?.numOfLikes,\r\n            res?.numOfAngrys\r\n          ]\r\n          let imgOfReaction = [\r\n            \"love\",\r\n            \"haha\",\r\n            \"wow\",\r\n            \"sad\",\r\n            \"like\",\r\n            \"angry\"\r\n          ]\r\n          for (let i = 0; i< 6;i++) {\r\n          let  max = Math.max(...containerOfReactions)\r\n            this.sortReaction.push({length:max,reactionImg:imgOfReaction[containerOfReactions.indexOf(max)]})\r\n            imgOfReaction.splice(containerOfReactions.indexOf(max),1)\r\n            containerOfReactions.splice(containerOfReactions.indexOf(max),1)\r\n          }\r\n          this.openModal(modal)\r\n\r\n        }, err => {\r\n        }\r\n      )\r\n    )\r\n  }\r\n  deleteComment(commentId: any, postId: any, i: any) {\r\n    this.subscriptions.push(\r\n      this.userProfilesService.deletComment(commentId).subscribe(\r\n        res => {\r\n          this.userProfilesService.userPosts[i].numOfComments-=1\r\n          this.getPostComments(postId, i)\r\n        }, err => { })\r\n    )\r\n  }\r\n  updateComment(id:any,comment:any,postId:any,i:any,e:any) {\r\n    e.preventDefault()\r\n    if(comment.trim() !== '') {\r\n      let updatedComment = {id,comment}\r\n          this.subscriptions.push(\r\n      this.userProfilesService.updateComment(updatedComment).subscribe(\r\n        res => {\r\n          this.getPostComments(postId, i)\r\n          this.editCommentIndex=-1\r\n        }, err => {  })\r\n    )\r\n    }\r\n  }\r\n  // start make user control on textarea height\r\n  textAreaHeightAuto(textArea: any) {\r\n    textArea.style.height = '34px'\r\n    textArea.style.height = textArea.scrollHeight + 'px'\r\n  }\r\n  // end make user control on textarea height\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => {\r\n      sub.unsubscribe()\r\n    })\r\n  }\r\n  resizeTextArea() {\r\n    this.cd.detectChanges()\r\n    let textarea =  this.editCommentInpu.nativeElement\r\n    textarea.focus()\r\n    textarea.selectionStart = textarea.value.length\r\n    this.rendrer.setStyle(textarea, \"height\", `${textarea.scrollHeight}px`)\r\n  }\r\n  showCommentsInMobileScreen(element:any) {\r\n    this.rendrer.removeClass(element,\"zIndex\")\r\n  }\r\n  hideCommentsInMobileScreen(element:any) {\r\n    this.rendrer.addClass(element,\"zIndex\")\r\n  }\r\n  closePopup() {\r\n    this.userProfilesService.popUP=false;\r\n    setTimeout(() => window.scrollTo(0, this.scrollY), 0);\r\n    this.postComments = [];\r\n    this.popupPost=[];\r\n    this.postReactions=[]\r\n    this.postCommentsIndex=-1;\r\n  }\r\n  navigate(id:any) {\r\n    this.closePopup()\r\n    this.router.navigate(['/visit',id])\r\n  }\r\n  @HostListener('document:keydown.escape', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n    if(this.userProfilesService.popUP) {\r\n       this. closePopup()\r\n    }\r\n  }\r\n\r\n  makeReaction(reactionName:any,i:any,parentOfReactions:any,postId:any) {\r\n    let userPost = this.userProfilesService?.userPosts[i] \r\n    this.rendrer.addClass(parentOfReactions, \"hideParentOfReactions\") \r\n    if(userPost?.myReaction?.length) {\r\n      if (reactionName==userPost?.myReaction[0]?.reaction) {\r\n         userPost.myReaction=[]\r\n      } else {\r\n        userPost.myReaction=[]\r\n        userPost?.myReaction.push({reaction:reactionName})\r\n      }\r\n    } else  {\r\n      userPost.myReaction = []\r\n      userPost.myReaction.push({reaction:reactionName})\r\n    }\r\n      this.commentService.emit(\"addReaction\",{\r\n      postId:postId,\r\n      reaction:reactionName\r\n    }).then(\r\n      res => {\r\n        this. updateReaction(postId,i)\r\n      }, err => { this.router.navigate([\"/error\"])}\r\n    )\r\n  }\r\n  updateReaction(postId:any,i:any) {\r\n    let userPost = this.userProfilesService?.userPosts[i]\r\n    this.userProfilesService.getPostComment(postId).subscribe(\r\n      (res: any) => {\r\n        userPost.angry= res?.numOfAngrys\r\n        userPost.sad= res?.numOfSads\r\n        userPost.haha= res?.numOfHahas\r\n        userPost.wow= res?.numOfWows\r\n        userPost.like= res?.numOfLikes\r\n        userPost.love= res?.numOfLoves\r\n        userPost.numOfReactions=  res?.numOfReactions\r\n      \r\n      }, err => {\r\n      }\r\n    )\r\n  }\r\n  showParentOfReactionsOnHover(element:any) {\r\n    this.rendrer.removeClass(element, \"hideParentOfReactions\")\r\n  }\r\n  hideParentOfReactionsOnHover(element:any) {\r\n    this.rendrer.addClass(element, \"hideParentOfReactions\")\r\n  }\r\n  \r\n  \r\n}\r\n","<div class=\"container  \" style=\"min-height: 100vh;\">\r\n    <div class=\"row paddinggx\" [class.darkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n        <!-- start people you may know section -->\r\n        <div class=\"col-md-12 mb-3\">\r\n             <app-peope-you-may-know></app-peope-you-may-know>\r\n        </div>\r\n        <!-- end people you may know section -->\r\n        <div class=\"col-lg-5  mb-3\">\r\n            <div class=\"sticky-top\">\r\n                <!-- start intro -->\r\n                <app-userprofile-intro></app-userprofile-intro>\r\n                <!-- end intro -->\r\n                <!-- start following section -->\r\n                <app-userprofile-following></app-userprofile-following>\r\n                <!-- end following section -->\r\n                <!-- start followers section -->\r\n                <app-userprofile-followers></app-userprofile-followers>\r\n                <!-- start followers section -->\r\n                      <!-- start photos section -->\r\n                      <app-userprofile-photos></app-userprofile-photos>\r\n                      <!-- end photos section -->\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-7 mb-3\">\r\n            <div>\r\n                <!-- start add post section -->\r\n                <app-add-post></app-add-post>\r\n                <!-- end add post section -->\r\n                <!-- start post loading section -->\r\n                <ng-container *ngIf=\"userProfilesService.skeltonLoading;else postssContentt\">\r\n                    <ng-container *ngFor=\"let item of swiperLoadingCount\">\r\n                        <div [class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\n                            class=\"fb-item bg-white postsLoadingg rounded-lg p-4 mb-3\">\r\n                            <div class=\"first-section-wrapper d-flex align-items-center mb-3\">\r\n                                <div class=\"gravatar \">\r\n                                    <ngx-skeleton-loader appearance=\"circle\" [theme]=\"{\r\n                                        'width': '80px',\r\n                                        'height': '80px'\r\n                                    }\">\r\n                                    </ngx-skeleton-loader>\r\n                                </div>\r\n                                <div class=\"gravatar-title mx-3\">\r\n                                    <div>\r\n                                        <ngx-skeleton-loader [theme]=\"{\r\n                              width: '90%',\r\n                              'border-radius': '0',\r\n                              height: '15px',\r\n                              'margin-bottom': '10px'\r\n                            }\"></ngx-skeleton-loader>\r\n                                    </div>\r\n                                    <div>\r\n                                        <ngx-skeleton-loader\r\n                                            [theme]=\"{ width: '70%', 'border-radius': '0', height: '15px' }\">\r\n                                        </ngx-skeleton-loader>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"second-section-wrapper\">\r\n                                <div class=\"wrapper\">\r\n                                    <ngx-skeleton-loader [theme]=\"{\r\n                            width: '80%',\r\n                            'border-radius': '0',\r\n                            height: '15px',\r\n                            'margin-bottom': '10px'\r\n                          }\"></ngx-skeleton-loader>\r\n                                </div>\r\n                                <div class=\"wrapper\">\r\n                                    <ngx-skeleton-loader [theme]=\"{\r\n                            width: '90%',\r\n                            'border-radius': '0',\r\n                            height: '15px',\r\n                            'margin-bottom': '10px'\r\n                          }\"></ngx-skeleton-loader>\r\n                                </div>\r\n                                <div class=\"wrapper\">\r\n                                    <ngx-skeleton-loader [theme]=\"{\r\n                            width: '60%',\r\n                            'border-radius': '0',\r\n                            height: '15px',\r\n                            'margin-bottom': '10px'\r\n                          }\"></ngx-skeleton-loader>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </ng-container>\r\n                <!-- end post loading section -->\r\n                <ng-template #postssContentt>\r\n                    <!-- start posts seection -->\r\n                    <ng-container *ngIf=\"userProfilesService.userPosts?.length;else noPosts\">\r\n                        <div *ngFor=\"let post of userProfilesService.userPosts;let i = index\"\r\n                            class=\"postss bg-white py-2 rounded-lg mb-3\">\r\n                            <div class=\"p-3 d-flex justify-content-between align-items-center\">\r\n                                <div (mouseleave)='profileOnHover=-1' class=\"d-flex  align-items-center \">\r\n                                    <div (mouseover)=\"profileOnHover=i\">\r\n                                        <img (click)='scrollTop()' class=\"smllProfileImg\"\r\n                                            [src]=\"userProfilesService.userProfile?.profilePhoto | gender : userProfilesService.userProfile?.gender \"\r\n                                            alt=\"\">\r\n                                    </div>\r\n                                    <div class=\"mx-3\">\r\n                                        <div (mouseover)=\"profileOnHover=i\" (mouseleave)='profileOnHover=-1'>\r\n                                            <h2 class=\"userName\">{{userProfilesService.userProfile?.firstName |\r\n                                                titlecase |\r\n                                                slice : 0 : 12}}\r\n                                                {{userProfilesService.userProfile?.lastName | titlecase | slice : 0 :\r\n                                                12}}\r\n                                            </h2>\r\n                                            <div *ngIf=\"profileOnHover==i\"\r\n                                                class=\" profileOnHover bg-white rounded-lg p-3\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <div>\r\n                                                        <div (click)='scrollTop()' class=\"overIMG\">\r\n                                                            <img class=\"profile\"\r\n                                                                [src]=\"userProfilesService.userProfile?.profilePhoto | gender : userProfilesService.userProfile?.gender \"\r\n                                                                alt=\"\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"mx-3\">\r\n                                                        <h2 class=\"mb-2\">{{userProfilesService.userProfile?.firstName |\r\n                                                            titlecase | slice : 0 : 12}}\r\n                                                            {{userProfilesService.userProfile?.lastName | titlecase |\r\n                                                            slice\r\n                                                            : 0 : 12}}</h2>\r\n                                                        <p>\r\n                                                            <i class=\"far fa-calendar-alt\"></i> \r\n                                                            <span class=\"mx-1\">{{'posts.bornOn' | translate}}</span>\r\n                                                            {{userProfilesService.userProfile?.birthDate | date : 'longDate' : undefined : lang}}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button routerLink='/myProfile/layout/about' class=\"mt-3\">\r\n                                                    <i class=\"fas fa-pen mr-2\"></i>   {{'layOut.editProfile' | translate}}\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"position-relative\">\r\n                                            <div class=\"timee d-inline-block\">\r\n                                                <small class=\"text-secondary \">{{post?.updatedAt | date : 'longDate' : undefined : lang}}</small>\r\n                                                <small class=\"timeOnHover\">{{post?.updatedAt | date : 'longDate' : undefined : lang}}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"position-relative\">\r\n                                    <i style=\"cursor: pointer;\" mat-button [matMenuTriggerFor]=\"menu\"\r\n                                        class=\"fas fa-ellipsis-h\"></i>\r\n                                    <mat-menu #menu=\"matMenu\">\r\n                                        <div [class.darkModeMenu]=\"userProfilesService.userProfile?.darkMode\">\r\n                                            <button\r\n                                            [ngStyle]='{\r\n                                                textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                                direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                                            }'\r\n                                                (click)='chosenPostToEdit=post;editTextOrImgPost=\"text\";openEditPostModal(editPost)'\r\n                                                mat-menu-item>\r\n                                                <i class=\"fas fa-pen\"></i> <span class=\"mx-2\">{{'posts.editText' | translate}}</span>\r\n                                            </button>\r\n                                            <button\r\n                                            [ngStyle]='{\r\n                                                textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                                direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                                            }'\r\n                                                (click)=\"imgUrl=post?.image;chosenPostToEdit=post;editTextOrImgPost='image';openEditPostModal(editPost)\"\r\n                                                *ngIf=\"post?.image\" mat-menu-item>\r\n                                                <i class=\"far fa-image\"></i> <span class=\"mx-2\">{{'posts.editImage' | translate}}</span>\r\n                                            </button>\r\n                                            <button \r\n                                            [ngStyle]='{\r\n                                                textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                                direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                                            }'\r\n                                            (click)=\"openModal(deletePost)\" mat-menu-item>\r\n                                                <i class=\"far fa-trash-alt\"></i> <span class=\"mx-2\"> {{'about.remove' | translate}}</span>\r\n                                            </button>\r\n                                        </div>\r\n                                    </mat-menu>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <p #elementt class=\"px-3  text-break\">\r\n                                {{post?.content | text : i : seeMoreIndex | lang : elementt }}\r\n                                <span *ngIf=\"post?.content?.length>500\" class=\"font-weight-bold text-secondary\"\r\n                                    style=\"cursor: pointer;direction: inherit;\"\r\n                                    (click)=\"seeMoreIndex = seeMoreIndex == i ? -1 : i\">\r\n                                    {{(seeMoreIndex == i ? 'posts.seeLess' : 'posts.seeMore') | translate}}</span>\r\n                            </p>\r\n                            <img (click)=\"postComments = [];userProfilesService.popUP=true;getPostComments(post._id,i)\" *ngIf=\"post?.image\"\r\n                                [src]=\"post.image\" alt=\"\" style=\"cursor: pointer;\" class=\"w-100 mt-3\">\r\n                            <div class=\"postOptions px-3\">\r\n                                <div class=\"my-2 d-flex justify-content-between align-items-center\">\r\n                                        <div (click)=\"filterReactions='';reacionsModaClassIndex=-1;openReactionModal(post?._id,reaction,i)\"\r\n                                        style=\"cursor: pointer;\" class=\"position-relative reactionsCount\">                                             \r\n                                                    <img #first class=\"first\" [src]=\"post?.love | mostReaction : post?.sad : post?.wow : post?.haha : post?.angry : post?.like : first\" alt=\"\">\r\n                                                    <img #secondIMG  class=\"last\" [src]=\"post?.love | secondReaction: post?.sad : post?.wow : post?.haha : post?.angry : post?.like  : secondIMG\" alt=\"\"> \r\n                                                    <span  \r\n                                                    *ngIf=\"post?.numOfReactions\">\r\n                                                    {{post?.numOfReactions}}</span>   \r\n                                                                      \r\n                                    </div>   \r\n                                    <p (click)=\"getPostComments(post._id,i)\" class=\" numOfComments\" *ngIf=\"post?.numOfComments\">\r\n                                        {{post?.numOfComments}}\r\n                                        {{(post?.numOfComments==1 ? \"posts.comment\" : \"posts.comments\") | translate}}\r\n                                    </p>\r\n                                </div>\r\n                                <div class=\"position-relative\">\r\n                                    <ul class=\"options list-unstyled d-flex justify-content-center mb-3\">\r\n                                        <li (mouseover)=\"showParentOfReactionsOnHover(parentOfReactions)\"\r\n                                            (mouseleave)=\"hideParentOfReactionsOnHover(parentOfReactions)\"\r\n                                            class=\"showReactions\">\r\n                                            <div class=\"userReact\">\r\n                                                <div *ngIf=\"!post?.myReaction?.length;else reactionFound\">\r\n                                                    <i class=\"far fa-thumbs-up\"></i> <span class=\"mx-2\">{{'posts.like' | translate}}</span>\r\n                                                </div>\r\n                                                <ng-template #reactionFound>\r\n                                                    <ng-container *ngFor=\"let itemm of reactions\">\r\n                                                        <div *ngIf=\"post?.myReaction[0]?.reaction==itemm?.reaction\"\r\n                                                            class=\"d-flex justify-content-center\">\r\n                                                            <img [src]=\"itemm?.imgSrc\">\r\n                                                            <span [class]=\"itemm?.reaction\" class=\"mx-2\">\r\n                                                                {{itemm.lang | titlecase}}</span>\r\n                                                        </div>\r\n                                                    </ng-container>\r\n                                                </ng-template>\r\n                                            </div>\r\n                                            <div #parentOfReactions class=\"hideParentOfReactions parentOfReactions\">\r\n                                                <ul class=\"reactions bg-white p-1 d-flex list-unstyled \">\r\n                                                    <li *ngFor=\"let item of reactions\"\r\n                                                        (click)=\"makeReaction(item?.reaction,i,parentOfReactions,post?._id)\">\r\n                                                        <img [src]=\"item?.imgSrc\" alt=\"\">\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li (click)=\"getPostComments(post?._id,i)\">\r\n                                            <i class=\"far fa-comment-alt \"></i>\r\n                                            <span class=\"mx-2\">{{'posts.comment' | translate}}</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <ng-container *ngIf=\"postCommentsIndex == i\">\r\n                                    <div \r\n                                    *ngIf=\"!commentsLoading\"\r\n                                    class=\"d-flex writeAcomment\">\r\n                                        <img [src]=\"userProfilesService.userProfile?.profilePhoto | gender : userProfilesService.userProfile?.gender \"\r\n                                            alt=\"\">\r\n                                        <div class=\"position-relative w-100\" \r\n                                        [ngStyle]=\"{paddingRight:lang=='ar' ? '0' : '25px',paddingLeft:lang=='ar' ? '25px' : '0'}\"\r\n                                        >\r\n                                            <textarea \r\n                                            [attr.dir]=\"'auto'\"\r\n                                            [ngClass]='{\r\n                                                \"ml-2\":lang!=\"ar\",\r\n                                                \"mr-2\":lang==\"ar\"\r\n                                            }'\r\n                                            (keydown.enter)=\"makeAComment($event,addCommentInput,post?._id,i)\"\r\n                                                (input)=\"textAreaHeightAuto(addCommentInput)\" rows=1 #addCommentInput\r\n                                                type=\"text\" class=\"ml-2\" placeholder=\"{{'posts.writeComment' | translate}}\"></textarea>\r\n                                            <i style=\"right: 30px;\"\r\n                                                (click)=\"makeAComment($event,addCommentInput,post?._id,i)\"\r\n                                                class=\"fas fa-paper-plane text-primary d-md-none \"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"parentOfComments mt-2\">\r\n                                        <ul class=\"comments list-unstyled my-2 p-0\">\r\n                                            <ng-container *ngIf=\"commentsLoading;else commentsConetent\">\r\n                                                <li *ngFor=\"let item of swiperLoadingCount\">\r\n                                                    <div [class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\n                                                        class=\"fb-item bg-white postsLoadingg rounded-lg\">\r\n                                                        <div\r\n                                                            class=\"first-section-wrapper d-flex align-items-center mb-3\">\r\n                                                            <div class=\"gravatar \">\r\n                                                                <ngx-skeleton-loader appearance=\"circle\" [theme]=\"{\r\n                                                                'width': '32px',\r\n                                                                'height': '32px',\r\n                                                                'margin':'0'\r\n                                                            }\">\r\n                                                                </ngx-skeleton-loader>\r\n                                                            </div>\r\n                                                            <div class=\"gravatar-title mx-3\">\r\n                                                                <div>\r\n                                                                    <ngx-skeleton-loader [theme]=\"{\r\n                                                      width: '90%',\r\n                                                      'border-radius': '0',\r\n                                                      height: '5px',\r\n                                                      'margin-bottom': '5px'\r\n                                                    }\"></ngx-skeleton-loader>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <ngx-skeleton-loader\r\n                                                                        [theme]=\"{ width: '70%', 'border-radius': '0', height: '5px' }\">\r\n                                                                    </ngx-skeleton-loader>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </ng-container>\r\n                                            <ng-template #commentsConetent>\r\n                                                <ng-container *ngIf=\"postComments?.length;else noCommentsYet\">\r\n                                                    <li *ngFor=\"let comment of postComments;let commentIndex = index\"\r\n                                                        class=\"d-flex\">\r\n                                                        <img [routerLink]=\"['/visit',comment?.user?._id]\"\r\n                                                            style=\"cursor: pointer;\"\r\n                                                            [src]=\"comment?.user?.profilePhoto | gender : comment.user?.gender \"\r\n                                                            alt=\"\">\r\n                                                        <ng-container\r\n                                                            *ngIf=\"editCommentIndex == commentIndex;else commentContent\">\r\n                                                            <div class=\"w-100\">\r\n                                                                <div \r\n                                                                [ngStyle]=\"{\r\n                                                                    'paddingRight': lang!='ar' ? '15px' : '0',\r\n                                                                    'paddingLeft': lang=='ar' ? '15px' : '0'\r\n                                                                }\"\r\n                                                                    class=\"position-relative\">\r\n\r\n                                                                    <textarea \r\n                                                                    [ngClass]='{\r\n                                                                        \"ml-2\":lang!=\"ar\",\r\n                                                                        \"mr-2\":lang==\"ar\",\r\n                                                                        \"mr-0\":lang!=\"ar\",\r\n                                                                        \"ml-0\":lang==\"ar\"\r\n                                                                    }'\r\n                                                                    [attr.dir]=\"'auto'\"\r\n                                                                        style=\"height:32px !important\"\r\n                                                                        #editCommentInpu\r\n                                                                        (input)=\"textAreaHeightAuto(editCommentInpu)\"\r\n                                                                        (focus)=\"enterESCtoCancel=true\"\r\n                                                                        (blur)=\"enterESCtoCancel=false\"\r\n                                                                        (keydown.esc)=\"editCommentIndex=-1\"\r\n                                                                        (keydown.enter)=\"updateComment(comment?._id,editCommentInpu.value,comment?.post,i,$event)\"\r\n                                                                        placeholder=\"{{'posts.writeComment' | translate}}\">{{comment?.comment}}</textarea>\r\n                                                                    <i style=\"right: 20px;\"\r\n                                                                        (click)=\"updateComment(comment?._id,editCommentInpu.value,comment?.post,i,$event)\"\r\n                                                                        class=\"fas fa-paper-plane text-primary d-md-none\"></i>\r\n                                                                </div>\r\n                                                                <small class=\"mx-2 \"><span class=\"d-none d-md-inline\"\r\n                                                                        *ngIf=\"enterESCtoCancel\">{{'posts.pressESC' | translate}} </span>\r\n                                                                    <span class=\"text-primary\" style=\"cursor: pointer;\"\r\n                                                                        (click)=\"editCommentIndex=-1\">{{'posts.cancel' | translate}}</span>.</small>\r\n                                                            </div>\r\n                                                        </ng-container>\r\n                                                        <ng-template #commentContent>\r\n                                                            <div class=\"mx-2\">\r\n                                                                <div class=\"commnetContent\">\r\n                                                                    <div class=\"d-flex\">\r\n                                                                        <p [routerLink]=\"['/visit',comment?.user?._id]\"\r\n                                                                            style=\"cursor: pointer;\"\r\n                                                                            class=\"font-weight-bold\">\r\n                                                                            {{comment.user?.firstName | titlecase |\r\n                                                                            slice : 0 : 12}}\r\n                                                                            {{comment.user?.lastName | titlecase | slice\r\n                                                                            : 0 : 12}}\r\n                                                                        </p>\r\n                                                                        <i [matMenuTriggerFor]=\"EditComment\"\r\n                                                                            *ngIf=\"comment?.user?._id == userProfilesService.userProfile?._id\"\r\n                                                                            class=\" fas fa-ellipsis-h mx-2\"\r\n                                                                            style=\"cursor: pointer;\"></i>\r\n                                                                        <mat-menu #EditComment=\"matMenu\">\r\n                                                                            <div\r\n                                                                                [class.darkModeMenu]=\"userProfilesService.userProfile?.darkMode\">\r\n                                                                                <button \r\n                                                                                [class.text-right]='lang==\"ar\"'\r\n                                                                                mat-menu-item\r\n                                                                                    (click)=\"editCommentIndex = commentIndex;resizeTextArea()\">\r\n                                                                                    {{'posts.edit' | translate}}\r\n                                                                                </button>\r\n                                                                                <button\r\n                                                                                [class.text-right]='lang==\"ar\"'\r\n                                                                                    (click)=\"deleteComment(comment?._id,comment?.post,i)\"\r\n                                                                                    mat-menu-item>\r\n                                                                                    {{'posts.delete' | translate}}\r\n                                                                                </button>\r\n                                                                            </div>\r\n                                                                        </mat-menu>\r\n                                                                    </div>\r\n                                                                    <p #commentP>{{comment?.comment | lang : commentP}}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <div class=\"position-relative\">\r\n                                                                    <div class=\"timee d-inline-block\">\r\n                                                                        <small\r\n                                                                            class=\"text-secondary \">{{comment?.createdAt\r\n                                                                            | date : 'longDate' : undefined : lang}}</small>\r\n                                                                        <small class=\"timeOnHover\">{{comment?.createdAt\r\n                                                                            | date : 'longDate' : undefined : lang}}</small>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </ng-template>\r\n                                                    </li>\r\n                                                </ng-container>\r\n                                                <ng-template #noCommentsYet>\r\n                                                    <li>{{'posts.noComments' | translate}}</li>\r\n                                                </ng-template>\r\n                                            </ng-template>\r\n                                        </ul>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                     \r\n\r\n                            <ng-template #deletePost>\r\n\r\n                                <div [class.popupDarkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n                                    <div class=\"modal-header\">\r\n                                        <h2 class=\"modal-title pull-left\">{{'posts.deletePost' | translate}}</h2>\r\n                                        <button \r\n                                        [style.margin]=\"lang=='ar' ? '-1rem auto -1rem -1rem' : 'margin: -1rem auto -1rem -1rem'\"\r\n                                        type=\"button\" class=\"close pull-right\" aria-label=\"Close\"\r\n                                            (click)=\"modalRef.hide()\">\r\n                                            <i class=\"fas fa-times\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <p class=\"mb-1\">{{ 'posts.areDeletePost' | translate}}</p>\r\n                                        <div class=\"d-flex justify-content-end\">\r\n                                            <button class=\"btn btn-secondary\" (click)=\"modalRef.hide()\">{{ 'posts.cancel' | translate}}</button>\r\n                                            <button #btn class=\"btn btn-primary mx-2\"\r\n                                                (click)=\"deletePostt(post._id,btn)\">{{ 'posts.delete' | translate}}</button>\r\n                                        </div>\r\n                                        <div *ngIf=\"deletePostLoading\" style=\"height:50px\" class=\"text-center mb-3\">\r\n                                            <div class=\"lds-facebook\">\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </ng-container>\r\n                    <!-- start posts seection -->\r\n                    <ng-template #noPosts>\r\n                        <h2 class=\"text-center py-4 font-weight-bold text-secondary\">\r\n                            {{'posts.noPostsAvailable' | translate}}\r\n                        </h2>\r\n                    </ng-template>\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #editPost>\r\n    <div *ngIf=\"postLoading\" class=\"postLoading d-flex justify-content-center align-items-center\">\r\n        <div class=\"text-center\">\r\n            <div class=\"lds-ellipsis\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <p class=\"font-weight-bold text-white\"> {{'about.save' | translate}}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [class.popupDarkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n        <div class=\"modal-header\">\r\n            <h2 class=\"modal-title pull-left text-center w-100\">{{'posts.editPost' | translate}}</h2>\r\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n                <i class=\"fas fa-times\"></i>\r\n            </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div class=\"d-flex align-items-center mb-2\">\r\n                <img class=\"smllProfileImg\"\r\n                    [src]=\"userProfilesService.userProfile?.profilePhoto | gender :  userProfilesService.userProfile?.gender\"\r\n                    alt=\"\">\r\n                <h2 class=\"mx-3\">{{userProfilesService.userProfile?.firstName | titlecase | slice : 0 : 12}}\r\n                    {{userProfilesService.userProfile?.lastName | titlecase | slice : 0 : 12}}</h2>\r\n            </div>\r\n            <form *ngIf=\"editTextOrImgPost=='text'\" [formGroup]=\"editContentForm\"\r\n                (ngSubmit)='editpostContent(editContentForm.value)'>\r\n                <textarea class=\"p-3 rounded-lg\" [attr.dir]=\"'auto'\" formControlName='content'\r\n                    placeholder=\"{{'addPost.yourMind' | translate}}\"></textarea>\r\n                <button [disabled]=\"editContentForm.invalid\" type=\"submit\" class=\"btn btn-primary w-100 mt-3 post\">\r\n                    {{'about.save' | translate}}</button>\r\n            </form>\r\n            <form *ngIf=\"editTextOrImgPost=='image'\" [formGroup]=\"editImgForm\" (ngSubmit)='editpostIMG()'>\r\n                <div class=\"parentOfimg position-relative mb-2\">\r\n                    <i class=\"fas fa-times\" (click)=\"deletePostImg(input);imgUrl=''\"></i>\r\n                    <img [src]=\"imgUrl\" class=\"w-100\" alt=\"\">\r\n                </div>\r\n                <div\r\n                    class=\" toYourPost d-flex justify-content-between align-items-center text-secondary font-weight-bold\">\r\n                    {{'addPost.toYourPost' | translate}}\r\n                    <div class=\"position-relative d-flex align-items-center photoIcon p-2\">\r\n                        <span class=\"iconn\"></span> <span class=\"mx-2\"> {{'addPost.photo' | translate}}</span>\r\n                        <input formControlName=\"image\" accept=\"image/*\" #input (change)=\"selectPostImg($event)\"\r\n                            type=\"file\">\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary w-100 mt-3 post\">\r\n                    {{'about.save' | translate}}</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #reaction>\r\n    <div class=\"parentOfReactionsModal\" [class.popupDarkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n        <div class=\"modal-header\">\r\n            \r\n<swiper  [config]=\"reactionSwiper\">\r\n \r\n    <ng-template swiperSlide>\r\n        <div style=\"cursor: pointer;text-align:center;\" class=\"p-2\"\r\n         [class.like]=\"filterReactions==''\"\r\n        (click)=\"filterReactions='';reacionsModaClassIndex=-1\">   {{'reactionModal.all' | translate}}</div>\r\n    </ng-template>\r\n    <ng-container *ngFor=\"let item of sortReaction;let i = index\">\r\n        <ng-template swiperSlide>\r\n                <div \r\n                style=\"cursor: pointer;text-align: center;\"\r\n                (click)=\"filterReactions=item?.reactionImg;reacionsModaClassIndex=i\"\r\n                    [ngClass]=\"reacionsModaClassIndex==i ?  item?.reactionImg :  ''\"\r\n                    class=\"d-flex align-items-center p-2\" >\r\n                    <img style=\"width: 20px;height: 20px;margin: 0 5px;\" [src]=\"'assets/'+item?.reactionImg+'.png'\"\r\n                        alt=\"\">\r\n                    <p>{{item?.length}}</p>\r\n                </div>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n</swiper>\r\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"modal-body parentOfimg reactionsModal\">\r\n            <ul class=\"list-unstyled p-0\">\r\n                <li class=\"mb-3\" *ngFor=\"let item of postReactions | reactionType : filterReactions\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <div class=\"position-relative\">\r\n                            <img style=\"cursor: pointer;\" (click)=\"modalRef.hide()\"\r\n                                [routerLink]=\"['/visit',item?.user?._id]\" class=\"mainIMG\"\r\n                                [src]=\"item?.user?.profilePhoto | gender : item?.user?.gender\" alt=\"\">\r\n                            <img [src]=\"'assets/'+item?.reaction+'.png'\" class=\"reactionImg\" alt=\"\">\r\n                        </div>\r\n                        <h3 (click)=\"modalRef.hide()\" style=\"cursor: pointer;\" [routerLink]=\"['/visit',item?.user?._id]\"\r\n                            class=\"mx-3\">\r\n                            {{item?.user?.firstName | titlecase | slice : 0 : 12}}\r\n                            {{item?.user?.lastName | titlecase | slice : 0 : 12}}\r\n                        </h3>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n\r\n<div \r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\n*ngIf=\"userProfilesService.popUP\" class=\"popupp\">\r\n    <div class=\"imgSection d-flex justify-content-center align-items-center\">\r\n\r\n        <img *ngIf=\"popupPost?.image;else popupLoading\" [src]=\"popupPost?.image\" alt=\"\">\r\n        <ng-template #popupLoading>\r\n            <div class=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </ng-template>\r\n        <div class=\"showComments\r\n        \">\r\n          \r\n            <p (click)=\"showCommentsInMobileScreen(commentsSection)\" class=\"\">\r\n                <i class=\"far fa-comment-alt\"></i> <span class=\"mx-2\">{{'posts.showComments' | translate}}</span>\r\n            </p>\r\n        </div>\r\n        <i (click)=\"closePopup()\" class=\"fas fa-times\"></i>\r\n    </div>\r\n    <div #commentsSection class=\"zIndex commentsSection p-3\">\r\n        <div *ngIf=\"!commentsLoading\" class=\"d-flex align-items-center pt-3 \">\r\n            <img class=\"profilePopup\"\r\n                 style=\"cursor: pointer;\"\r\n                 (click)=\"closePopup()\"\r\n                [src]=\"popupPost?.author?.profilePhoto  | gender : popupPost?.author?.gender \"\r\n                alt=\"\">\r\n            <div class=\"mx-2\">\r\n                <h2 class=\"m-0\"\r\n                style=\"cursor: pointer;\"\r\n                (click)=\"closePopup()\"\r\n                >\r\n                    {{popupPost?.author?.firstName | titlecase | slice : 0 : 12}}\r\n                    {{popupPost?.author?.lastName | titlecase | slice : 0 : 12}}\r\n                </h2>\r\n                <small class=\"text-secondary\">\r\n                    {{popupPost?.updatedAt | date : 'longDate' : undefined : lang}}\r\n                </small>\r\n            </div>\r\n            <i (click)=\"hideCommentsInMobileScreen(commentsSection)\"\r\n                class=\"fas fa-times\"></i>\r\n        </div>\r\n        <div class=\"autoScroll parentOfComments\">\r\n            <p #pp class=\"py-3 mx-2\">{{popupPost?.content | lang : pp}}</p>\r\n            <div class=\"postOptions\">\r\n                <div *ngIf=\"!commentsLoading\" class=\"m-2 d-flex justify-content-between align-items-center\">\r\n                    <div \r\n                     class=\"position-relative   reactionsCount \">                                             \r\n                                <img #firstIMG class=\"first\" [src]=\"popupReactions?.numOfLoves | mostReaction : popupReactions?.numOfSads : popupReactions?.numOfWows : popupReactions?.numOfHahas : popupReactions?.numOfAngrys : popupReactions?.numOfLikes : firstIMG\" alt=\"\">\r\n                                <img #secondIMG  class=\"last\" \r\n                                [src]=\"popupReactions?.numOfLoves | secondReaction: popupReactions?.numOfSads : popupReactions?.numOfWows :popupReactions?.numOfHahas : popupReactions?.numOfAngrys : popupReactions?.numOfLikes  : secondIMG\" alt=\"\"> \r\n                                <span  \r\n                                *ngIf=\"popupReactions?.numOfReactions\">\r\n                                {{popupReactions?.numOfReactions}}</span>   \r\n                                                  \r\n                </div>   \r\n                <p   *ngIf=\"postComments?.length\">\r\n                    {{postComments?.length}}\r\n                    {{(postComments?.length==1 ? \"posts.comment\" : \"posts.comments\") | translate}}\r\n                </p>\r\n            </div>\r\n                <div class=\"parentOfComments mt-2\">\r\n                    <ul class=\"comments list-unstyled my-2 p-0\">\r\n                        <ng-container *ngIf=\"commentsLoading;else commentsConetent\">\r\n                            <li *ngFor=\"let item of swiperLoadingCount\">\r\n                                <div [class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\n                                    class=\"fb-item bg-white postsLoadingg rounded-lg\">\r\n                                    <div\r\n                                        class=\"first-section-wrapper d-flex align-items-center mb-3\">\r\n                                        <div class=\"gravatar \">\r\n                                            <ngx-skeleton-loader appearance=\"circle\"\r\n                                                [theme]=\"{\r\n                                            'width': '32px',\r\n                                            'height': '32px',\r\n                                            'margin':'0'\r\n                                        }\">\r\n                                            </ngx-skeleton-loader>\r\n                                        </div>\r\n                                        <div class=\"gravatar-title mx-3\">\r\n                                            <div>\r\n                                                <ngx-skeleton-loader [theme]=\"{\r\n                                  width: '90%',\r\n                                  'border-radius': '0',\r\n                                  height: '5px',\r\n                                  'margin-bottom': '5px'\r\n                                }\"></ngx-skeleton-loader>\r\n                                            </div>\r\n                                            <div>\r\n                                                <ngx-skeleton-loader\r\n                                                    [theme]=\"{ width: '70%', 'border-radius': '0', height: '5px' }\">\r\n                                                </ngx-skeleton-loader>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ng-container>\r\n                        <ng-template #commentsConetent>\r\n                            <ng-container *ngIf=\"postComments?.length;else noCommentsYet\">\r\n                                <li *ngFor=\"let comment of postComments;let commentIndex = index\"\r\n                                    class=\"d-flex\">\r\n                                    <img \r\n                                        (click)=\"navigate(comment?.user?._id)\"\r\n                                        style=\"cursor: pointer;\"\r\n                                        [src]=\"comment?.user?.profilePhoto | gender :  comment.user?.gender\"\r\n                                        alt=\"\">\r\n                                    <div class=\"mx-2\">\r\n                                        <div class=\"commnetContent\">\r\n                                            <p  \r\n                                            (click)=\"navigate(comment?.user?._id)\"\r\n                                                style=\"cursor: pointer;\"\r\n                                                class=\"font-weight-bold\">\r\n                                                {{comment.user?.firstName | titlecase |\r\n                                                slice : 0 : 12}}\r\n                                                {{comment.user?.lastName | titlecase | slice\r\n                                                : 0 : 12}}\r\n                                            </p>\r\n                                            <p #commentP>{{comment?.comment | lang :\r\n                                                commentP}}</p>\r\n                                        </div>\r\n                                        <div class=\"position-relative\">\r\n                                            <div class=\"timee d-inline-block\">\r\n                                                <small\r\n                                                    class=\"text-secondary \">{{comment?.createdAt\r\n                                                    | date : 'longDate' : undefined : lang}}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n                            </ng-container>\r\n                            <ng-template #noCommentsYet>\r\n                                <li>{{'posts.noComments' | translate}}</li>\r\n                            </ng-template>\r\n                        </ng-template>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<div\r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\nclass=\"container photosSection\">\r\n    \r\n    <div class=\"paddinggx\">\r\n        <div class=\"row bg-white mb-5 mx-md-0 p-3 rounded-lg\">\r\n            <div class=\"col-md-12 mb-3\">\r\n                <h2 class=\"font-weight-bold m-0\">{{'leftSide.photos' | translate}}</h2>\r\n            </div>\r\n            <ng-container *ngIf=\"userProfilesService.skeltonLoadingForPhotos;else content\">\r\n                <div \r\n                *ngFor=\"let item of loadingCount\"\r\n                class=\"col-sm-3 mb-4\">\r\n                    <div\r\n                    [class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\n                    class=\"item bg-white postsLoadingg\">\r\n                        <ngx-skeleton-loader count=\"1\" appearance=\"circle\" [theme]=\"{\r\n                    width: '100%',\r\n                    height: '160px',\r\n                    'border-radius': '10px'\r\n                  }\">\r\n                        </ngx-skeleton-loader>\r\n                    </div>\r\n                </div>\r\n             </ng-container>\r\n             <ng-template #content>\r\n            <ng-container *ngIf=\"userProfilesService.photos.length;else noPhotos\">\r\n                    <div class=\"col-6 col-sm-4 col-md-3 mb-4\" *ngFor=\"let item of userProfilesService.photos\">\r\n                        <div>\r\n                          <img [src]=\"item\" class=\"w-100\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            <ng-template #noPhotos>\r\n                <h2 class=\"text-center mx-auto my-0 pb-4 font-weight-bold text-secondary\">\r\n                    {{'leftSide.noPhotos' | translate}}\r\n                </h2>\r\n            </ng-template>\r\n        </ng-template>\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-photos',\r\n  templateUrl: './photos.component.html',\r\n  styleUrls: ['./photos.component.scss']\r\n})\r\nexport class PhotosComponent implements OnInit {\r\n\r\n  loadingCount:any=[]\r\n  constructor(public userProfilesService:UserProfileService) { this.loadingCount.length=8 }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\nimport { emptyContent } from 'src/app/shared/emptyContentValidator';\r\n\r\n@Component({\r\n  selector: 'app-user-layout',\r\n  templateUrl: './user-layout.component.html',\r\n  styleUrls: ['./user-layout.component.scss']\r\n})\r\nexport class UserLayoutComponent implements OnInit,OnDestroy {\r\n\r\n  coverImgLoding:boolean=false\r\n  profileImgLoding:boolean=false\r\n  modalLoadin:boolean=false\r\n  bioLoading:boolean=false\r\n  modalRef: BsModalRef;\r\n  bioForm:FormGroup\r\n  textAreaLength:any=0\r\n  showRemaining:boolean=false\r\n  profileOnHoverforFollowers:number=-1\r\n  subscriptions :any[] = [];\r\n  translatedSnacBarTextOne:any\r\n  translatedSnacBarTextTwo:any\r\n  @ViewChild('bioo') bioo:ElementRef\r\n  constructor(\r\n    public userProfilesService:UserProfileService,\r\n    private modalService: BsModalService,\r\n    private title:Title,\r\n    private fb:FormBuilder,\r\n    private _snackBar: MatSnackBar,\r\n    private router:Router,\r\n    private rendrer:Renderer2,\r\n    private translate:TranslateService\r\n  ) { \r\n    this.subscriptions.push( this.translate.get('about.bioDeleted').subscribe(res => {\r\n      this.translatedSnacBarTextOne=res\r\n   }))\r\n   this.subscriptions.push(\r\n    this.translate.get('about.deleted').subscribe(res => {\r\n      this.translatedSnacBarTextTwo=res\r\n   }))\r\n   }\r\n  remaining(bioo:any) {\r\n      this.showRemaining=true\r\n      this.textAreaLength = bioo.value.length\r\n  }\r\n  addBio(value:any) {\r\n    this.bioLoading=true\r\n    this.subscriptions.push(\r\n      this.userProfilesService.addPersonalInfo(value).subscribe(\r\n        res => {\r\n          this.bioLoading=false\r\n          this.modalRef.hide()\r\n          this.subscriptions.push(\r\n            this.userProfilesService.getMyProfile().subscribe(\r\n              (res:any) =>{\r\n                this.userProfilesService.userProfile=res?.user\r\n              },\r\n              err => {\r\n              }\r\n              \r\n            )\r\n          )\r\n        },\r\n        err => {\r\n          this.modalRef.hide()\r\n          this.bioLoading=false\r\n        }\r\n      )\r\n    )\r\n  }\r\n  get lang() {return localStorage.getItem(\"currenLanguage\") || \"en\"}\r\n  ngOnInit(): void {\r\n    window.scroll(0,0)\r\n    this.subscriptions.push(\r\n      this.userProfilesService.getMyProfile().subscribe(\r\n        (res:any) =>{\r\n          this.userProfilesService.userProfile=res?.user\r\n          this.userProfilesService.userPosts=res?.posts\r\n          this.userProfilesService.skeltonLoading=false\r\n          this.title.setTitle(`${this.userProfilesService.userProfile?.firstName.slice(0,1).toUpperCase()}${this.userProfilesService.userProfile?.firstName.slice(1)} \r\n          ${this.userProfilesService.userProfile?.lastName.slice(0,1).toUpperCase()}${this.userProfilesService.userProfile?.lastName.slice(1)}`)\r\n          this.bioForm = this.fb.group({\r\n            bio:[`${this.userProfilesService?.userProfile?.bio || ''}`,[Validators.required,emptyContent]]\r\n          })\r\n        },\r\n        err => {\r\n          this.userProfilesService.skeltonLoading=false\r\n        }\r\n        \r\n      )\r\n    )\r\n   this.subscriptions.push(\r\n    this.userProfilesService.getFollowers().subscribe(\r\n      (res:any)=> {\r\n        this.userProfilesService.followers=res?.followers\r\n        this.userProfilesService.skeltonLoadingFollowers=false\r\n      }, err => {\r\n      }\r\n    )\r\n   )\r\n  this.subscriptions.push(\r\n    this.userProfilesService.getFollowing().subscribe(\r\n      (res:any) => {\r\n       this.userProfilesService.skeltonLoadingForFollowing=false\r\n       this.userProfilesService.following=res?.followings?.following\r\n      },\r\n    )\r\n  )\r\n this.subscriptions.push(\r\n  this.userProfilesService.getMyPhotos().subscribe(\r\n    (res:any) => {\r\n     this.userProfilesService.skeltonLoadingForPhotos=false\r\n     this.userProfilesService.photos=res\r\n    },\r\n    err => {}\r\n  )\r\n )\r\n  }\r\n  selectCoverImg(event:any) {\r\n    this.coverImgLoding=true\r\n    let formdata = new FormData()\r\n    formdata.append('coverImage',event.target.files[0])\r\n      this.subscriptions.push(\r\n        this.userProfilesService.uploadCoverImg(formdata).subscribe(\r\n          (res:any) => {\r\n            this.userProfilesService.userProfile=res\r\n            this.coverImgLoding=false\r\n          } ,\r\n          err => {\r\n            this.coverImgLoding=false\r\n          }\r\n        )\r\n      )\r\n  }\r\n  deleteCoverImg() {\r\n    this.modalLoadin=true\r\n   this.subscriptions.push(\r\n    this.userProfilesService.deletCoverImg().subscribe(\r\n      (res:any) => {\r\n        this.modalLoadin=false\r\n        this.modalRef.hide()\r\n        this.userProfilesService.userProfile = res\r\n      },\r\n      err =>  {\r\n        this.modalRef.hide()\r\n        this.modalLoadin=false\r\n      }\r\n    )\r\n   )\r\n  }\r\n  \r\n  selectProfileImg(event:any) {\r\n    this.profileImgLoding=true\r\n    let formdata = new FormData()\r\n    formdata.append('profilePhoto',event.target.files[0])\r\n     this.subscriptions.push(\r\n      this.userProfilesService.uploadProfileImg(formdata).subscribe(\r\n        (res:any) => {\r\n          this.userProfilesService.userProfile=res\r\n          this.profileImgLoding=false\r\n        } ,\r\n        err => {\r\n          this.profileImgLoding=false\r\n        }\r\n      )\r\n     )\r\n  }\r\n  deleteProfileImg() {\r\n    this.modalLoadin=true\r\n     this.subscriptions.push(\r\n      this.userProfilesService.deletProfileImg().subscribe(\r\n        (res:any) => {\r\n          this.modalLoadin=false\r\n          this.modalRef.hide()\r\n          this.userProfilesService.userProfile = res\r\n        },\r\n        err =>  {\r\n          this.modalRef.hide()\r\n          this.modalLoadin=false;\r\n        }\r\n      )\r\n     )\r\n  }\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n  deleteBio() {\r\n      this.subscriptions.push(\r\n        this.userProfilesService.deleteInfo({bio:''}).subscribe(\r\n          res => {\r\n           this.bioForm.reset()\r\n           this.showRemaining=false\r\n           this.subscriptions.push(\r\n            this.userProfilesService.getMyProfile().subscribe(\r\n              (res:any) =>{\r\n                this.userProfilesService.userProfile=res?.user\r\n                this.openSnackBar(this.translatedSnacBarTextOne,this.translatedSnacBarTextTwo)\r\n              },\r\n              err => {\r\n                this.bioLoading=false\r\n              }\r\n              \r\n            )\r\n           )\r\n          },\r\n          err => {\r\n           this.bioLoading=false\r\n          }\r\n        )\r\n      )\r\n  }\r\n  openSnackBar(one:any,two:any) {\r\n    this._snackBar.open( one,  two, {\r\n      horizontalPosition: 'left',\r\n      verticalPosition: 'bottom',\r\n      duration: 3000\r\n    });\r\n  }\r\n  // start navigate to profilePhotos component in case the user have a profile picture\r\n  profilePhotoss(img:any) {\r\n    if( this.userProfilesService.userProfile?.profilePhoto) {\r\n   this.rendrer.setStyle(img,\"borderWidth\",\"6px\")\r\n   setTimeout(() => {\r\n        this.rendrer.setStyle(img,\"borderWidth\",\"3px\")\r\n   }, 100);\r\n   setTimeout(() => {\r\n      this.router.navigate(['/myProfile/profilePhotos'])\r\n}, 140);\r\n}\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => {\r\n      sub.unsubscribe()\r\n    })\r\n }\r\n}\r\n","<div class=\"bx\" [class.darkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n    <div class=\"container\">\r\n        <div class=\"profile-upper\">\r\n            <!-- start cover img section -->\r\n            <div \r\n            class=\"mx-lg-5  coverImg d-flex justify-content-center align-items-center position-relative\">\r\n               <!-- start animation loading for cover img -->\r\n            <div class=\"ovr\" *ngIf='coverImgLoding'>\r\n                    <div class=\"lds-ellipsis\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n                          <!-- start animation loading for cover img -->\r\n                <img *ngIf=\"userProfilesService.userProfile?.coverImage\" class=\"w-100 h-100\" [src]=\"userProfilesService.userProfile?.coverImage\" alt=\"\">\r\n                <div \r\n                class=\"addCVR\">\r\n                    <div  mat-button [matMenuTriggerFor]=\"cvrImg\">\r\n                         <i class=\"fas fa-camera\"></i>\r\n                    <span \r\n                    [ngClass]=\"{\r\n                        'mr-2':lang=='ar',\r\n                        'ml-2':lang!='ar'\r\n                    }\"\r\n                    class=\"d-none d-lg-inline-block\"\r\n                    style=\"cursor: pointer;\">\r\n                    {{(userProfilesService.userProfile?.coverImage ? 'layOut.editCover' : 'layOut.addCover') | translate}}</span>\r\n                    </div>\r\n                    <input accept=\"image/*\" *ngIf=\"!userProfilesService.userProfile?.coverImage\" (change)='selectCoverImg($event)' type=\"file\">\r\n                    <div>\r\n                        <mat-menu #cvrImg=\"matMenu\">\r\n                       <div\r\n                       \r\n                       [class.darkModeMenu]=\"userProfilesService.userProfile?.darkMode\"\r\n                       >\r\n                        <button \r\n                        [ngStyle]='{\r\n                            textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                            direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                        }'\r\n                        mat-menu-item>                         \r\n                            <i class=\"far fa-images\"></i> <span class=\"mx-2\">{{'layOut.uploadPhoto' | translate}} </span>\r\n                        <input accept=\"image/*\" (change)='selectCoverImg($event)' type=\"file\">                    \r\n                    </button>\r\n                    <button\r\n                    [ngStyle]='{\r\n                        textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                        direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                    }'\r\n                    (click)=\"openModal(deleteCVRImg)\"\r\n                    mat-menu-item>\r\n                        <i class=\"far fa-trash-alt\"></i> <span class=\"mx-2\">{{'about.remove' | translate}}</span>\r\n                    </button>\r\n                       </div>\r\n                    \r\n                         </mat-menu>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n            <!-- end cover img section -->\r\n            <!-- start profile img section -->\r\n            <div class=\"profileImg paddinggx\">\r\n                <div class=\"flex-column flex-lg-row align-items-center d-flex\">\r\n               <!-- start animation loading for profile img -->\r\n                    <div class=\"imgg position-relative\">\r\n                        <div class=\"ovr\" *ngIf=\"profileImgLoding\">\r\n                            <div class=\"lds-ellipsis\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                         <!-- end animation loading for profile img -->\r\n                        <img \r\n                        #profileImG\r\n                        (click)=\"profilePhotoss(profileImG)\"\r\n                        style=\"cursor: pointer;\"\r\n                        [src]=\"userProfilesService.userProfile?.profilePhoto | gender :  userProfilesService.userProfile?.gender\" alt=\"\" \r\n                                     >\r\n                        <div \r\n                        class=\"addprofileImg\">\r\n                           <div  mat-button [matMenuTriggerFor]=\"profileImg\">\r\n                            <i class=\"fas fa-camera\"></i>\r\n                            \r\n                           </div>\r\n                           <input accept=\"image/*\" *ngIf=\"!userProfilesService.userProfile?.profilePhoto\" (change)='selectProfileImg($event)' type=\"file\">\r\n                        </div>\r\n                        <!-- start profile img menu -->\r\n                        <mat-menu #profileImg=\"matMenu\">\r\n                            <div\r\n                           \r\n                            [class.darkModeMenu]=\"userProfilesService.userProfile?.darkMode\"\r\n                            >\r\n\r\n                                <button mat-menu-item\r\n                                [ngStyle]='{\r\n                                    textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                    direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                                }'\r\n                                >\r\n                                    <i class=\"far fa-images\"></i> <span class=\"mx-1\">{{'layOut.updateProfilePhoto' | translate}}</span>\r\n                                    <input accept=\"image/*\" (change)='selectProfileImg($event)' type=\"file\">\r\n                                </button>\r\n                                <button \r\n                                [ngStyle]='{\r\n                                    textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                    direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                                }'\r\n                                routerLink=\"/myProfile/profilePhotos\"\r\n                                mat-menu-item\r\n                                 *ngIf=\"userProfilesService.userProfile?.profilePhoto\">\r\n                                    <i class=\"bi bi-person-square\"></i>  <span class=\"mx-1\">{{'layOut.viewProfilePhoto' | translate}}</span>\r\n                                </button>\r\n                                <button \r\n                                [ngStyle]='{\r\n                                    textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                    direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                                }'\r\n                                (click)=\"openModal(deleteProfileRImg)\"\r\n                                mat-menu-item>\r\n                                    <i class=\"far fa-trash-alt\"></i> \r\n                                    <span class=\"mx-1\">{{'about.remove' | translate}}</span>\r\n                                </button>\r\n                            </div>\r\n                        \r\n                          </mat-menu>\r\n                           <!-- start profile img menu -->\r\n                    </div>\r\n                   \r\n                 <div \r\n                 [ngClass]='{\r\n                      \"text-md-left\":lang!=\"ar\",\r\n                      \"text-md-right\":lang==\"ar\",\r\n                      \"ml-md-5\":lang!=\"ar\",\r\n                      \"mr-md-5\":lang==\"ar\"\r\n                 }'\r\n                 class=\"w-100 text-center flex-column flex-md-row d-flex justify-content-between align-items-center position-relative\">\r\n                   <div>\r\n                    <h1 \r\n                    class=\"  mt-3 mb-1 font-weight-bold\">\r\n                    {{userProfilesService.userProfile?.firstName | titlecase | slice : 0 : 12}}\r\n                        {{userProfilesService.userProfile?.lastName | titlecase | slice : 0 : 12}}</h1>\r\n                        <h3 \r\n                        mat-button [matMenuTriggerFor]=\"bio\"\r\n                        *ngIf=\"userProfilesService.userProfile?.bio;else addBioo\"\r\n                        class=\"d-md-none\">\r\n                        {{userProfilesService.userProfile?.bio | titlecase}}\r\n                    </h3>\r\n                    <p \r\n                    routerLink=\"/myProfile/layout/friends\"\r\n                    *ngIf=\"userProfilesService?.followers?.length\"\r\n                    class=\"d-none d-md-block font-weight-bold mb-1 followersLength\">\r\n                    {{userProfilesService?.followers?.length}} \r\n                    {{(userProfilesService?.followers?.length==1 ? \"leftSide.follower\" : \"leftSide.followers\") | translate}}\r\n                </p>\r\n                    <ul \r\n                    *ngIf=\"userProfilesService?.followers?.length\"\r\n                    (mouseleave)=\"profileOnHoverforFollowers=-1\"\r\n                    class=\"mb-5 d-none d-md-flex position-relative followersIMGS list-unstyled\">\r\n                         <li *ngFor=\"let follow of userProfilesService?.followers | slice : 0 : 6;let i = index\">\r\n                             <img [src]=\"follow?.profilePhoto | gender : follow?.gender\" \r\n                             (mouseover)=\"profileOnHoverforFollowers=i\"\r\n                             [routerLink]=\"['/visit',follow?._id]\"\r\n                             alt=\"\">\r\n                             <div *ngIf=\"profileOnHoverforFollowers==i\" class=\" profileOnHover bg-white rounded-lg p-3\">\r\n                                <div class=\"d-flex align-items-center\">\r\n                                   <div>\r\n                                    <div class=\"overIMG\"  [routerLink]=\"['/visit',follow?._id]\">\r\n                                        <img \r\n                                       \r\n                                        class=\"profile\" [src]=\"follow?.profilePhoto | gender : follow?.gender\" alt=\"\">\r\n                                    </div>\r\n                                   </div>\r\n                                    <div class=\"mx-3\">\r\n                                        <h2 \r\n                                        [routerLink]=\"['/visit',follow?._id]\"\r\n                                        class=\"mb-2 \">{{follow?.firstName | titlecase | slice : 0 : 12}}\r\n                                            {{follow?.lastName | titlecase | slice : 0 : 12}}</h2>\r\n                                        <p><i class=\"far fa-calendar-alt\"></i> <span class=\"mx-1\">{{'posts.bornOn' | translate}}</span>\r\n                                            {{follow?.birthDate |date : 'longDate' : undefined : lang}}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         </li>\r\n                    </ul>\r\n                   </div>\r\n                   <div>\r\n                    <button \r\n                     routerLink='/myProfile/layout/about'\r\n                        class=\"d-none d-md-block mt-3 btn btn-primary\" \r\n                        style=\"font-weight: 500;\">\r\n                        <i class=\"fas fa-pen mx-2\"></i>  <span class=\"mx-2\">{{'layOut.editProfile' | translate}}</span>\r\n                    </button>\r\n                </div>\r\n                 </div>\r\n                    <ng-template #addBioo>\r\n                        <h3 class=\"d-md-none text-primary\"  (click)=\"textAreaLength=0;bioForm.reset();openModal(editBio)\">{{'layOut.addBio' | translate}}</h3>\r\n                    </ng-template>\r\n                    \r\n                    <mat-menu #bio=\"matMenu\">\r\n                        <div  [class.darkModeMenu]=\"userProfilesService.userProfile?.darkMode\">\r\n                            <button \r\n                            [ngStyle]='{\r\n                                textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                            }'\r\n                            (click)=\"openModal(editBio)\"\r\n                            mat-menu-item>\r\n                                <i class=\"fas fa-pen\"></i> <span class=\"mx-2\">{{'layOut.editBio' | translate }}</span>\r\n                            </button>\r\n                            <button \r\n                            [ngStyle]='{\r\n                                textAlign:lang==\"ar\" ? \"right\" : \"left\",\r\n                                direction:lang==\"ar\" ? \"rtl\" : \"ltr\"\r\n                            }'\r\n                            (click)=\"deleteBio()\"\r\n                            mat-menu-item>\r\n                                <i class=\"far fa-trash-alt\"></i> <span class=\"mx-2\">{{'about.remove' | translate }}</span>\r\n                            </button>\r\n                        </div>\r\n                    \r\n                      </mat-menu>\r\n                </div>\r\n                <hr class=\"mb-0\">\r\n                <!-- start main nav  -->\r\n                    <ul  class=\"list-unstyled d-flex p-0 mb-0 pageItems\" \r\n                    [class.tr]='lang==\"tr\"'\r\n                    >\r\n                        <li routerLinkActive=\"active\" routerLink=\"../layout/posts\" ><span>{{'layOut.posts' | translate}}</span></li>\r\n                        <li routerLinkActive=\"active\" routerLink=\"../layout/about\"><span>{{'layOut.about' | translate}}</span></li>\r\n                        <li routerLinkActive=\"active\" routerLink=\"../layout/friends\"><span>{{'layOut.friends' | translate}}</span></li>\r\n                        <li routerLinkActive=\"active\" routerLink=\"../layout/photos\"><span>{{'layOut.photos' | translate}}</span></li>\r\n                    </ul>\r\n              <!-- end main nav  -->\r\n            </div>\r\n            <!-- end profile img section -->\r\n    \r\n        </div>\r\n    </div>\r\n</div>\r\n<div \r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\nclass=\" profile-down pt-4\" style=\"padding-bottom: 150px;\">\r\n<router-outlet></router-outlet>\r\n</div>\r\n<ng-template #deleteCVRImg>\r\n  \r\n    <div  [class.popupDarkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n        <div class=\"modal-header\">\r\n            <h2 class=\"modal-title pull-left\">{{'layOut.RCF' | translate}}</h2>\r\n            <button \r\n            [style.margin]=\"lang=='ar' ? '-1rem auto -1rem -1rem' : 'margin: -1rem auto -1rem -1rem'\"\r\n            type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n              <i class=\"fas fa-times\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n              <p class=\"mb-1\">{{'layOut.areYouSureCVR' | translate}}</p>\r\n              <div class=\"d-flex justify-content-end\">\r\n                  <button class=\"btn btn-secondary\"\r\n                   (click)=\"modalRef.hide()\">{{'about.cancel' | translate}}</button>\r\n                  <button  #btn class=\"btn btn-primary mx-2\" \r\n                  (click)=\"deleteCoverImg()\">{{'slider.confirm' | translate}}</button>\r\n              </div>\r\n              <div *ngIf=\"modalLoadin\" style=\"height:50px\" class=\"text-center mb-3\">\r\n                  <div class=\"lds-facebook\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template #deleteProfileRImg>\r\n   <div\r\n   [class.popupDarkMode]=\"userProfilesService.userProfile?.darkMode\"\r\n   >\r\n    <div class=\"modal-header\">\r\n        <h2 class=\"modal-title pull-left\">{{'slider.removeProfilePhoto' | translate}}</h2>\r\n        <button \r\n        [style.margin]=\"lang=='ar' ? '-1rem auto -1rem -1rem' : 'margin: -1rem auto -1rem -1rem'\"\r\n        type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n          <p class=\"mb-1\">{{'layOut.areYouSurePrf' | translate}}</p>\r\n          <div class=\"d-flex justify-content-end\">\r\n              <button class=\"btn btn-secondary\"\r\n               (click)=\"modalRef.hide()\">{{'about.cancel' | translate}}</button>\r\n              <button  #btn class=\"btn btn-primary mx-2\" \r\n              (click)=\"deleteProfileImg()\">{{'slider.confirm' | translate}}</button>\r\n          </div>\r\n          <div *ngIf=\"modalLoadin\" style=\"height:50px\" class=\"text-center mb-3\">\r\n              <div class=\"lds-facebook\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n              </div>\r\n        </div>\r\n      </div>\r\n   </div>\r\n    \r\n  </ng-template>\r\n  <ng-template #editBio>\r\n\r\n    <div  [class.popupDarkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n        <div class=\"modal-header\">\r\n            <h2 class=\"modal-title pull-left\">{{'layOut.editBio' | translate}}</h2>\r\n            <button\r\n            [style.margin]=\"lang=='ar' ? '-1rem auto -1rem -1rem' : 'margin: -1rem auto -1rem -1rem'\"\r\n            type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n              <i class=\"fas fa-times\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n              <div class=\"position-relative\">\r\n              \r\n                  <form \r\n                  [formGroup]=\"bioForm\"\r\n                  (ngSubmit)=\"addBio(bioForm.value)\"\r\n                  >\r\n                      <textarea \r\n                      formControlName='bio'\r\n                      #bioo placeholder=\"{{'layOut.describe' | translate}}\" maxLength=\"101\" (keyup)=\"remaining(bioo)\" class=\"text-center p-2 bioo\"></textarea>\r\n                      <span *ngIf=\"showRemaining\" class=\"d-block my-1 text-secondary text-right\">{{101 - textAreaLength}}  {{'layOut.remaining' | translate}}</span>\r\n                      <div class=\"d-flex\">\r\n                          <button  (click)=\"modalRef.hide()\" type=\"button\" class=\" btn-secondary btn\">\r\n                              {{'posts.cancel' | translate}}</button>\r\n                          <button [disabled]=\"bioForm.invalid\" type=\"submit\" class=\"mx-2 btn btn-primary\">{{'about.save' | translate}}</button>\r\n                      </div>\r\n                  </form>\r\n              </div>\r\n              <div *ngIf=\"bioLoading\" style=\"height:50px\" class=\"text-center mb-3\">\r\n                  <div class=\"lds-facebook\">\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n  </ng-template>","<div class=\"profilePhotos position-relative overflow-hidden\">\r\n    <i routerLink=\"/myProfile/layout\" class=\"fas fa-times\"></i>\r\n    <i (click)=\"reload()\" class=\"fas fa-redo-alt\"></i>\r\n  <div class=\"profilePhotosWidth mx-auto\">\r\n    <carousel [interval]=\"0\">\r\n        <slide *ngIf=\"userProfileService?.userProfile?.profilePhoto\">\r\n        <div style=\"height:100vh\" class=\"position-relative d-flex justify-content-center align-items-center\">\r\n            <img class=\"vhIMG\" [src]=\"userProfileService?.userProfile?.profilePhoto\" alt=\"first slide\"\r\n             style=\"display: block\">\r\n            <i \r\n            (click)=\"openModal(deleteProfileRImg)\"\r\n            class=\"far fa-trash-alt\"></i>\r\n        </div>\r\n        </slide>\r\n     <ng-container *ngIf=\"userProfileService?.userProfile?.previousProfilePhotos?.length\">\r\n        <slide *ngFor=\"let item of userProfileService?.userProfile?.previousProfilePhotos\">\r\n             <div style=\"height:100vh\" class=\"position-relative d-flex justify-content-center align-items-center\">\r\n                <img class=\"vhIMG\" [src]=\"item?.profilePhoto\" alt=\"second slide\" style=\"display: block\">\r\n                <i (click)=\"oldImgId=item?._id;openModal(deleteOldProfileRImg)\" class=\"far fa-trash-alt\"></i>\r\n             </div>\r\n          </slide>\r\n     </ng-container>\r\n     \r\n      </carousel>\r\n  </div>\r\n</div>\r\n<ng-template #deleteProfileRImg>\r\n    <div\r\n    [class.popupDarkMode]=\"userProfileService.userProfile?.darkMode\"\r\n    >\r\n     <div class=\"modal-header\">\r\n         <h2 class=\"modal-title pull-left\">{{'slider.removeProfilePhoto' | translate}}</h2>\r\n         <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n           <i class=\"fas fa-times\"></i>\r\n         </button>\r\n       </div>\r\n       <div class=\"modal-body\">\r\n           <p class=\"mb-2\">{{'slider.areYouSure' | translate}}</p>\r\n           <div class=\"d-flex justify-content-end\">\r\n               <button class=\"btn btn-secondary\"\r\n                (click)=\"modalRef.hide()\">{{'slider.cancel' | translate}}</button>\r\n               <button  #btn class=\"btn btn-primary mx-2\" \r\n               (click)=\"deleteProfileImg()\">{{'slider.confirm' | translate}}</button>\r\n           </div>\r\n           <div *ngIf=\"loading\" style=\"height:50px\" class=\"text-center mb-3\">\r\n               <div class=\"lds-facebook\">\r\n                     <div></div>\r\n                     <div></div>\r\n                     <div></div>\r\n               </div>\r\n         </div>\r\n       </div>\r\n    </div>\r\n     \r\n   </ng-template>\r\n   <ng-template #deleteOldProfileRImg>\r\n    <div\r\n    [class.popupDarkMode]=\"userProfileService.userProfile?.darkMode\"\r\n    >\r\n     <div class=\"modal-header\">\r\n         <h2 class=\"modal-title pull-left\">{{'slider.removeProfilePhoto' | translate}}</h2>\r\n         <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n           <i class=\"fas fa-times\"></i>\r\n         </button>\r\n       </div>\r\n       <div class=\"modal-body\">\r\n           <p class=\"mb-2\">{{'slider.areYouSure' | translate}}</p>\r\n           <div class=\"d-flex justify-content-end\">\r\n               <button class=\"btn btn-secondary\"\r\n                (click)=\"modalRef.hide()\">{{'slider.cancel' | translate}}</button>\r\n               <button  #btn class=\"btn btn-primary mx-2\" \r\n               (click)=\"deleteOldProfileImg(oldImgId)\">{{'slider.confirm' | translate}}</button>\r\n           </div>\r\n           <div *ngIf=\"loading\" style=\"height:50px\" class=\"text-center mb-3\">\r\n               <div class=\"lds-facebook\">\r\n                     <div></div>\r\n                     <div></div>\r\n                     <div></div>\r\n               </div>\r\n         </div>\r\n       </div>\r\n    </div>\r\n     \r\n   </ng-template>\r\n","import { Component, HostListener, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-photos',\r\n  templateUrl: './profile-photos.component.html',\r\n  styleUrls: ['./profile-photos.component.scss']\r\n})\r\nexport class ProfilePhotosComponent implements OnInit,OnDestroy {\r\nloading:boolean=false\r\nmodalRef: BsModalRef;\r\noldImgId:any\r\nsubscriptions :any[] = [];\r\n  constructor(public userProfileService:UserProfileService,\r\n    private router:Router,\r\n    private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    window.scroll(0,0)\r\n  }\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n  deleteProfileImg() {\r\n    this.loading=true\r\n     this.subscriptions.push(\r\n      this.userProfileService.deletProfileImg().subscribe(\r\n        (res:any) => {\r\n          this.userProfileService.userProfile.profilePhoto = null\r\n          this.loading=false\r\n          this.modalRef.hide()\r\n          this.router.navigate([\"/myProfile/layout/posts\"])\r\n        },\r\n        err =>  {\r\n        }\r\n      )\r\n     )\r\n  }\r\n  deleteOldProfileImg(id:any) {\r\n    this.loading=true\r\n   this.subscriptions.push(\r\n    this.userProfileService.deletOldProfileImg(id).subscribe(\r\n      (res:any) => {\r\n        this.loading=false\r\n        this.userProfileService.userProfile = res\r\n        this.modalRef.hide()\r\n        this.router.navigate([\"/myProfile/layout/posts\"])\r\n       \r\n      },\r\n      err =>  {\r\n      }\r\n    )\r\n   )\r\n  }\r\n  reload() {location.reload()}\r\n  @HostListener('document:keydown.escape', ['$event']) onKeydownHandler(event: KeyboardEvent) {\r\n     this.router.navigate([\"/myProfile\"])\r\n  }\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => {\r\n      sub.unsubscribe()\r\n    })\r\n }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FriendsComponent } from './friends/friends.component';\r\nimport { PhotosComponent } from './photos/photos.component';\r\nimport { ProfilePhotosComponent } from './profile-photos/profile-photos.component';\r\nimport { UserAboutComponent } from './user-about/user-about.component';\r\nimport { UserLayoutComponent } from './user-layout/user-layout.component';\r\nimport { UserprofileComponent } from './userprofile/userprofile.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'profilePhotos',\r\n    component:ProfilePhotosComponent\r\n  },\r\n  {\r\n    path:'',\r\n    redirectTo:'layout/posts',\r\n    pathMatch:'full'\r\n  },\r\n  {\r\n    path:'layout',\r\n    redirectTo:'layout/posts',\r\n    pathMatch:'full'\r\n  },\r\n  {\r\n  path:'layout',\r\n  component:UserLayoutComponent,\r\n  children:[\r\n    {path:'posts',component:UserprofileComponent},\r\n    {path:'about',component:UserAboutComponent},\r\n    {path:'friends',component:FriendsComponent},\r\n    {path:'photos',component:PhotosComponent}\r\n  ]\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserProfileRoutingModule { }\r\n","import { Component, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\nimport { emptyContent } from 'src/app/shared/emptyContentValidator';\r\n\r\n@Component({\r\n  selector: 'app-add-post',\r\n  templateUrl: './add-post.component.html',\r\n  styleUrls: ['./add-post.component.scss']\r\n})\r\nexport class AddPostComponent implements OnInit,OnDestroy {\r\n  modalRef: BsModalRef\r\n  imgUrl: any\r\n  postImage: any\r\n  postForm: FormGroup\r\n  postLoading: boolean = false\r\n  subscriptions:any[]=[]\r\n  constructor(public userProfilesService:UserProfileService,\r\n    public modalService: BsModalService,\r\n    private fb:FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  openModal(template: TemplateRef<any>) {\r\n    this.imgUrl = null\r\n    this.postImage = null\r\n    this.modalRef = this.modalService.show(template);\r\n    this.postForm = this.fb.group({\r\n      content: [``, [Validators.required, emptyContent]]\r\n    })\r\n  }\r\n  scrollTop() { window.scroll(0, 0) }\r\n  makeApost(value: any) {\r\n\r\n    this.postLoading = true\r\n    let postFormData = new FormData\r\n    postFormData.append('content', value.content)\r\n    if (this.postImage) {\r\n      postFormData.append('image', this.postImage)\r\n    }\r\n    this.subscriptions.push(\r\n      this.userProfilesService.makeApost(postFormData).subscribe(\r\n        res => {\r\n          this.postImage = ''\r\n          this.modalRef.hide()\r\n          this.postLoading = false\r\n          this.getPostsAfterEdit()\r\n          this.getPhotosAfterAddPost()\r\n        }, err => {\r\n          this.postImage = ''\r\n          this.modalRef.hide()\r\n          this.postLoading = false\r\n        }\r\n      )\r\n    )\r\n  }\r\n  getPostsAfterEdit() {\r\n    this.subscriptions.push(\r\n      this.userProfilesService.getMyProfile().subscribe(\r\n        (res:any) => {\r\n          this.userProfilesService.userPosts = res?.posts\r\n        },\r\n        err => {\r\n        }\r\n\r\n      )\r\n    )\r\n  }\r\n  getPhotosAfterAddPost() {\r\n    this.subscriptions.push(\r\n      this.userProfilesService.getMyPhotos().subscribe(\r\n        (res: any) => {\r\n          this.userProfilesService.skeltonLoadingForPhotos = false\r\n          this.userProfilesService.photos = res\r\n        },\r\n        err => { }\r\n      )\r\n    )\r\n  }\r\n\r\n    // start clear the input file if user click cancel\r\n    deletePostImg(input: any) {\r\n      input.value = ''\r\n      this.imgUrl = null\r\n      this.postImage = null\r\n    }\r\n    // end clear the input file if user click cancel\r\n      // start make img appear once user chose it\r\n  selectPostImg(event: any) {\r\n    this.postImage = event.target.files[0]\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imgUrl = reader.result;\r\n    };\r\n\r\n    if (event.target.files[0]) {\r\n      reader.readAsDataURL(this.postImage);\r\n    } else {\r\n      this.imgUrl = null\r\n      this.postImage = null\r\n    }\r\n  }\r\n  // end make img appear once user chose it\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => {\r\n      sub.unsubscribe()\r\n    })\r\n  }\r\n}\r\n","<div class=\" add-post bg-white p-3 mb-3 rounded-lg\" \r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n    <div class=\"d-flex align-items-center \">\r\n        <img (click)='scrollTop()' class=\"smllProfileImg\"\r\n            [src]=\"userProfilesService.userProfile?.profilePhoto | gender : userProfilesService.userProfile?.gender \"\r\n            alt=\"\">\r\n        <p class=\"mb-0 yrMind w-100 px-3 py-2\" (click)=\"openModal(template)\">\r\n            {{'addPost.yourMind' | translate}}  {{'addPost.mark' | translate}}\r\n        </p>\r\n    </div>\r\n    <hr>\r\n    <div class=\"d-flex justify-content-between align-items-center text-secondary font-weight-bold\">\r\n        {{'addPost.toYourPost' | translate}}\r\n        <div class=\"d-flex align-items-center  photoIcon p-2\" (click)=\"openModal(template)\"\r\n            style=\"cursor: pointer;\">\r\n            <span class=\"iconn\"></span>   <span class=\"mx-2\">{{'addPost.photo' | translate}}</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #template>\r\n    <div *ngIf=\"postLoading\" class=\"postLoading d-flex justify-content-center align-items-center\">\r\n        <div class=\"text-center\">\r\n            <p [class.darkMode]=\"userProfilesService.userProfile?.darkMode\" class=\"font-weight-bold text-white\">\r\n                {{'addPost.posting' | translate}}    \r\n            </p>\r\n            <div class=\"lds-ellipsis\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [class.popupDarkMode]=\"userProfilesService.userProfile?.darkMode\">\r\n        <div class=\"modal-header\">\r\n\r\n            <h2 class=\"modal-title pull-left text-center w-100\">{{'addPost.createPost' | translate}}</h2>\r\n\r\n            <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n                <i class=\"fas fa-times\"></i>\r\n            </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <div class=\"d-flex align-items-center mb-2\">\r\n                <img class=\"smllProfileImg\"\r\n                    [src]=\"userProfilesService.userProfile?.profilePhoto | gender : userProfilesService.userProfile?.gender\"\r\n                    alt=\"\">\r\n                <h2 class=\"mx-3\">{{userProfilesService.userProfile?.firstName | titlecase | slice : 0 : 12}}\r\n                    {{userProfilesService.userProfile?.lastName | titlecase | slice : 0 : 12}}</h2>\r\n            </div>\r\n            <form [formGroup]=\"postForm\" (ngSubmit)='makeApost(postForm.value)'>\r\n\r\n                <textarea class=\"p-3 rounded-lg\" [attr.dir]=\"'auto'\" formControlName='content'\r\n                    placeholder=\"{{'addPost.yourMind' | translate}}\"></textarea>\r\n\r\n                <div class=\"parentOfimg position-relative mb-2\" *ngIf=\"imgUrl\">\r\n                    <i class=\"fas fa-times\" (click)=\"deletePostImg(input)\"></i>\r\n                    <img [src]=\"imgUrl\" class=\"w-100\" alt=\"\">\r\n                </div>\r\n                <div\r\n                    class=\" toYourPost d-flex justify-content-between align-items-center text-secondary font-weight-bold\">\r\n                    {{'addPost.toYourPost' | translate}}\r\n                    <div class=\"position-relative d-flex align-items-center  photoIcon p-2\">\r\n                        <span class=\"iconn\"></span>\r\n                         <span class=\"mx-2\">  {{'addPost.photo' | translate}}</span>\r\n                        <input accept=\"image/*\" #input (change)=\"selectPostImg($event)\" type=\"file\">\r\n                    </div>\r\n                </div>\r\n                <button [disabled]='postForm.invalid' type=\"submit\" class=\"btn btn-primary w-100 mt-3 post\">\r\n                    {{'addPost.post' | translate}}</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</ng-template>","\r\n<div \r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\nclass=\"darkModeClass\"\r\n>\r\n<div class=\" photos mb-3 bg-white p-3 rounded-lg\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <h2 routerLink=\"../friends\" class=\"font-weight-bold main\">{{'leftSide.following' | translate}}</h2>\r\n        <a routerLink=\"../friends\">{{'leftSide.seeAllFollowing' | translate}}</a>\r\n    </div>\r\n    <p *ngIf=\"userProfilesService.following?.length\" class=\"text-secondary mb-3\">\r\n        {{userProfilesService?.following?.length}} {{'leftSide.following' | translate}}</p>\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let item of userProfilesService.following | slice : 0 : 6;let i =index\" \r\n        class=\"col-4 col-md-4 pb-3\"\r\n            (mouseover)=\"profileOnHoverforFollowing=i\" (mouseleave)='profileOnHoverforFollowing=-1'>\r\n            <div style=\"cursor: pointer;\">\r\n                <div class=\"parentOfFollowing\" [routerLink]='[\"/visit\",item._id]'>\r\n                    <img class=\"followImg\" [src]=\"item?.profilePhoto | gender : item?.gender\" alt=\"\">\r\n                </div>\r\n                <p \r\n                [routerLink]='[\"/visit\",item._id]' \r\n                class=\"font-weight-bold d-inline namee\"\r\n                 #elementt>\r\n                    {{item?.firstName | titlecase | slice : 0 : 12 | lang : elementt}} {{item?.lastName |\r\n                    titlecase | slice : 0 : 12}}\r\n                </p>\r\n            </div>\r\n            <div *ngIf=\"profileOnHoverforFollowing==i\" class=\" profileOnHover bg-white rounded-lg p-3\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <div>\r\n                        <div class=\"overIMG\" [routerLink]='[\"/visit\",item._id]'>\r\n                            <img class=\"profile\" [src]=\"item?.profilePhoto | gender : item?.gender\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mx-3\">\r\n                        <h2 [routerLink]='[\"/visit\",item?._id]' class=\"mb-2 \">\r\n                            {{item?.firstName | titlecase | slice : 0 : 12}}\r\n                            {{item?.lastName | titlecase | slice : 0 : 12}}</h2>\r\n                        <p><i class=\"far fa-calendar-alt\"></i> <span class=\"mx-1\">{{'posts.bornOn' | translate}}</span>\r\n                            {{item?.birthDate |date : 'longDate' : undefined : lang}}</p>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-userprofile-following',\r\n  templateUrl: './userprofile-following.component.html',\r\n  styleUrls: ['./userprofile-following.component.scss']\r\n})\r\nexport class UserprofileFollowingComponent implements OnInit {\r\n  profileOnHoverforFollowing = -1\r\n  constructor(public userProfilesService:UserProfileService) { }\r\nget lang() {return localStorage.getItem('currenLanguage') || 'en'}\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n<div \r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\nclass=\"darkModeClass\"\r\n>\r\n\r\n<div class=\" photos mb-3 bg-white p-3 rounded-lg\">\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n        <h2 routerLink=\"../photos\" class=\"font-weight-bold main\">{{'leftSide.photos' | translate }}</h2>\r\n        <a routerLink=\"../photos\">{{'leftSide.seeAllPhotos' | translate }}</a>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div *ngFor=\"let item of userProfilesService.photos | slice : 0 : 3\"\r\n         class=\"col-4 col-md-4 py-3\">\r\n            <div>\r\n                <div class=\"parentOfFollowing\">\r\n                    <img class=\"followImg\" [src]=\"item\" alt=\"\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-userprofile-photos',\r\n  templateUrl: './userprofile-photos.component.html',\r\n  styleUrls: ['./userprofile-photos.component.scss']\r\n})\r\nexport class UserprofilePhotosComponent implements OnInit {\r\n\r\n  constructor(public userProfilesService:UserProfileService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Input, Output, Optional, SkipSelf, InjectionToken, ChangeDetectorRef, Inject, ViewChild, forwardRef, Directive, ViewContainerRef, Attribute, ContentChild, InjectFlags, Injector, Self, TemplateRef, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, ErrorStateMatcher, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl, NgForm, FormGroupDirective, ControlContainer } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/portal';\nimport * as ɵngcc7 from '@angular/material/dialog';\nimport * as ɵngcc8 from '@angular/cdk/overlay';\nimport * as ɵngcc9 from '@angular/material/form-field';\nimport * as ɵngcc10 from '@angular/forms';\n\nconst _c0 = [\"mat-calendar-body\", \"\"];\nfunction MatCalendarBody_tr_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"td\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r0._cellPadding)(\"padding-bottom\", ctx_r0._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r0.numCols);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.label, \" \");\n} }\nfunction MatCalendarBody_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 7);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding-top\", ctx_r4._cellPadding)(\"padding-bottom\", ctx_r4._cellPadding);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r4._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : \"\", \" \");\n} }\nfunction MatCalendarBody_tr_1_td_2_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const item_r6 = ctx.$implicit; const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8._cellClicked(item_r6, $event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const colIndex_r7 = ctx.index;\n    const rowIndex_r3 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5._cellWidth)(\"padding-top\", ctx_r5._cellPadding)(\"padding-bottom\", ctx_r5._cellPadding);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-disabled\", !item_r6.enabled)(\"mat-calendar-body-active\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))(\"mat-calendar-body-range-start\", ctx_r5._isRangeStart(item_r6.compareValue))(\"mat-calendar-body-range-end\", ctx_r5._isRangeEnd(item_r6.compareValue))(\"mat-calendar-body-in-range\", ctx_r5._isInRange(item_r6.compareValue))(\"mat-calendar-body-comparison-bridge-start\", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-bridge-end\", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))(\"mat-calendar-body-comparison-start\", ctx_r5._isComparisonStart(item_r6.compareValue))(\"mat-calendar-body-comparison-end\", ctx_r5._isComparisonEnd(item_r6.compareValue))(\"mat-calendar-body-in-comparison-range\", ctx_r5._isInComparisonRange(item_r6.compareValue))(\"mat-calendar-body-preview-start\", ctx_r5._isPreviewStart(item_r6.compareValue))(\"mat-calendar-body-preview-end\", ctx_r5._isPreviewEnd(item_r6.compareValue))(\"mat-calendar-body-in-preview\", ctx_r5._isInPreview(item_r6.compareValue));\n    ɵngcc0.ɵɵproperty(\"ngClass\", item_r6.cssClasses)(\"tabindex\", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);\n    ɵngcc0.ɵɵattribute(\"data-mat-row\", rowIndex_r3)(\"data-mat-col\", colIndex_r7)(\"aria-label\", item_r6.ariaLabel)(\"aria-disabled\", !item_r6.enabled || null)(\"aria-selected\", ctx_r5._isSelected(item_r6.compareValue));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-calendar-body-selected\", ctx_r5._isSelected(item_r6.compareValue))(\"mat-calendar-body-comparison-identical\", ctx_r5._isComparisonIdentical(item_r6.compareValue))(\"mat-calendar-body-today\", ctx_r5.todayValue === item_r6.compareValue);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r6.displayValue, \" \");\n} }\nfunction MatCalendarBody_tr_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_td_1_Template, 2, 6, \"td\", 5);\n    ɵngcc0.ɵɵtemplate(2, MatCalendarBody_tr_1_td_2_Template, 4, 46, \"td\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const rowIndex_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r2);\n} }\nfunction MatMonthView_th_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r1.long);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r1.narrow);\n} }\nconst _c1 = [\"*\"];\nfunction MatCalendar_ng_template_0_Template(rf, ctx) { }\nfunction MatCalendar_mat_month_view_2_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-month-view\", 5);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.activeDate = $event; })(\"_userSelection\", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._dateSelected($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"selected\", ctx_r1.selected)(\"dateFilter\", ctx_r1.dateFilter)(\"maxDate\", ctx_r1.maxDate)(\"minDate\", ctx_r1.minDate)(\"dateClass\", ctx_r1.dateClass)(\"comparisonStart\", ctx_r1.comparisonStart)(\"comparisonEnd\", ctx_r1.comparisonEnd);\n} }\nfunction MatCalendar_mat_year_view_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-year-view\", 6);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.activeDate = $event; })(\"monthSelected\", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._monthSelectedInYearView($event); })(\"selectedChange\", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._goToDateInView($event, \"month\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selected\", ctx_r2.selected)(\"dateFilter\", ctx_r2.dateFilter)(\"maxDate\", ctx_r2.maxDate)(\"minDate\", ctx_r2.minDate)(\"dateClass\", ctx_r2.dateClass);\n} }\nfunction MatCalendar_mat_multi_year_view_4_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-multi-year-view\", 7);\n    ɵngcc0.ɵɵlistener(\"activeDateChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.activeDate = $event; })(\"yearSelected\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13._yearSelectedInMultiYearView($event); })(\"selectedChange\", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14._goToDateInView($event, \"year\"); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r3.activeDate)(\"selected\", ctx_r3.selected)(\"dateFilter\", ctx_r3.dateFilter)(\"maxDate\", ctx_r3.maxDate)(\"minDate\", ctx_r3.minDate)(\"dateClass\", ctx_r3.dateClass);\n} }\nfunction MatDatepickerContent_ng_template_2_Template(rf, ctx) { }\nconst _c2 = [\"button\"];\nfunction MatDatepickerToggle__svg_svg_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 3);\n    ɵngcc0.ɵɵelement(1, \"path\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"\", \"matDatepickerToggleIcon\", \"\"]]];\nconst _c4 = [\"[matDatepickerToggleIcon]\"];\nconst _c5 = [[[\"input\", \"matStartDate\", \"\"]], [[\"input\", \"matEndDate\", \"\"]]];\nconst _c6 = [\"input[matStartDate]\", \"input[matEndDate]\"];\nfunction MatDatepickerActions_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 20 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 20 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) { return new (t || MatDatepickerIntl)(); };\nMatDatepickerIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatDatepickerIntl_Factory() { return new MatDatepickerIntl(); }, token: MatDatepickerIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) { return new (t || MatCalendarBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatCalendarBody.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarBody, selectors: [[\"\", \"mat-calendar-body\", \"\"]], hostAttrs: [\"role\", \"grid\", \"aria-readonly\", \"true\", 1, \"mat-calendar-body\"], inputs: { numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", previewStart: \"previewStart\", previewEnd: \"previewEnd\", label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, exportAs: [\"matCalendarBody\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], attrs: _c0, decls: 2, vars: 2, consts: [[\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], [1, \"mat-calendar-body-label\"], [\"role\", \"row\"], [\"aria-hidden\", \"true\", \"class\", \"mat-calendar-body-label\", 3, \"paddingTop\", \"paddingBottom\", 4, \"ngIf\"], [\"role\", \"gridcell\", \"class\", \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"mat-calendar-body-disabled\", \"mat-calendar-body-active\", \"mat-calendar-body-range-start\", \"mat-calendar-body-range-end\", \"mat-calendar-body-in-range\", \"mat-calendar-body-comparison-bridge-start\", \"mat-calendar-body-comparison-bridge-end\", \"mat-calendar-body-comparison-start\", \"mat-calendar-body-comparison-end\", \"mat-calendar-body-in-comparison-range\", \"mat-calendar-body-preview-start\", \"mat-calendar-body-preview-end\", \"mat-calendar-body-in-preview\", \"width\", \"paddingTop\", \"paddingBottom\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"mat-calendar-body-label\"], [\"role\", \"gridcell\", 1, \"mat-calendar-body-cell\", 3, \"ngClass\", \"tabindex\", \"click\"], [1, \"mat-calendar-body-cell-content\", \"mat-focus-indicator\"], [1, \"mat-calendar-body-cell-preview\"]], template: function MatCalendarBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendarBody_tr_0_Template, 3, 6, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatCalendarBody_tr_1_Template, 3, 2, \"tr\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._firstRowOffset < ctx.labelMinRequiredCells);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendarBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nMatCalendarBody.propDecorators = {\n    label: [{ type: Input }],\n    rows: [{ type: Input }],\n    todayValue: [{ type: Input }],\n    startValue: [{ type: Input }],\n    endValue: [{ type: Input }],\n    labelMinRequiredCells: [{ type: Input }],\n    numCols: [{ type: Input }],\n    activeCell: [{ type: Input }],\n    isRange: [{ type: Input }],\n    cellAspectRatio: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    previewStart: [{ type: Input }],\n    previewEnd: [{ type: Input }],\n    selectedValueChange: [{ type: Output }],\n    previewChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarBody, [{\n        type: Component,\n        args: [{\n                selector: '[mat-calendar-body]',\n                template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\n    percentage of the width (a variant of the trick described here:\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      aria-hidden=\\\"true\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\",\n                host: {\n                    'class': 'mat-calendar-body',\n                    'role': 'grid',\n                    'aria-readonly': 'true'\n                },\n                exportAs: 'matCalendarBody',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.mat-datepicker-dialog .mat-dialog-container{position:relative;overflow:visible}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { numCols: [{\n            type: Input\n        }], activeCell: [{\n            type: Input\n        }], isRange: [{\n            type: Input\n        }], cellAspectRatio: [{\n            type: Input\n        }], previewStart: [{\n            type: Input\n        }], previewEnd: [{\n            type: Input\n        }], selectedValueChange: [{\n            type: Output\n        }], previewChange: [{\n            type: Output\n        }], label: [{\n            type: Input\n        }], rows: [{\n            type: Input\n        }], todayValue: [{\n            type: Input\n        }], startValue: [{\n            type: Input\n        }], endValue: [{\n            type: Input\n        }], labelMinRequiredCells: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }] }); })();\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return rangeEnabled && start !== null && end !== null && start !== end &&\n        value >= start && value <= end;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n    /**\n     * Clones the selection model.\n     * @deprecated To be turned into an abstract method.\n     * @breaking-change 12.0.0\n     */\n    clone() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Not implemented');\n        }\n        return null;\n    }\n}\nMatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) { return new (t || MatDateSelectionModel)(ɵngcc0.ɵɵinject(undefined), ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDateSelectionModel, factory: MatDateSelectionModel.ɵfac });\nMatDateSelectionModel.ctorParameters = () => [\n    { type: undefined },\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: undefined }, { type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) { return new (t || MatSingleDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatSingleDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatSingleDateSelectionModel, factory: MatSingleDateSelectionModel.ɵfac });\nMatSingleDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSingleDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0;\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return (start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) { return new (t || MatRangeDateSelectionModel)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nMatRangeDateSelectionModel.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatRangeDateSelectionModel, factory: MatRangeDateSelectionModel.ɵfac });\nMatRangeDateSelectionModel.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRangeDateSelectionModel, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) { return new (t || DefaultMatCalendarRangeStrategy)(ɵngcc0.ɵɵinject(ɵngcc2.DateAdapter)); };\nDefaultMatCalendarRangeStrategy.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DefaultMatCalendarRangeStrategy, factory: DefaultMatCalendarRangeStrategy.ɵfac });\nDefaultMatCalendarRangeStrategy.ctorParameters = () => [\n    { type: DateAdapter }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DefaultMatCalendarRangeStrategy, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc2.DateAdapter }]; }, null); })();\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return !!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n}\nMatMonthView.ɵfac = function MatMonthView_Factory(t) { return new (t || MatMonthView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8)); };\nMatMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMonthView, selectors: [[\"mat-month-view\"]], viewQuery: function MatMonthView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMonthView\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 13, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"7\", \"aria-hidden\", \"true\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\", \"isRange\", \"labelMinRequiredCells\", \"activeCell\", \"selectedValueChange\", \"previewChange\", \"keydown\"], [\"scope\", \"col\"]], template: function MatMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵtemplate(3, MatMonthView_th_3_Template, 2, 2, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tr\");\n        ɵngcc0.ɵɵelement(5, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) { return ctx._dateSelected($event); })(\"previewChange\", function MatMonthView_Template_tbody_previewChange_6_listener($event) { return ctx._previewChanged($event); })(\"keydown\", function MatMonthView_Template_tbody_keydown_6_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._weekdays);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._monthLabel)(\"rows\", ctx._weeks)(\"todayValue\", ctx._todayDate)(\"startValue\", ctx._rangeStart)(\"endValue\", ctx._rangeEnd)(\"comparisonStart\", ctx._comparisonRangeStart)(\"comparisonEnd\", ctx._comparisonRangeEnd)(\"previewStart\", ctx._previewStart)(\"previewEnd\", ctx._previewEnd)(\"isRange\", ctx._isRange)(\"labelMinRequiredCells\", 3)(\"activeCell\", ctx._dateAdapter.getDate(ctx.activeDate) - 1);\n    } }, directives: [ɵngcc1.NgForOf, MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMonthView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }, { type: Optional }] }\n];\nMatMonthView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-month-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\n    </tr>\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMonthView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }, {\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) { return new (t || MatMultiYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatMultiYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMultiYearView, selectors: [[\"mat-multi-year-view\"]], viewQuery: function MatMultiYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matMultiYearView\"], decls: 5, vars: 7, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatMultiYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._yearSelected($event); })(\"keydown\", function MatMultiYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"rows\", ctx._years)(\"todayValue\", ctx._todayYear)(\"startValue\", ctx._selectedYear)(\"endValue\", ctx._selectedYear)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._getActiveCell());\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatMultiYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatMultiYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMultiYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-multi-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matMultiYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage);\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return (a % b + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() { return this._activeDate; }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined || month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = function MatYearView_Factory(t) { return new (t || MatYearView)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nMatYearView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatYearView, selectors: [[\"mat-year-view\"]], viewQuery: function MatYearView_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendarBody, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._matCalendarBody = _t.first);\n    } }, inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, exportAs: [\"matYearView\"], decls: 5, vars: 9, consts: [[\"role\", \"presentation\", 1, \"mat-calendar-table\"], [1, \"mat-calendar-table-header\"], [\"colspan\", \"4\", 1, \"mat-calendar-table-header-divider\"], [\"mat-calendar-body\", \"\", 3, \"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"cellAspectRatio\", \"activeCell\", \"selectedValueChange\", \"keydown\"]], template: function MatYearView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelement(3, \"th\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 3);\n        ɵngcc0.ɵɵlistener(\"selectedValueChange\", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) { return ctx._monthSelected($event); })(\"keydown\", function MatYearView_Template_tbody_keydown_4_listener($event) { return ctx._handleCalendarBodyKeydown($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"label\", ctx._yearLabel)(\"rows\", ctx._months)(\"todayValue\", ctx._todayMonth)(\"startValue\", ctx._selectedMonth)(\"endValue\", ctx._selectedMonth)(\"labelMinRequiredCells\", 2)(\"numCols\", 4)(\"cellAspectRatio\", 4 / 7)(\"activeCell\", ctx._dateAdapter.getMonth(ctx.activeDate));\n    } }, directives: [MatCalendarBody], encapsulation: 2, changeDetection: 0 });\nMatYearView.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatYearView.propDecorators = {\n    activeDate: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    activeDateChange: [{ type: Output }],\n    _matCalendarBody: [{ type: ViewChild, args: [MatCalendarBody,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatYearView, [{\n        type: Component,\n        args: [{\n                selector: 'mat-year-view',\n                template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\",\n                exportAs: 'matYearView',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { selectedChange: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], activeDateChange: [{\n            type: Output\n        }], activeDate: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], _matCalendarBody: [{\n            type: ViewChild,\n            args: [MatCalendarBody]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month' ?\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return !this.calendar.minDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return !this.calendar.maxDate ||\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) { return new (t || MatCalendarHeader)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatCalendar)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendarHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendarHeader, selectors: [[\"mat-calendar-header\"]], exportAs: [\"matCalendarHeader\"], ngContentSelectors: _c1, decls: 10, vars: 10, consts: [[1, \"mat-calendar-header\"], [1, \"mat-calendar-controls\"], [\"mat-button\", \"\", \"type\", \"button\", \"cdkAriaLive\", \"polite\", 1, \"mat-calendar-period-button\", 3, \"click\"], [1, \"mat-calendar-arrow\"], [1, \"mat-calendar-spacer\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-previous-button\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-calendar-next-button\", 3, \"disabled\", \"click\"]], template: function MatCalendarHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_2_listener() { return ctx.currentPeriodClicked(); });\n        ɵngcc0.ɵɵelementStart(3, \"span\");\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(6, \"div\", 4);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_8_listener() { return ctx.previousClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatCalendarHeader_Template_button_click_9_listener() { return ctx.nextClicked(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.periodButtonLabel)(\"aria-describedby\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._buttonDescriptionId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.periodButtonText);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-calendar-invert\", ctx.calendar.currentView !== \"month\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.previousEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.prevButtonLabel);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", !ctx.nextEnabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.nextButtonLabel);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc5.CdkAriaLive], encapsulation: 2, changeDetection: 0 });\nMatCalendarHeader.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: MatCalendar, decorators: [{ type: Inject, args: [forwardRef(() => MatCalendar),] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendarHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar-header',\n                template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <div class=\\\"mat-calendar-arrow\\\"\\n           [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"></div>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\",\n                exportAs: 'matCalendarHeader',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatCalendar)]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() { return this._startAt; }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() { return this._minDate; }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() { return this._maxDate; }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() { return this._clampedActiveDate; }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() { return this._currentView; }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const currentView = this.currentView;\n        let view;\n        if (currentView === 'month') {\n            view = this.monthView;\n        }\n        else if (currentView === 'year') {\n            view = this.yearView;\n        }\n        else {\n            view = this.multiYearView;\n        }\n        view._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = function MatCalendar_Factory(t) { return new (t || MatCalendar)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatCalendar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCalendar, selectors: [[\"mat-calendar\"]], viewQuery: function MatCalendar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatMonthView, 1);\n        ɵngcc0.ɵɵviewQuery(MatYearView, 1);\n        ɵngcc0.ɵɵviewQuery(MatMultiYearView, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearView = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiYearView = _t.first);\n    } }, hostAttrs: [1, \"mat-calendar\"], inputs: { startView: \"startView\", startAt: \"startAt\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", headerComponent: \"headerComponent\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, exportAs: [\"matCalendar\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 5, consts: [[3, \"cdkPortalOutlet\"], [\"cdkMonitorSubtreeFocus\", \"\", \"tabindex\", \"-1\", 1, \"mat-calendar-content\", 3, \"ngSwitch\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\", 4, \"ngSwitchCase\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"activeDateChange\", \"_userSelection\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"monthSelected\", \"selectedChange\"], [3, \"activeDate\", \"selected\", \"dateFilter\", \"maxDate\", \"minDate\", \"dateClass\", \"activeDateChange\", \"yearSelected\", \"selectedChange\"]], template: function MatCalendar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatCalendar_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatCalendar_mat_month_view_2_Template, 1, 8, \"mat-month-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatCalendar_mat_year_view_3_Template, 1, 6, \"mat-year-view\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, \"mat-multi-year-view\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._calendarHeaderPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"month\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"year\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"multi-year\");\n    } }, directives: [ɵngcc6.CdkPortalOutlet, ɵngcc5.CdkMonitorFocus, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, MatMonthView, MatYearView, MatMultiYearView], styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCalendar.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: ChangeDetectorRef }\n];\nMatCalendar.propDecorators = {\n    headerComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    selected: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    dateClass: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    selectedChange: [{ type: Output }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    _userSelection: [{ type: Output }],\n    monthView: [{ type: ViewChild, args: [MatMonthView,] }],\n    yearView: [{ type: ViewChild, args: [MatYearView,] }],\n    multiYearView: [{ type: ViewChild, args: [MatMultiYearView,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCalendar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-calendar',\n                template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-calendar'\n                },\n                exportAs: 'matCalendar',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],\n                styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { startView: [{\n            type: Input\n        }], selectedChange: [{\n            type: Output\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], _userSelection: [{\n            type: Output\n        }], startAt: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], headerComponent: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], monthView: [{\n            type: ViewChild,\n            args: [MatMonthView]\n        }], yearView: [{\n            type: ViewChild,\n            args: [MatYearView]\n        }], multiYearView: [{\n            type: ViewChild,\n            args: [MatMultiYearView]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatDatepickerContentMixinBase = mixinColor(MatDatepickerContentBase);\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentMixinBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, \n    /**\n     * @deprecated `intl` argument to become required.\n     * @breaking-change 12.0.0\n     */\n    intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Current state of the animation. */\n        this._animationState = 'enter';\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        // @breaking-change 12.0.0 Remove fallback for `intl`.\n        this._closeButtonText = (intl === null || intl === void 0 ? void 0 : intl.closeCalendarLabel) || 'Close calendar';\n    }\n    ngOnInit() {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value && (isRange ||\n            !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the popup to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n}\nMatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) { return new (t || MatDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_SELECTION_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl)); };\nMatDatepickerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerContent, selectors: [[\"mat-datepicker-content\"]], viewQuery: function MatDatepickerContent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCalendar, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._calendar = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-content\"], hostVars: 3, hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transformPanel.done\", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() { return ctx._animationDone.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transformPanel\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-touch\", ctx.datepicker.touchUi);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matDatepickerContent\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 20, consts: [[\"cdkTrapFocus\", \"\", 1, \"mat-datepicker-content-container\"], [3, \"id\", \"ngClass\", \"startAt\", \"startView\", \"minDate\", \"maxDate\", \"dateFilter\", \"headerComponent\", \"selected\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], [3, \"cdkPortalOutlet\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"mat-datepicker-close-button\", 3, \"color\", \"focus\", \"blur\", \"click\"]], template: function MatDatepickerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"mat-calendar\", 1);\n        ɵngcc0.ɵɵlistener(\"yearSelected\", function MatDatepickerContent_Template_mat_calendar_yearSelected_1_listener($event) { return ctx.datepicker._selectYear($event); })(\"monthSelected\", function MatDatepickerContent_Template_mat_calendar_monthSelected_1_listener($event) { return ctx.datepicker._selectMonth($event); })(\"viewChanged\", function MatDatepickerContent_Template_mat_calendar_viewChanged_1_listener($event) { return ctx.datepicker._viewChanged($event); })(\"_userSelection\", function MatDatepickerContent_Template_mat_calendar__userSelection_1_listener($event) { return ctx._handleUserSelection($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerContent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"focus\", function MatDatepickerContent_Template_button_focus_3_listener() { return ctx._closeButtonFocused = true; })(\"blur\", function MatDatepickerContent_Template_button_blur_3_listener() { return ctx._closeButtonFocused = false; })(\"click\", function MatDatepickerContent_Template_button_click_3_listener() { return ctx.datepicker.close(); });\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-content-container-with-actions\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.datepicker.id)(\"ngClass\", ctx.datepicker.panelClass)(\"startAt\", ctx.datepicker.startAt)(\"startView\", ctx.datepicker.startView)(\"minDate\", ctx.datepicker._getMinDate())(\"maxDate\", ctx.datepicker._getMaxDate())(\"dateFilter\", ctx.datepicker._getDateFilter())(\"headerComponent\", ctx.datepicker.calendarHeaderComponent)(\"selected\", ctx._getSelected())(\"dateClass\", ctx.datepicker.dateClass)(\"comparisonStart\", ctx.comparisonStart)(\"comparisonEnd\", ctx.comparisonEnd)(\"@fadeInCalendar\", \"enter\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._actionsPortal);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"cdk-visually-hidden\", !ctx._closeButtonFocused);\n        ɵngcc0.ɵɵproperty(\"color\", ctx.color || \"primary\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx._closeButtonText);\n    } }, directives: [ɵngcc5.CdkTrapFocus, MatCalendar, ɵngcc1.NgClass, ɵngcc6.CdkPortalOutlet, ɵngcc4.MatButton], styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], encapsulation: 2, data: { animation: [\n            matDatepickerAnimations.transformPanel,\n            matDatepickerAnimations.fadeInCalendar,\n        ] }, changeDetection: 0 });\nMatDatepickerContent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatDateSelectionModel },\n    { type: DateAdapter },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_RANGE_SELECTION_STRATEGY,] }] },\n    { type: MatDatepickerIntl }\n];\nMatDatepickerContent.propDecorators = {\n    _calendar: [{ type: ViewChild, args: [MatCalendar,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-content',\n                template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-datepicker-content',\n                    '[@transformPanel]': '_animationState',\n                    '(@transformPanel.done)': '_animationDone.next()',\n                    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'\n                },\n                animations: [\n                    matDatepickerAnimations.transformPanel,\n                    matDatepickerAnimations.fadeInCalendar,\n                ],\n                exportAs: 'matDatepickerContent',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['color'],\n                styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: ɵngcc2.DateAdapter }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n            }] }, { type: MatDatepickerIntl }]; }, { _calendar: [{\n            type: ViewChild,\n            args: [MatCalendar]\n        }] }); })();\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document, _model) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a popup and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() { return this._touchUi; }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() { return this._restoreFocus; }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() { return this._panelClass; }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() { return this._opened; }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._popupRef) {\n            this._setConnectedPositions(this._popupRef.getConfig().positionStrategy);\n            if (this.opened) {\n                this._popupRef.updatePosition();\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyPopup();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges =\n            input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._popupComponentRef && this._popupRef) {\n            const instance = this._popupComponentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._restoreFocus && this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the popup to the model. */\n    _applyPendingSelection() {\n        var _a, _b;\n        const instance = ((_a = this._popupComponentRef) === null || _a === void 0 ? void 0 : _a.instance) || ((_b = this._dialogRef) === null || _b === void 0 ? void 0 : _b.componentInstance);\n        instance === null || instance === void 0 ? void 0 : instance._applyPendingSelection();\n    }\n    /** Open the calendar as a dialog. */\n    _openAsDialog() {\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\n        // open at a time, however since we reset the variables in async handlers some overlays\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\n        // by holding down the enter key).\n        if (this._dialogRef) {\n            this._dialogRef.close();\n        }\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n            // These values are all the same as the defaults, but we set them explicitly so that the\n            // datepicker dialog behaves consistently even if the user changed the defaults.\n            hasBackdrop: true,\n            disableClose: false,\n            backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n            width: '',\n            height: '',\n            minWidth: '',\n            minHeight: '',\n            maxWidth: '80vw',\n            maxHeight: '',\n            position: {},\n            // Disable the dialog's automatic focus capturing, because it'll go to the close button\n            // automatically. The calendar will move focus on its own once it renders.\n            autoFocus: false,\n            // `MatDialog` has focus restoration built in, however we want to disable it since the\n            // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n            // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n            // restores focus when the animation is finished, but the datepicker does it immediately.\n            // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n            // inside the `closed` event which is dispatched immediately.\n            restoreFocus: false\n        });\n        this._dialogRef.afterClosed().subscribe(() => this.close());\n        this._forwardContentValues(this._dialogRef.componentInstance);\n    }\n    /** Open the calendar as a popup. */\n    _openAsPopup() {\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        this._destroyPopup();\n        this._createPopup();\n        this._popupComponentRef = this._popupRef.attach(portal);\n        this._forwardContentValues(this._popupComponentRef.instance);\n        // Update the position once the calendar has rendered.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this._popupRef.updatePosition();\n        });\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._actionsPortal = this._actionsPortal;\n    }\n    /** Create the popup. */\n    _createPopup() {\n        const positionStrategy = this._overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this._setConnectedPositions(positionStrategy),\n            hasBackdrop: true,\n            backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n            direction: this._dir,\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return (event.keyCode === ESCAPE && !hasModifierKey(event)) || (this.datepickerInput &&\n                hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW);\n        }))).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n    }\n    /** Destroys the current popup overlay. */\n    _destroyPopup() {\n        if (this._popupRef) {\n            this._popupRef.dispose();\n            this._popupRef = this._popupComponentRef = null;\n        }\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY\n            }\n        ]);\n    }\n}\nMatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) { return new (t || MatDatepickerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc7.MatDialog), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_DATEPICKER_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDateSelectionModel)); };\nMatDatepickerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerBase, inputs: { startView: \"startView\", xPosition: \"xPosition\", yPosition: \"yPosition\", startAt: \"startAt\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", restoreFocus: \"restoreFocus\", panelClass: \"panelClass\", opened: \"opened\", calendarHeaderComponent: \"calendarHeaderComponent\", dateClass: \"dateClass\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerBase.ctorParameters = () => [\n    { type: MatDialog },\n    { type: Overlay },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATEPICKER_SCROLL_STRATEGY,] }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDateSelectionModel }\n];\nMatDatepickerBase.propDecorators = {\n    calendarHeaderComponent: [{ type: Input }],\n    startAt: [{ type: Input }],\n    startView: [{ type: Input }],\n    color: [{ type: Input }],\n    touchUi: [{ type: Input }],\n    disabled: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    restoreFocus: [{ type: Input }],\n    yearSelected: [{ type: Output }],\n    monthSelected: [{ type: Output }],\n    viewChanged: [{ type: Output }],\n    dateClass: [{ type: Input }],\n    openedStream: [{ type: Output, args: ['opened',] }],\n    closedStream: [{ type: Output, args: ['closed',] }],\n    panelClass: [{ type: Input }],\n    opened: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc7.MatDialog }, { type: ɵngcc8.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDateSelectionModel }]; }, { startView: [{\n            type: Input\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], yearSelected: [{\n            type: Output\n        }], monthSelected: [{\n            type: Output\n        }], viewChanged: [{\n            type: Output\n        }], openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], startAt: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], touchUi: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], restoreFocus: [{\n            type: Input\n        }], panelClass: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], calendarHeaderComponent: [{\n            type: Input\n        }], dateClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = function MatDatepicker_Factory(t) { return ɵMatDatepicker_BaseFactory(t || MatDatepicker); };\nMatDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepicker, selectors: [[\"mat-datepicker\"]], exportAs: [\"matDatepicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDatepicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDatepicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\nconst ɵMatDatepicker_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatDatepicker);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker',\n                template: '',\n                exportAs: 'matDatepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid ?\n                null : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue) ?\n                null : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return (!min || !controlValue ||\n                this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n                null : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return (!max || !controlValue ||\n                this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n                null : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() { return !!this._disabled || this._parentDisabled(); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value =\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) { return new (t || MatDatepickerInputBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDatepickerInputBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatDatepickerInputBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\nMatDatepickerInputBase.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    dateChange: [{ type: Output }],\n    dateInput: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInputBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, { dateChange: [{\n            type: Output\n        }], dateInput: [{\n            type: Output\n        }], value: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) { return new (t || MatDatepickerInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDatepickerInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerInput, selectors: [[\"input\", \"matDatepicker\", \"\"]], hostAttrs: [1, \"mat-datepicker-input\"], hostVars: 6, hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatDatepickerInput_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatDatepickerInput_change_HostBindingHandler() { return ctx._onChange(); })(\"blur\", function MatDatepickerInput_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatDatepickerInput_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._datepicker ? \"dialog\" : null)(\"aria-owns\", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)(\"min\", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)(\"max\", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)(\"data-mat-calendar\", ctx._datepicker ? ctx._datepicker.id : null);\n    } }, inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, exportAs: [\"matDatepickerInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_DATEPICKER_VALUE_ACCESSOR,\n            MAT_DATEPICKER_VALIDATORS,\n            { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDatepickerInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDatepickerInput.propDecorators = {\n    matDatepicker: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    dateFilter: [{ type: Input, args: ['matDatepickerFilter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matDatepicker]',\n                providers: [\n                    MAT_DATEPICKER_VALUE_ACCESSOR,\n                    MAT_DATEPICKER_VALIDATORS,\n                    { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                ],\n                host: {\n                    'class': 'mat-datepicker-input',\n                    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)'\n                },\n                exportAs: 'matDatepickerInput'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { matDatepicker: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input,\n            args: ['matDatepickerFilter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) { return new (t || MatDatepickerToggleIcon)(); };\nMatDatepickerToggleIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerToggleIcon, selectors: [[\"\", \"matDatepickerToggleIcon\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggleIcon, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerToggleIcon]'\n            }]\n    }], null, null); })();\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.stateChanges : of();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) { return new (t || MatDatepickerToggle)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatDatepickerToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerToggle, selectors: [[\"mat-datepicker-toggle\"]], contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDatepickerToggleIcon, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._customIcon = _t.first);\n    } }, viewQuery: function MatDatepickerToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._button = _t.first);\n    } }, hostAttrs: [1, \"mat-datepicker-toggle\"], hostVars: 8, hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerToggle_click_HostBindingHandler($event) { return ctx._open($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"data-mat-calendar\", ctx.datepicker ? ctx.datepicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-datepicker-toggle-active\", ctx.datepicker && ctx.datepicker.opened)(\"mat-accent\", ctx.datepicker && ctx.datepicker.color === \"accent\")(\"mat-warn\", ctx.datepicker && ctx.datepicker.color === \"warn\");\n    } }, inputs: { tabIndex: \"tabIndex\", disabled: \"disabled\", datepicker: [\"for\", \"datepicker\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], disableRipple: \"disableRipple\" }, exportAs: [\"matDatepickerToggle\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 4, vars: 6, consts: [[\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"disabled\", \"disableRipple\"], [\"button\", \"\"], [\"class\", \"mat-datepicker-toggle-default-icon\", \"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 4, \"ngIf\"], [\"viewBox\", \"0 0 24 24\", \"width\", \"24px\", \"height\", \"24px\", \"fill\", \"currentColor\", \"focusable\", \"false\", 1, \"mat-datepicker-toggle-default-icon\"], [\"d\", \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"]], template: function MatDatepickerToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, \"svg\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"disableRipple\", ctx.disableRipple);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.datepicker ? \"dialog\" : null)(\"aria-label\", ctx.ariaLabel || ctx._intl.openCalendarLabel)(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._customIcon);\n    } }, directives: [ɵngcc4.MatButton, ɵngcc1.NgIf], styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerToggle.ctorParameters = () => [\n    { type: MatDatepickerIntl },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatDatepickerToggle.propDecorators = {\n    datepicker: [{ type: Input, args: ['for',] }],\n    tabIndex: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    disabled: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    _customIcon: [{ type: ContentChild, args: [MatDatepickerToggleIcon,] }],\n    _button: [{ type: ViewChild, args: ['button',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-toggle',\n                template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\",\n                host: {\n                    'class': 'mat-datepicker-toggle',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                    // Used by the test harness to tie this toggle to its datepicker.\n                    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                    // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                    // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                    // it so that the input doesn't get focused automatically by the form field (See #21836).\n                    '(click)': '_open($event)'\n                },\n                exportAs: 'matDatepickerToggle',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], datepicker: [{\n            type: Input,\n            args: ['for']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], disableRipple: [{\n            type: Input\n        }], _customIcon: [{\n            type: ContentChild,\n            args: [MatDatepickerToggleIcon]\n        }], _button: [{\n            type: ViewChild,\n            args: ['button']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput ? this._rangeInput._endInput :\n            this._rangeInput._startInput);\n        opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) { return new (t || MatDateRangeInputPartBase)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatDateRangeInputPartBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDateRangeInputPartBase, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatDateRangeInputPartBase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInputPartBase, [{\n        type: Directive\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\nconst _MatDateRangeInputBase = \n// Needs to be `as any`, because the base class is abstract.\nmixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return (!start || !end ||\n                this._dateAdapter.compareDate(start, end) <= 0) ?\n                null : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.start) ? !!change.selection.start :\n                !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = function MatStartDate_Factory(t) { return new (t || MatStartDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatStartDate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStartDate, selectors: [[\"input\", \"matStartDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-start-date\", \"mat-date-range-input-inner\"], hostVars: 6, hostBindings: function MatStartDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatStartDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatStartDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatStartDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatStartDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"id\", ctx._rangeInput.id)(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStartDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStartDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matStartDate]',\n                host: {\n                    'class': 'mat-start-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.id]': '_rangeInput.id',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n        // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n        // constructor once ViewEngine is removed.\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return (!end || !start ||\n                this._dateAdapter.compareDate(end, start) >= 0) ?\n                null : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    ngOnInit() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngOnInit();\n    }\n    ngDoCheck() {\n        // Normally this happens automatically, but it seems to break if not added explicitly when all\n        // of the criteria below are met:\n        // 1) The class extends a TS mixin.\n        // 2) The application is running in ViewEngine.\n        // 3) The application is being transpiled through tsickle.\n        // This can be removed once google3 is completely migrated to Ivy.\n        super.ngDoCheck();\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.end) ? !!change.selection.end :\n                !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = function MatEndDate_Factory(t) { return new (t || MatEndDate)(ɵngcc0.ɵɵdirectiveInject(MAT_DATE_RANGE_INPUT_PARENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DATE_FORMATS, 8)); };\nMatEndDate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatEndDate, selectors: [[\"input\", \"matEndDate\", \"\"]], hostAttrs: [\"type\", \"text\", 1, \"mat-end-date\", \"mat-date-range-input-inner\"], hostVars: 5, hostBindings: function MatEndDate_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function MatEndDate_input_HostBindingHandler($event) { return ctx._onInput($event.target.value); })(\"change\", function MatEndDate_change_HostBindingHandler() { return ctx._onChange(); })(\"keydown\", function MatEndDate_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"blur\", function MatEndDate_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx._rangeInput.rangePicker ? \"dialog\" : null)(\"aria-owns\", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)(\"min\", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)(\"max\", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);\n    } }, inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n            { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatEndDate.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DATE_RANGE_INPUT_PARENT,] }] },\n    { type: ElementRef },\n    { type: ErrorStateMatcher },\n    { type: Injector },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_FORMATS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatEndDate, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matEndDate]',\n                host: {\n                    'class': 'mat-end-date mat-date-range-input-inner',\n                    '[disabled]': 'disabled',\n                    '(input)': '_onInput($event.target.value)',\n                    '(change)': '_onChange()',\n                    '(keydown)': '_onKeydown($event)',\n                    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                    '(blur)': '_onBlur()',\n                    'type': 'text'\n                },\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                    { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true }\n                ],\n                // These need to be specified explicitly, because some tooling doesn't\n                // seem to pick them up from the base class. See #20932.\n                outputs: ['dateChange', 'dateInput'],\n                inputs: ['errorStateMatcher']\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DATE_RANGE_INPUT_PARENT]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc10.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc10.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_FORMATS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField === null || _formField === void 0 ? void 0 : _formField._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            _elementRef.nativeElement.classList.add('mat-mdc-input-element');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return (start || end) ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() { return this._rangePicker; }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                var _a, _b;\n                (_a = this._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n                (_b = this._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() { return !!this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() { return this._dateFilter; }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() { return this._min; }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() { return this._max; }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return (this._startInput && this._endInput) ?\n            (this._startInput.disabled && this._endInput.disabled) :\n            this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return (!this._formField || (this._formField.getLabelId() &&\n            !this._formField._shouldLabelFloat())) && this.empty;\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) { return new (t || MatDateRangeInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc10.ControlContainer, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DateAdapter, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatDateRangeInput.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDateRangeInput, selectors: [[\"mat-date-range-input\"]], contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStartDate, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatEndDate, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._startInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._endInput = _t.first);\n    } }, hostAttrs: [\"role\", \"group\", 1, \"mat-date-range-input\"], hostVars: 8, hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", null)(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-describedby\", ctx._ariaDescribedBy)(\"data-mat-calendar\", ctx.rangePicker ? ctx.rangePicker.id : null);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-hide-placeholders\", ctx._shouldHidePlaceholders())(\"mat-date-range-input-required\", ctx.required);\n    } }, inputs: { separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\" }, exportAs: [\"matDateRangeInput\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n            { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c6, decls: 9, vars: 4, consts: [[\"cdkMonitorSubtreeFocus\", \"\", 1, \"mat-date-range-input-container\", 3, \"cdkFocusChange\"], [1, \"mat-date-range-input-start-wrapper\"], [\"aria-hidden\", \"true\", 1, \"mat-date-range-input-mirror\"], [1, \"mat-date-range-input-separator\"], [1, \"mat-date-range-input-end-wrapper\"]], template: function MatDateRangeInput_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"cdkFocusChange\", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) { return ctx._updateFocus($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"span\", 2);\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 4);\n        ɵngcc0.ɵɵprojection(8, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵtextInterpolate(ctx._getInputMirrorValue());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"mat-date-range-input-separator-hidden\", ctx._shouldHideSeparator());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.separator);\n    } }, directives: [ɵngcc5.CdkMonitorFocus], styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDateRangeInput.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Self }] },\n    { type: DateAdapter, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatDateRangeInput.propDecorators = {\n    rangePicker: [{ type: Input }],\n    required: [{ type: Input }],\n    dateFilter: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    disabled: [{ type: Input }],\n    separator: [{ type: Input }],\n    comparisonStart: [{ type: Input }],\n    comparisonEnd: [{ type: Input }],\n    _startInput: [{ type: ContentChild, args: [MatStartDate,] }],\n    _endInput: [{ type: ContentChild, args: [MatEndDate,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangeInput, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-input',\n                template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\",\n                exportAs: 'matDateRangeInput',\n                host: {\n                    'class': 'mat-date-range-input',\n                    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                    '[class.mat-date-range-input-required]': 'required',\n                    '[attr.id]': 'null',\n                    'role': 'group',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-describedby]': '_ariaDescribedBy',\n                    // Used by the test harness to tie this input to its calendar. We can't depend on\n                    // `aria-owns` for this, because it's only defined while the calendar is open.\n                    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                    { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                ],\n                styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc10.ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.DateAdapter, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc9.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { separator: [{\n            type: Input\n        }], comparisonStart: [{\n            type: Input\n        }], comparisonEnd: [{\n            type: Input\n        }], rangePicker: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], dateFilter: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _startInput: [{\n            type: ContentChild,\n            args: [MatStartDate]\n        }], _endInput: [{\n            type: ContentChild,\n            args: [MatEndDate]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = function MatDateRangePicker_Factory(t) { return ɵMatDateRangePicker_BaseFactory(t || MatDateRangePicker); };\nMatDateRangePicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDateRangePicker, selectors: [[\"mat-date-range-picker\"]], exportAs: [\"matDateRangePicker\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n            MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n            { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function MatDateRangePicker_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\nconst ɵMatDateRangePicker_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatDateRangePicker);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDateRangePicker, [{\n        type: Component,\n        args: [{\n                selector: 'mat-date-range-picker',\n                template: '',\n                exportAs: 'matDateRangePicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                    { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = function MatDatepickerApply_Factory(t) { return new (t || MatDatepickerApply)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerApply.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerApply, selectors: [[\"\", \"matDatepickerApply\", \"\"], [\"\", \"matDateRangePickerApply\", \"\"]], hostBindings: function MatDatepickerApply_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerApply_click_HostBindingHandler() { return ctx._applySelection(); });\n    } } });\nMatDatepickerApply.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerApply, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                host: { '(click)': '_applySelection()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = function MatDatepickerCancel_Factory(t) { return new (t || MatDatepickerCancel)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase)); };\nMatDatepickerCancel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDatepickerCancel, selectors: [[\"\", \"matDatepickerCancel\", \"\"], [\"\", \"matDateRangePickerCancel\", \"\"]], hostBindings: function MatDatepickerCancel_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDatepickerCancel_click_HostBindingHandler() { return ctx._datepicker.close(); });\n    } } });\nMatDatepickerCancel.ctorParameters = () => [\n    { type: MatDatepickerBase }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerCancel, [{\n        type: Directive,\n        args: [{\n                selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                host: { '(click)': '_datepicker.close()' }\n            }]\n    }], function () { return [{ type: MatDatepickerBase }]; }, null); })();\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        var _a;\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = function MatDatepickerActions_Factory(t) { return new (t || MatDatepickerActions)(ɵngcc0.ɵɵdirectiveInject(MatDatepickerBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nMatDatepickerActions.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDatepickerActions, selectors: [[\"mat-datepicker-actions\"], [\"mat-date-range-picker-actions\"]], viewQuery: function MatDatepickerActions_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._template = _t.first);\n    } }, ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[1, \"mat-datepicker-actions\"]], template: function MatDatepickerActions_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatDatepickerActions_ng_template_0_Template, 2, 0, \"ng-template\");\n    } }, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDatepickerActions.ctorParameters = () => [\n    { type: MatDatepickerBase },\n    { type: ViewContainerRef }\n];\nMatDatepickerActions.propDecorators = {\n    _template: [{ type: ViewChild, args: [TemplateRef,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerActions, [{\n        type: Component,\n        args: [{\n                selector: 'mat-datepicker-actions, mat-date-range-picker-actions',\n                template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatDatepickerBase }, { type: ɵngcc0.ViewContainerRef }]; }, { _template: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = function MatDatepickerModule_Factory(t) { return new (t || MatDatepickerModule)(); };\nMatDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDatepickerModule });\nMatDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        MatDatepickerIntl,\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatDialogModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n        ], CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDatepickerModule, { declarations: function () { return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatDialogModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule, MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker, MatDatepickerActions, MatDatepickerCancel, MatDatepickerApply]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatDialogModule,\n                    OverlayModule,\n                    A11yModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                declarations: [\n                    MatCalendar,\n                    MatCalendarBody,\n                    MatDatepicker,\n                    MatDatepickerContent,\n                    MatDatepickerInput,\n                    MatDatepickerToggle,\n                    MatDatepickerToggleIcon,\n                    MatMonthView,\n                    MatYearView,\n                    MatMultiYearView,\n                    MatCalendarHeader,\n                    MatDateRangeInput,\n                    MatStartDate,\n                    MatEndDate,\n                    MatDateRangePicker,\n                    MatDatepickerActions,\n                    MatDatepickerCancel,\n                    MatDatepickerApply\n                ],\n                providers: [\n                    MatDatepickerIntl,\n                    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n                ],\n                entryComponents: [\n                    MatDatepickerContent,\n                    MatCalendarHeader,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_material_datepicker_datepicker_a, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as ɵangular_material_src_material_datepicker_datepicker_b, MatDatepickerBase as ɵangular_material_src_material_datepicker_datepicker_c, MatDatepickerInputBase as ɵangular_material_src_material_datepicker_datepicker_d, MAT_DATE_RANGE_INPUT_PARENT as ɵangular_material_src_material_datepicker_datepicker_e };\n\n//# sourceMappingURL=datepicker.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            }\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nAutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n        this._measuringClass = _platform.FIREFOX ?\n            'cdk-textarea-autosize-measuring-firefox' :\n            'cdk-textarea-autosize-measuring';\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() { return this._minRows; }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() { return this._maxRows; }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() { return this._enabled; }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        this._textareaElement.parentNode.removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add(this._measuringClass);\n        textarea.placeholder = '';\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove(this._measuringClass);\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], \n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); };\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill, CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill, CdkTextareaAutosize]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Inject, Optional, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_ERROR, useExisting: MatError }])] });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                },\n                providers: [{ provide: MAT_ERROR, useExisting: MatError }]\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-hint-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: _MAT_HINT, useExisting: MatHint }])] });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                },\n                providers: [{ provide: _MAT_HINT, useExisting: MatHint }]\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_PREFIX, useExisting: MatPrefix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]',\n                providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SUFFIX, useExisting: MatSuffix }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]',\n                providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldMixinBase {\n    constructor(_elementRef, _changeDetectorRef, \n    /**\n     * @deprecated `_labelOptions` parameter no longer being used. To be removed.\n     * @breaking-change 12.0.0\n     */\n    // Use `ElementRef` here so Angular has something to inject.\n    _labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() { return this._appearance; }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /** Text for the form field hint. */\n    get hintLabel() { return this._hintLabel; }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat());\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'start') : null;\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find(hint => hint.align === 'end') : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 3);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 3);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _MAT_HINT, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 3);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 40, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat())(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MAT_ERROR, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [_MAT_HINT, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MAT_PREFIX, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MAT_SUFFIX, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MAT_ERROR, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [_MAT_HINT, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MAT_PREFIX, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MAT_SUFFIX, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserProfileRoutingModule } from './user-profile-routing.module';\r\nimport { UserprofileComponent } from './userprofile/userprofile.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { UserAboutComponent } from './user-about/user-about.component';\r\nimport { UserLayoutComponent } from './user-layout/user-layout.component';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatFormFieldControl, MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { FriendsComponent } from './friends/friends.component';\r\nimport { PhotosComponent } from './photos/photos.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SwiperModule } from 'swiper/angular';\r\nimport { ProfilePhotosComponent } from './profile-photos/profile-photos.component';\r\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\r\nimport { UserprofilePhotosComponent } from './userprofile-photos/userprofile-photos.component';\r\nimport { UserprofileFollowingComponent } from './userprofile-following/userprofile-following.component';\r\nimport { UserprofileFollowersComponent } from './userprofile-followers/userprofile-followers.component';\r\nimport { UserprofileIntroComponent } from './userprofile-intro/userprofile-intro.component';\r\nimport { PeopeYouMayKnowComponent } from './peope-you-may-know/peope-you-may-know.component';\r\nimport { AddPostComponent } from './add-post/add-post.component';\r\n@NgModule({\r\n  declarations: [\r\n    UserprofileComponent,\r\n    UserAboutComponent,\r\n    UserLayoutComponent,\r\n    FriendsComponent,\r\n    PhotosComponent,\r\n    ProfilePhotosComponent,\r\n    UserprofilePhotosComponent,\r\n    UserprofileFollowingComponent,\r\n    UserprofileFollowersComponent,\r\n    UserprofileIntroComponent,\r\n    PeopeYouMayKnowComponent,\r\n    AddPostComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UserProfileRoutingModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    SharedModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    NgxSkeletonLoaderModule,\r\n    SwiperModule,\r\n    CarouselModule.forRoot()\r\n  ],\r\n  providers: [\r\n    DatePipe\r\n  ]\r\n})\r\nexport class UserProfileModule { }\r\n","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, HostListener, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.\n * @breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nimport * as ɵngcc5 from '@angular/material/form-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    get matAutosizeMinRows() { return this.minRows; }\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    get matAutosizeMaxRows() { return this.maxRows; }\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    get matAutosize() { return this.enabled; }\n    set matAutosize(value) { this.enabled = value; }\n    get matTextareaAutosize() { return this.enabled; }\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputMixinBase {\n    constructor(_elementRef, _platform, \n    /** @docs-private */\n    ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    let el = event.target;\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() { return this._id; }\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Input type of the element. */\n    get type() { return this._type; }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._inputValueAccessor.value; }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() { return this._readonly; }\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder ?\n                element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 9, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"data-placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-invalid\", ctx.errorState && !ctx.empty)(\"aria-required\", ctx.required);\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"] }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    userAriaDescribedBy: [{ type: Input, args: ['aria-describedby',] }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }],\n    _focusChanged: [{ type: HostListener, args: ['focus', ['true'],] }, { type: HostListener, args: ['blur', ['false'],] }],\n    _onInput: [{ type: HostListener, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    // At the time of writing, we have a lot of customer tests that look up the input based on its\n                    // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                    // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                    '[attr.data-placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    // Only mark the input as invalid for assistive technology if it has a value since the\n                    // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                    '[attr.aria-invalid]': 'errorState && !empty',\n                    '[attr.aria-required]': 'required'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    /** Callback for the cases where the focused state of the input changes. */\n    // tslint:disable:no-host-decorator-in-concrete\n    // tslint:enable:no-host-decorator-in-concrete\n    _focusChanged: [{\n            type: HostListener,\n            args: ['focus', ['true']]\n        }, {\n            type: HostListener,\n            args: ['blur', ['false']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _onInput: [{\n            type: HostListener,\n            args: ['input']\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], userAriaDescribedBy: [{\n            type: Input,\n            args: ['aria-describedby']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = function MatInputModule_Factory(t) { return new (t || MatInputModule)(); };\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n            MatCommonModule,\n        ], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput, MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule,\n        MatCommonModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule, MatInput, MatTextareaAutosize]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserProfileService } from 'src/app/services/user-profile.service';\r\nimport { emptyContent } from 'src/app/shared/emptyContentValidator';\r\n\r\n@Component({\r\n  selector: 'app-userprofile-intro',\r\n  templateUrl: './userprofile-intro.component.html',\r\n  styleUrls: ['./userprofile-intro.component.scss']\r\n})\r\nexport class UserprofileIntroComponent implements OnInit,OnDestroy {\r\n\r\n  showBioTextArea = false\r\n  bioLoading: boolean = false\r\n  bioForm: FormGroup\r\n  subscriptions: any[] = [];\r\n  textAreaLength: any = 0\r\n  @ViewChild('bioo', { static: false }) bioo: ElementRef\r\n  translatedSnacBarTextOne:any\r\n  translatedSnacBarTextTwo:any\r\n  constructor(public userProfilesService:UserProfileService,\r\n    private cd: ChangeDetectorRef,\r\n    private _snackBar: MatSnackBar,\r\n    private fb:FormBuilder,private translate:TranslateService) { \r\n      this.subscriptions.push( this.translate.get('about.bioDeleted').subscribe(res => {\r\n        this.translatedSnacBarTextOne=res\r\n     }))\r\n     this.subscriptions.push(\r\n      this.translate.get('about.deleted').subscribe(res => {\r\n        this.translatedSnacBarTextTwo=res\r\n     }))\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.bioForm = this.fb.group({\r\n      bio: [``, [Validators.required, emptyContent]]\r\n    })\r\n  }\r\n  addBio(value: any) {\r\n    this.bioLoading = true\r\n    this.subscriptions.push(\r\n      this.userProfilesService.addPersonalInfo(value).subscribe(\r\n        res => {\r\n          this.showBioTextArea = false\r\n          this.bioLoading = false\r\n          this.subscriptions.push(\r\n            this.userProfilesService.getMyProfile().subscribe(\r\n              (res: any) => {\r\n                this.userProfilesService.userProfile = res?.user\r\n              },\r\n              err => {\r\n              }\r\n\r\n            )\r\n          )\r\n        },\r\n        err => {\r\n          this.showBioTextArea = false\r\n          this.bioLoading = false\r\n        }\r\n      )\r\n    )\r\n  }\r\n    //  start count bio textarea length\r\n    remaining() {\r\n      this.showBioTextArea = true\r\n      this.cd.detectChanges()\r\n      this.textAreaLength = this.bioo.nativeElement.value.length\r\n    }\r\n    //  end count bio textarea length\r\n    deleteBio() {\r\n      this.bioLoading = true\r\n      this.subscriptions.push(\r\n        this.userProfilesService.deleteInfo({ bio: '' }).subscribe(\r\n          res => {\r\n            this.bioForm.reset()\r\n            this.subscriptions.push(\r\n              this.userProfilesService.getMyProfile().subscribe(\r\n                (res: any) => {\r\n                  this.bioLoading = false\r\n                  this.showBioTextArea = false\r\n                  this.userProfilesService.userProfile = res?.user\r\n                  this.openSnackBar(this.translatedSnacBarTextOne, this.translatedSnacBarTextTwo)\r\n                },\r\n                err => {\r\n                  this.bioLoading = false\r\n                }\r\n  \r\n              )\r\n            )\r\n          },\r\n          err => {\r\n            this.bioLoading = false\r\n          }\r\n        )\r\n      )\r\n    }\r\n    openSnackBar(one: any, two: any) {\r\n      this._snackBar.open(one, two, {\r\n        horizontalPosition: 'left',\r\n        verticalPosition: 'bottom',\r\n        duration: 3000\r\n      });\r\n    }\r\n      //  start batch value for bio textarea to edit the bio\r\n  patchhValue() {\r\n    this.bioForm.patchValue({\r\n      bio: this.userProfilesService?.userProfile?.bio\r\n    })\r\n  }\r\n  //  end batch value for bio textarea to edit the bio\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(sub => {\r\n      sub.unsubscribe()\r\n    })\r\n  }\r\n}\r\n","\r\n<div \r\n[class.darkMode]=\"userProfilesService.userProfile?.darkMode\"\r\nclass=\"darkModeClass\"\r\n>\r\n<div class=\"  intro bg-white p-3 rounded-lg mb-3\">\r\n    <h2 class=\"font-weight-bold\">{{'leftSide.intro' |translate}}</h2>\r\n    <!-- start Bio -->\r\n    <div class=\"d-none d-md-block\">\r\n        <h3 *ngIf=\"userProfilesService.userProfile?.bio && !showBioTextArea\" class=\"my-2 text-center\">\r\n            {{userProfilesService.userProfile?.bio | titlecase}}</h3>\r\n        <div class=\"position-relative\">\r\n            <div class=\"bioLoading\" *ngIf=\"bioLoading\">\r\n                <div class=\"lds-ellipsis\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n            <form [formGroup]=\"bioForm\" (ngSubmit)=\"addBio(bioForm.value)\" class=\"mb-3\" *ngIf=\"showBioTextArea\">\r\n                <textarea formControlName='bio' #bioo placeholder=\"{{'layOut.describe' | translate}}\" maxLength=\"101\"\r\n                    (keyup)=\"remaining()\" class=\"text-center p-2 bioo\"></textarea>\r\n                <span class=\"d-block my-1 text-secondary text-right\">{{101 - textAreaLength}} {{'layOut.remaining' | translate}}</span>\r\n                <div class=\"d-flex\">\r\n                    <button (click)=\"showBioTextArea=false\" type=\"button\"\r\n                        class=\" cancell btn\">{{'posts.cancel' | translate}}</button>\r\n                    <button type=\"button\" *ngIf=\"userProfilesService.userProfile?.bio\"\r\n                        (click)=\"deleteBio()\" type=\"button\" class=\"mx-2 cancell btn\">{{'about.remove' | translate}}</button>\r\n                    <button [disabled]=\"bioForm.invalid\" type=\"submit\"\r\n                        [class.mx-2]=\"!userProfilesService.userProfile?.bio\"\r\n                        class=\" btn btn-primary\">{{'about.save' | translate}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <p *ngIf=\"!showBioTextArea\" (click)=\"patchhValue();remaining();\" class=\"  font-weight-bold rounded-lg p-2 text-center mb-3 mt-2\">\r\n            <a>{{(userProfilesService.userProfile?.bio ? 'layOut.editBio' : 'layOut.addBio') | translate}} </a>\r\n        </p>\r\n    </div>\r\n    <!-- end Bio -->\r\n    <!-- start personal information -->\r\n    <h3 *ngIf=\"userProfilesService.userProfile?.work\" class=\"my-2 d-flex \">\r\n        <i class=\"fas fa-briefcase\"></i>\r\n        <span class=\"mx-2\">\r\n            {{'about.worksAt' | translate}}\r\n            <small class=\"font-weight-bold\">\r\n                {{userProfilesService.userProfile?.work | titlecase}}\r\n            </small>\r\n        </span>\r\n    </h3>\r\n    <h3 *ngIf=\"userProfilesService.userProfile?.study\" class=\"my-2 d-flex \">\r\n        <i class=\"fas fa-graduation-cap\"></i>\r\n        <span class=\"mx-2\">\r\n            {{'about.studiedAt' | translate}} <small class=\"font-weight-bold\">\r\n                {{userProfilesService.userProfile?.study | titlecase}}\r\n            </small>\r\n        </span>\r\n    </h3>\r\n    <h3 *ngIf=\"userProfilesService.userProfile?.location\" class=\"my-2 d-flex \">\r\n        <i class=\"fas fa-home\"></i>\r\n        <span class=\"mx-2\">\r\n            {{'about.livesIn' | translate}} <small class=\"font-weight-bold\">{{userProfilesService.userProfile?.location | titlecase }}</small>\r\n        </span>\r\n    </h3>\r\n    <h3 *ngIf=\"userProfilesService.userProfile?.socialCondition\" class=\"my-2 d-flex \">\r\n        <i class=\"fas fa-heart\"></i>\r\n        <span class=\"mx-2\">\r\n            {{userProfilesService.userProfile?.socialCondition | titlecase}}\r\n        </span>\r\n    </h3>\r\n    <p routerLink='/myProfile/layout/about' class=\"font-weight-bold rounded-lg p-2 text-center\">\r\n        <a>{{'about.editDetails' | translate }}</a></p>\r\n    <!-- end personal information -->\r\n</div>\r\n\r\n</div>\r\n"],"sourceRoot":"webpack:///"}